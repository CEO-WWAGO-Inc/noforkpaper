From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Corey Shupe <coreyshupe101@gmail.com>
Date: Wed, 11 Jan 2023 16:40:31 -0500
Subject: [PATCH] Add Listing API for Player


diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index de960716478477ce199526b8f860cfafa1541ee9..a430528e4fe1f8f3ee384acf2b046f418c5c0b96 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -1483,6 +1483,43 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
     @org.jetbrains.annotations.ApiStatus.Experimental // Paper
     public boolean canSee(@NotNull Entity entity);
 
+    // paper start
+    /**
+     * Determines if the {@code other} player is listed for {@code this}.
+     *
+     * @param other The other {@link Player} to check for listing.
+     * @return True if the {@code other} player is listed for {@code this}.
+     */
+    public boolean isListed(Player other);
+
+    /**
+     * Sets the {@code other} player as listed or unlisted.
+     *
+     * @param plugin The {@link Plugin} which wants to mutate the {@code other} player's listing.
+     * @param other The other {@link Player} to set listed or unlisted.
+     * @param listed Whether the {@code other} player should be listed or de-listed.
+     */
+    public void setListed(@NotNull Plugin plugin, Player other, boolean listed);
+
+    /**
+     * De-lists the {@code other} player.
+     *
+     * @param plugin The {@link Plugin} that is de-listing the {@code other} player.
+     * @param other The other {@link Player} to de-list.
+     * @return True if the {@code other} player was listed.
+     */
+    public boolean deListPlayer(@NotNull Plugin plugin, Player other);
+
+    /**
+     * Lists the {@code other} player. This method is equivalent to {@code setListed(other, true)}.
+     *
+     * @param plugin The {@link Plugin} that is listing the {@code other} player.
+     * @param other The other {@link Player} to list.
+     * @return True if the {@code other} player was not listed.
+     */
+    public boolean listPlayer(@NotNull Plugin plugin, Player other);
+    // paper end
+
     /**
      * Checks to see if this player is currently flying or not.
      *
@@ -1982,7 +2019,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param saturationLevel the saturation level of the player
      */
     public void sendHealthUpdate(final double health, final int foodLevel, final float saturationLevel);
-    
+
     /**
      * Forcefully sends a health update to the player.
      * This uses the player's current health, saturation, and food level.
@@ -1991,7 +2028,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public void sendHealthUpdate();
     // Paper end
-    
+
     /**
      * Gets the entity which is followed by the camera when in
      * {@link GameMode#SPECTATOR}.
