From f6a3be20c88046ed457cde196e01e397888d89c9 Mon Sep 17 00:00:00 2001
From: AlphaBlend <whizkid3000@hotmail.com>
Date: Sun, 20 Nov 2016 15:37:47 -0800
Subject: [PATCH] Added PlayerFlowerPotManipulateEvent for manipulating
 contents of flowerpots


diff --git a/src/main/java/com/destroystokyo/paper/event/player/PlayerFlowerPotManipulateEvent.java b/src/main/java/com/destroystokyo/paper/event/player/PlayerFlowerPotManipulateEvent.java
new file mode 100644
index 0000000..848e601
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/player/PlayerFlowerPotManipulateEvent.java
@@ -0,0 +1,74 @@
+package com.destroystokyo.paper.event.player;
+
+import javax.annotation.Nonnull;
+import org.bukkit.block.Block;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.bukkit.inventory.ItemStack;
+
+/**
+ * Called when a player places or takes an item in a flowerpot
+ */
+public class PlayerFlowerPotManipulateEvent extends PlayerEvent implements Cancellable {
+
+    private static final HandlerList handlers = new HandlerList();
+    private final Block flowerpot;
+    private final ItemStack item;
+    private final boolean placing;
+    private boolean cancel;
+
+    public PlayerFlowerPotManipulateEvent(final Player player, @Nonnull final Block flowerpot, @Nonnull final ItemStack item, final boolean placing) {
+        super(player);
+        this.flowerpot = flowerpot;
+        this.item = item;
+        this.placing = placing;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancel;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancel = cancel;
+    }
+
+    /**
+     * Gets the flowerpot that is involved in this event.
+     * @return the flowerpot that is involved with this event
+     */
+    @Nonnull
+    public Block getFlowerpot() {
+        return flowerpot;
+    }
+
+    /**
+     * Gets the item being placed, or taken from, the flower pot.
+     * Check if placing with {@link #isPlacing()}.
+     * @return the item placed, or taken from, the flowerpot
+     */
+    @Nonnull
+    public ItemStack getItem() {
+        return item;
+    }
+
+    /**
+     * Gets if the item is being placed into the flowerpot.
+     * @return if the item is being placed into the flowerpot
+     */
+    public boolean isPlacing() {
+        return placing;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
2.10.0.windows.1

