From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Togira <70365614+Togira123@users.noreply.github.com>
Date: Sat, 21 May 2022 16:22:08 +0200
Subject: [PATCH] Add BrainMemoryChangeEvent


diff --git a/src/main/java/io/papermc/paper/event/entity/BrainMemoryChangeEvent.java b/src/main/java/io/papermc/paper/event/entity/BrainMemoryChangeEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..6c38c5f04431a407ac964f0d8bf22ca8c41304c9
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/entity/BrainMemoryChangeEvent.java
@@ -0,0 +1,59 @@
+package io.papermc.paper.event.entity;
+
+import org.bukkit.entity.memory.MemoryKey;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+public class BrainMemoryChangeEvent extends Event implements Cancellable {
+    private enum type {
+        ADD, CHANGE, DELETE
+    }
+
+    public static final type ADD = type.ADD;
+    public static final type CHANGE = type.CHANGE;
+    public static final type DELETE = type.DELETE;
+    private static final HandlerList handlers = new HandlerList();
+
+    private boolean cancelled;
+    private final MemoryKey<?> memoryToBeRemoved;
+    private final type changeType;
+
+    public BrainMemoryChangeEvent(@NotNull MemoryKey<?> memoryToBeRemoved, type type) {
+        super();
+        this.memoryToBeRemoved = memoryToBeRemoved;
+        this.changeType = type;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    @NotNull
+    public MemoryKey<?> getMemoryToBeRemoved() {
+        return memoryToBeRemoved;
+    }
+
+    @NotNull
+    public type getType() {
+        return changeType;
+    }
+
+}
