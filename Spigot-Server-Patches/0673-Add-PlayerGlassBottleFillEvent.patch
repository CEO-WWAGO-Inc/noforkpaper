From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dmitry Sidorov <jonmagon@gmail.com>
Date: Tue, 2 Feb 2021 19:53:04 +0300
Subject: [PATCH] Add PlayerGlassBottleFillEvent


diff --git a/src/main/java/net/minecraft/server/BlockBeehive.java b/src/main/java/net/minecraft/server/BlockBeehive.java
index eda45e7f2f824c42653d6c545172efc7c96ef332..50956f67e9d71c5cc5c887c1fd0c580629179336 100644
--- a/src/main/java/net/minecraft/server/BlockBeehive.java
+++ b/src/main/java/net/minecraft/server/BlockBeehive.java
@@ -1,6 +1,7 @@
 package net.minecraft.server;
 
 import io.papermc.paper.event.block.PlayerShearBlockEvent; // Paper - PlayerShearBlockEvent namespace conflicts
+import io.papermc.paper.event.player.PlayerGlassBottleFillEvent; // Paper
 
 import java.util.Iterator;
 import java.util.List;
@@ -94,13 +95,30 @@ public class BlockBeehive extends BlockTileEntity {
                 });
                 flag = true;
             } else if (itemstack.getItem() == Items.GLASS_BOTTLE) {
+                // Paper start - PlayerGlassBottleFillEvent
+                PlayerGlassBottleFillEvent event = new PlayerGlassBottleFillEvent((org.bukkit.entity.Player) entityhuman.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemstack), org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(new ItemStack(Items.HONEY_BOTTLE)));
+                if (!event.callEvent()) {
+                    if (entityhuman instanceof EntityPlayer) {
+                        ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
+                    }
+                    return EnumInteractionResult.PASS;
+                }
+                ItemStack newitem = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getNewItem());
+                // Paper end - PlayerGlassBottleFillEvent
                 itemstack.subtract(1);
                 world.playSound(entityhuman, entityhuman.locX(), entityhuman.locY(), entityhuman.locZ(), SoundEffects.ITEM_BOTTLE_FILL, SoundCategory.NEUTRAL, 1.0F, 1.0F);
+
+                // Paper - replace new ItemStack(Items.HONEY_BOTTLE) with newitem
                 if (itemstack.isEmpty()) {
-                    entityhuman.a(enumhand, new ItemStack(Items.HONEY_BOTTLE));
-                } else if (!entityhuman.inventory.pickup(new ItemStack(Items.HONEY_BOTTLE))) {
-                    entityhuman.drop(new ItemStack(Items.HONEY_BOTTLE), false);
+                    entityhuman.a(enumhand, newitem);
+                } else if (!entityhuman.inventory.pickup(newitem)) {
+                    entityhuman.drop(newitem, false);
+                }
+                // Paper start - PlayerGlassBottleFillEvent, fix visual glitch
+                else if (entityhuman instanceof EntityPlayer) {
+                    ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
                 }
+                // Paper end - PlayerGlassBottleFillEvent
 
                 flag = true;
             }
diff --git a/src/main/java/net/minecraft/server/BlockCauldron.java b/src/main/java/net/minecraft/server/BlockCauldron.java
index 9fed3883828e7d6ca917a5eca7a7a3e37582f983..af93a36e2129bfd8441bfa6446460ed29f90a72b 100644
--- a/src/main/java/net/minecraft/server/BlockCauldron.java
+++ b/src/main/java/net/minecraft/server/BlockCauldron.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import io.papermc.paper.event.player.PlayerGlassBottleFillEvent; // Paper
 import org.bukkit.event.block.CauldronLevelChangeEvent; // CraftBukkit
 
 public class BlockCauldron extends Block {
@@ -100,6 +101,16 @@ public class BlockCauldron extends Block {
                         }
                         if (!entityhuman.abilities.canInstantlyBuild) {
                             itemstack1 = PotionUtil.a(new ItemStack(Items.POTION), Potions.WATER);
+                            // Paper start - PlayerGlassBottleFillEvent
+                            PlayerGlassBottleFillEvent event = new PlayerGlassBottleFillEvent((org.bukkit.entity.Player) entityhuman.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemstack), org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemstack1));
+                            if (!event.callEvent()) {
+                                if (entityhuman instanceof EntityPlayer) {
+                                    ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
+                                }
+                                return EnumInteractionResult.PASS;
+                            }
+                            itemstack1 = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getNewItem());
+                            // Paper end - PlayerGlassBottleFillEvent
                             entityhuman.a(StatisticList.USE_CAULDRON);
                             itemstack.subtract(1);
                             if (itemstack.isEmpty()) {
diff --git a/src/main/java/net/minecraft/server/ItemGlassBottle.java b/src/main/java/net/minecraft/server/ItemGlassBottle.java
index 40248f0bd91183fb85763cc08e9bc0d4a9af4bdd..6b4e25d180782e45d716ad5e2b3490409068f61c 100644
--- a/src/main/java/net/minecraft/server/ItemGlassBottle.java
+++ b/src/main/java/net/minecraft/server/ItemGlassBottle.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import io.papermc.paper.event.player.PlayerGlassBottleFillEvent; // Paper
+
 import java.util.List;
 
 public class ItemGlassBottle extends Item {
@@ -20,7 +22,10 @@ public class ItemGlassBottle extends Item {
 
             entityareaeffectcloud.setRadius(entityareaeffectcloud.getRadius() - 0.5F);
             world.playSound((EntityHuman) null, entityhuman.locX(), entityhuman.locY(), entityhuman.locZ(), SoundEffects.ITEM_BOTTLE_FILL_DRAGONBREATH, SoundCategory.NEUTRAL, 1.0F, 1.0F);
-            return InteractionResultWrapper.a(this.a(itemstack, entityhuman, new ItemStack(Items.DRAGON_BREATH)), world.s_());
+            // Paper start - PlayerGlassBottleFillEvent
+            //return InteractionResultWrapper.a(this.a(itemstack, entityhuman, new ItemStack(Items.DRAGON_BREATH)), world.s_());
+            return handleInteractedItemStack(world, entityhuman, itemstack, new ItemStack(Items.DRAGON_BREATH));
+            // Paper end - PlayerGlassBottleFillEvent
         } else {
             MovingObjectPositionBlock movingobjectpositionblock = a(world, entityhuman, RayTrace.FluidCollisionOption.SOURCE_ONLY);
 
@@ -36,7 +41,10 @@ public class ItemGlassBottle extends Item {
 
                     if (world.getFluid(blockposition).a((Tag) TagsFluid.WATER)) {
                         world.playSound(entityhuman, entityhuman.locX(), entityhuman.locY(), entityhuman.locZ(), SoundEffects.ITEM_BOTTLE_FILL, SoundCategory.NEUTRAL, 1.0F, 1.0F);
-                        return InteractionResultWrapper.a(this.a(itemstack, entityhuman, PotionUtil.a(new ItemStack(Items.POTION), Potions.WATER)), world.s_());
+                        // Paper start - PlayerGlassBottleFillEvent
+                        //return InteractionResultWrapper.a(this.a(itemstack, entityhuman, PotionUtil.a(new ItemStack(Items.POTION), Potions.WATER)), world.s_());
+                        return handleInteractedItemStack(world, entityhuman, itemstack, PotionUtil.a(new ItemStack(Items.POTION), Potions.WATER));
+                        // Paper end - PlayerGlassBottleFillEvent
                     }
                 }
 
@@ -45,6 +53,21 @@ public class ItemGlassBottle extends Item {
         }
     }
 
+    // Paper start - PlayerGlassBottleFillEvent
+    protected InteractionResultWrapper<ItemStack> handleInteractedItemStack(World world, EntityHuman entityhuman, ItemStack itemstack, ItemStack newitemstack) {
+        PlayerGlassBottleFillEvent event = new PlayerGlassBottleFillEvent((org.bukkit.entity.Player) entityhuman.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemstack), org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(newitemstack));
+        if (event.callEvent()) {
+            return InteractionResultWrapper.a(this.a(itemstack, entityhuman, org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getNewItem())), world.s_());
+        }
+        else {
+            if (entityhuman instanceof EntityPlayer) {
+                ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
+            }
+            return InteractionResultWrapper.pass(itemstack);
+        }
+    }
+    // Paper end - PlayerGlassBottleFillEvent
+
     protected ItemStack a(ItemStack itemstack, EntityHuman entityhuman, ItemStack itemstack1) {
         entityhuman.b(StatisticList.ITEM_USED.b(this));
         return ItemLiquidUtil.a(itemstack, entityhuman, itemstack1);
