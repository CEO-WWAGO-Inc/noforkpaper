From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TrollyLoki <trollyloki@gmail.com>
Date: Thu, 28 Sep 2023 22:47:28 -0400
Subject: [PATCH] Add optional title parameters to inventory open methods in
 HumanEntity


diff --git a/src/main/java/org/bukkit/entity/HumanEntity.java b/src/main/java/org/bukkit/entity/HumanEntity.java
index 8b0d04d5b39ee817555a36adddc39b18fc6f0d02..806c2a50a6dba5f9e645498b20d4c14cedb2cc65 100644
--- a/src/main/java/org/bukkit/entity/HumanEntity.java
+++ b/src/main/java/org/bukkit/entity/HumanEntity.java
@@ -2,6 +2,7 @@ package org.bukkit.entity;
 
 import java.util.Collection;
 import java.util.Set;
+import net.kyori.adventure.text.Component;
 import org.bukkit.GameMode;
 import org.bukkit.Location;
 import org.bukkit.Material;
@@ -122,8 +123,30 @@ public interface HumanEntity extends LivingEntity, AnimalTamer, InventoryHolder
      * @return The newly opened inventory view, or null if it could not be
      *     opened.
      */
+    // Paper start - default implementation
     @Nullable
-    public InventoryView openWorkbench(@Nullable Location location, boolean force);
+    public default InventoryView openWorkbench(@Nullable Location location, boolean force) {
+        return this.openWorkbench(location, force, null);
+    }
+    // Paper end
+
+    // Paper start
+    /**
+     * Opens an empty workbench inventory window with the player's inventory
+     * on the bottom.
+     *
+     * @param location The location to attach it to. If null, the player's
+     *     location is used.
+     * @param force If false, and there is no workbench block at the location,
+     *     no inventory will be opened and null will be returned.
+     * @param title The title to display at the top of the inventory. If null,
+     *     the default title is used.
+     * @return The newly opened inventory view, or null if it could not be
+     *     opened.
+     */
+    @Nullable
+    public InventoryView openWorkbench(@Nullable Location location, boolean force, @Nullable Component title);
+    // Paper end
 
     /**
      * Opens an empty enchanting inventory window with the player's inventory
@@ -136,8 +159,30 @@ public interface HumanEntity extends LivingEntity, AnimalTamer, InventoryHolder
      * @return The newly opened inventory view, or null if it could not be
      *     opened.
      */
+    // Paper start - default implementation
     @Nullable
-    public InventoryView openEnchanting(@Nullable Location location, boolean force);
+    public default InventoryView openEnchanting(@Nullable Location location, boolean force) {
+        return this.openEnchanting(location, force, null);
+    }
+    // Paper end
+
+    // Paper start
+    /**
+     * Opens an empty enchanting inventory window with the player's inventory
+     * on the bottom.
+     *
+     * @param location The location to attach it to. If null, the player's
+     *     location is used.
+     * @param force If false, and there is no enchanting table at the
+     *     location, no inventory will be opened and null will be returned.
+     * @param title The title to display at the top of the inventory. If null,
+     *     the default title is used.
+     * @return The newly opened inventory view, or null if it could not be
+     *     opened.
+     */
+    @Nullable
+    public InventoryView openEnchanting(@Nullable Location location, boolean force, @Nullable Component title);
+    // Paper end
 
     /**
      * Opens an inventory window to the specified inventory view.
@@ -187,7 +232,41 @@ public interface HumanEntity extends LivingEntity, AnimalTamer, InventoryHolder
      *     opened.
      */
     @Nullable
-    public InventoryView openAnvil(@Nullable Location location, boolean force);
+    public default InventoryView openAnvil(@Nullable Location location, boolean force) {
+        return this.openAnvil(location, force, null);
+    }
+
+    /**
+     * Opens an empty anvil inventory window with the player's inventory
+     * on the bottom.
+     *
+     * @param location The location to attach it to. If null, the player's
+     *     location is used.
+     * @param force If false, and there is no anvil block at the location,
+     *     no inventory will be opened and null will be returned.
+     * @param title The title to display at the top of the inventory. If null,
+     *     the default title is used.
+     * @return The newly opened inventory view, or null if it could not be
+     *     opened.
+     */
+    @Nullable
+    public InventoryView openAnvil(@Nullable Location location, boolean force, @Nullable Component title);
+
+    /**
+     * Opens an empty cartography table inventory window with the player's inventory
+     * on the bottom.
+     *
+     * @param location The location to attach it to. If null, the player's
+     *     location is used.
+     * @param force If false, and there is no cartography table block at the location,
+     *     no inventory will be opened and null will be returned.
+     * @return The newly opened inventory view, or null if it could not be
+     *     opened.
+     */
+    @Nullable
+    public default InventoryView openCartographyTable(@Nullable Location location, boolean force) {
+        return this.openCartographyTable(location, force, null);
+    }
 
     /**
      * Opens an empty cartography table inventory window with the player's inventory
@@ -197,11 +276,29 @@ public interface HumanEntity extends LivingEntity, AnimalTamer, InventoryHolder
      *     location is used.
      * @param force If false, and there is no cartography table block at the location,
      *     no inventory will be opened and null will be returned.
+     * @param title The title to display at the top of the inventory. If null,
+     *     the default title is used.
+     * @return The newly opened inventory view, or null if it could not be
+     *     opened.
+     */
+    @Nullable
+    public InventoryView openCartographyTable(@Nullable Location location, boolean force, @Nullable Component title);
+
+    /**
+     * Opens an empty grindstone inventory window with the player's inventory
+     * on the bottom.
+     *
+     * @param location The location to attach it to. If null, the player's
+     *     location is used.
+     * @param force If false, and there is no grindstone block at the location,
+     *     no inventory will be opened and null will be returned.
      * @return The newly opened inventory view, or null if it could not be
      *     opened.
      */
     @Nullable
-    public InventoryView openCartographyTable(@Nullable Location location, boolean force);
+    public default InventoryView openGrindstone(@Nullable Location location, boolean force) {
+        return this.openGrindstone(location, force, null);
+    }
 
     /**
      * Opens an empty grindstone inventory window with the player's inventory
@@ -211,11 +308,13 @@ public interface HumanEntity extends LivingEntity, AnimalTamer, InventoryHolder
      *     location is used.
      * @param force If false, and there is no grindstone block at the location,
      *     no inventory will be opened and null will be returned.
+     * @param title The title to display at the top of the inventory. If null,
+     *     the default title is used.
      * @return The newly opened inventory view, or null if it could not be
      *     opened.
      */
     @Nullable
-    public InventoryView openGrindstone(@Nullable Location location, boolean force);
+    public InventoryView openGrindstone(@Nullable Location location, boolean force, @Nullable Component title);
 
     /**
      * Opens an empty loom inventory window with the player's inventory
@@ -229,7 +328,41 @@ public interface HumanEntity extends LivingEntity, AnimalTamer, InventoryHolder
      *     opened.
      */
     @Nullable
-    public InventoryView openLoom(@Nullable Location location, boolean force);
+    public default InventoryView openLoom(@Nullable Location location, boolean force) {
+        return this.openLoom(location, force, null);
+    }
+
+    /**
+     * Opens an empty loom inventory window with the player's inventory
+     * on the bottom.
+     *
+     * @param location The location to attach it to. If null, the player's
+     *     location is used.
+     * @param force If false, and there is no loom block at the location,
+     *     no inventory will be opened and null will be returned.
+     * @param title The title to display at the top of the inventory. If null,
+     *     the default title is used.
+     * @return The newly opened inventory view, or null if it could not be
+     *     opened.
+     */
+    @Nullable
+    public InventoryView openLoom(@Nullable Location location, boolean force, @Nullable Component title);
+
+    /**
+     * Opens an empty smithing table inventory window with the player's inventory
+     * on the bottom.
+     *
+     * @param location The location to attach it to. If null, the player's
+     *     location is used.
+     * @param force If false, and there is no smithing table block at the location,
+     *     no inventory will be opened and null will be returned.
+     * @return The newly opened inventory view, or null if it could not be
+     *     opened.
+     */
+    @Nullable
+    public default InventoryView openSmithingTable(@Nullable Location location, boolean force) {
+        return this.openSmithingTable(location, force, null);
+    }
 
     /**
      * Opens an empty smithing table inventory window with the player's inventory
@@ -239,11 +372,29 @@ public interface HumanEntity extends LivingEntity, AnimalTamer, InventoryHolder
      *     location is used.
      * @param force If false, and there is no smithing table block at the location,
      *     no inventory will be opened and null will be returned.
+     * @param title The title to display at the top of the inventory. If null,
+     *     the default title is used.
      * @return The newly opened inventory view, or null if it could not be
      *     opened.
      */
     @Nullable
-    public InventoryView openSmithingTable(@Nullable Location location, boolean force);
+    public InventoryView openSmithingTable(@Nullable Location location, boolean force, @Nullable Component title);
+
+    /**
+     * Opens an empty stonecutter inventory window with the player's inventory
+     * on the bottom.
+     *
+     * @param location The location to attach it to. If null, the player's
+     *     location is used.
+     * @param force If false, and there is no stonecutter block at the location,
+     *     no inventory will be opened and null will be returned.
+     * @return The newly opened inventory view, or null if it could not be
+     *     opened.
+     */
+    @Nullable
+    public default InventoryView openStonecutter(@Nullable Location location, boolean force) {
+        return this.openStonecutter(location, force, null);
+    }
 
     /**
      * Opens an empty stonecutter inventory window with the player's inventory
@@ -253,11 +404,13 @@ public interface HumanEntity extends LivingEntity, AnimalTamer, InventoryHolder
      *     location is used.
      * @param force If false, and there is no stonecutter block at the location,
      *     no inventory will be opened and null will be returned.
+     * @param title The title to display at the top of the inventory. If null,
+     *     the default title is used.
      * @return The newly opened inventory view, or null if it could not be
      *     opened.
      */
     @Nullable
-    public InventoryView openStonecutter(@Nullable Location location, boolean force);
+    public InventoryView openStonecutter(@Nullable Location location, boolean force, @Nullable Component title);
     // Paper end
 
     /**
