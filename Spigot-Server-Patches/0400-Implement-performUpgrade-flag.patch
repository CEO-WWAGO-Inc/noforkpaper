From ac009b69cf305bc05efc2dc299a4be5d17571381 Mon Sep 17 00:00:00 2001
From: kickash32 <kickash32@gmail.com>
Date: Fri, 7 Jun 2019 18:54:35 -0400
Subject: [PATCH] Implement performUpgrade flag


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 184f1b00..17e5378f 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -58,7 +58,11 @@ import org.bukkit.craftbukkit.Main;
 import org.bukkit.event.server.ServerLoadEvent;
 // CraftBukkit end
 import org.spigotmc.SlackActivityAccountant; // Spigot
-import co.aikar.timings.MinecraftTimings; // Paper
+// Paper start
+import co.aikar.timings.MinecraftTimings;
+import java.io.FileOutputStream;
+import java.io.OutputStream;
+// Paper end
 
 public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTask> implements IMojangStatistics, ICommandListener, AutoCloseable, Runnable {
 
@@ -141,6 +145,7 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
     private final CircularTimer ap;
     private boolean aq;
     private boolean forceUpgrade;
+    private boolean performUpgrade; // Paper
     private boolean eraseCache;
     private float at;
     public final Executor executorService;
@@ -167,6 +172,7 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
     public final double[] recentTps = new double[ 3 ];
     public final SlackActivityAccountant slackActivityAccountant = new SlackActivityAccountant();
     // Spigot end
+    String worldMetaFile = "papermeta.yml"; // Paper
 
     public MinecraftServer(OptionSet options, Proxy proxy, DataFixer datafixer, CommandDispatcher commanddispatcher, YggdrasilAuthenticationService yggdrasilauthenticationservice, MinecraftSessionService minecraftsessionservice, GameProfileRepository gameprofilerepository, UserCache usercache, WorldLoadListenerFactory worldloadlistenerfactory, String s) {
         super("Server");
@@ -263,7 +269,7 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
             });
         }
 
-        if (this.forceUpgrade) {
+        if (this.forceUpgrade || (this.performUpgrade && !this.isForceUpgradeDone(s))) { // Paper
             MinecraftServer.LOGGER.info("Forcing world upgrade! {}", s); // CraftBukkit
             WorldData worlddata = this.getConvertable().b(s); // CraftBukkit
 
@@ -298,10 +304,65 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
                     }
                 }
             }
+            recordForceUpgradeDone(s); // Paper
         }
 
     }
 
+    // Paper start
+    private boolean isForceUpgradeDone(String world){
+        boolean result = false;
+        String filename = world + "/" + "level.dat";
+        try {
+            File file = new File(filename);
+
+            WorldData worlddata = Convertable.a(file, (DataFixer)this.dataConverterManager);
+            String ver = worlddata.getLastForceUpgradeVersion();
+            result = this.getVersion().equals(ver);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return result;
+    }
+
+    private void recordForceUpgradeDone(String world){
+        String filename = world + "/" + "level.dat";
+        try {
+            File level_datFile = new File(filename);
+
+            WorldData worlddata = Convertable.a(level_datFile, (DataFixer)this.dataConverterManager);
+            worlddata.setLastForceUpgradeVersion(this.getVersion());
+
+            worlddata.d(19133);
+            NBTTagCompound nbttagcompound1 = worlddata.a((NBTTagCompound) null);
+            NBTTagCompound nbttagcompound2 = new NBTTagCompound();
+
+            nbttagcompound2.set("Data", nbttagcompound1);
+
+            File file = new File(world, "level.dat_new");
+            File file1 = new File(world, "level.dat_old");
+            File file2 = new File(world, "level.dat");
+
+            NBTCompressedStreamTools.a(nbttagcompound2, (OutputStream) (new FileOutputStream(level_datFile)));
+            if (file1.exists()) {
+                file1.delete();
+            }
+
+            file2.renameTo(file1);
+            if (file2.exists()) {
+                file2.delete();
+            }
+
+            file.renameTo(file2);
+            if (file.exists()) {
+                file.delete();
+                }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+    // Paper end
+
     protected synchronized void b(IChatBaseComponent ichatbasecomponent) {
         this.S = ichatbasecomponent;
     }
@@ -1326,6 +1387,12 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
                 dedicatedserver.setForceUpgrade(true);
             }
 
+            // Paper start
+            if (optionset.has("performUpgrade")) {
+                dedicatedserver.setPerformUpgrade(true);
+            }
+            // Paper end
+
             if (optionset.has("eraseCache")) {
                 dedicatedserver.setEraseCache(true);
             }
@@ -1346,6 +1413,12 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
         this.forceUpgrade = flag;
     }
 
+    // Paper start
+    protected void setPerformUpgrade(boolean flag) {
+        this.performUpgrade = flag;
+    }
+    // Paper end
+
     protected void setEraseCache(boolean flag) {
         this.eraseCache = flag;
     }
diff --git a/src/main/java/net/minecraft/server/WorldData.java b/src/main/java/net/minecraft/server/WorldData.java
index d4b0cca2..b5e043fa 100644
--- a/src/main/java/net/minecraft/server/WorldData.java
+++ b/src/main/java/net/minecraft/server/WorldData.java
@@ -74,6 +74,7 @@ public class WorldData {
     private final GameRules Y;
     private final CustomFunctionCallbackTimerQueue<MinecraftServer> Z;
     public WorldServer world; // CraftBukkit
+    private String lastForceUpgrade; // Paper
 
     protected WorldData() {
         this.f = WorldType.NORMAL;
@@ -280,6 +281,7 @@ public class WorldData {
             this.X = UUID.fromString(nbttagcompound.getString("WanderingTraderId"));
         }
 
+        this.lastForceUpgrade = nbttagcompound.getString("LastForceUpgrade"); // Paper
     }
 
     public WorldData(WorldSettings worldsettings, String s) {
@@ -426,6 +428,7 @@ public class WorldData {
         }
 
         nbttagcompound.setString("Bukkit.Version", Bukkit.getName() + "/" + Bukkit.getVersion() + "/" + Bukkit.getBukkitVersion()); // CraftBukkit
+        nbttagcompound.setString("LastForceUpgrade", this.lastForceUpgrade); // Paper
     }
 
     public long getSeed() {
@@ -486,6 +489,16 @@ public class WorldData {
         this.k = blockposition.getZ();
     }
 
+    // Paper start
+    public String getLastForceUpgradeVersion() {
+        return this.lastForceUpgrade;
+    }
+
+    public void setLastForceUpgradeVersion(String s) {
+        this.lastForceUpgrade = s;
+    }
+    // Paper end
+
     public String getName() {
         return this.levelName;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 405ea5c4..82960b10 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -111,6 +111,7 @@ public class Main {
                         .describedAs("Yml file");
 
                 acceptsAll(asList("forceUpgrade"), "Whether to force a world upgrade");
+                acceptsAll(asList("performUpgrade"), "Performs a world upgrade if not done in this version");
                 acceptsAll(asList("eraseCache"), "Whether to force cache erase during world upgrade");
 
                 acceptsAll(asList("nojline"), "Disables jline and emulates the vanilla console");
-- 
2.19.0

