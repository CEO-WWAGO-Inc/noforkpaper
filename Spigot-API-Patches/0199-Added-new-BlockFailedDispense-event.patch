From bb86a607cccfd07c61cf376e23db7e0c99467175 Mon Sep 17 00:00:00 2001
From: TheViperShow <29604693+TheViperShow@users.noreply.github.com>
Date: Tue, 21 Apr 2020 23:00:18 +0200
Subject: [PATCH] Added new BlockFailedDispense event


diff --git a/src/main/java/com/destroystokyo/paper/event/block/BlockFailedDispenseEvent.java b/src/main/java/com/destroystokyo/paper/event/block/BlockFailedDispenseEvent.java
new file mode 100644
index 00000000..8ca83f1e
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/block/BlockFailedDispenseEvent.java
@@ -0,0 +1,58 @@
+package com.destroystokyo.paper.event.block;
+
+import org.bukkit.block.Block;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.block.BlockEvent;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+/**
+ * Called when a block tries to dispense an item, but is empty.
+ * <p>
+ * Cancelling this event will make the block not try to dispense
+ * any item.
+ *
+ * @author TheViperShow
+ */
+public class BlockFailedDispenseEvent extends BlockEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private boolean cancelled;
+
+    public BlockFailedDispenseEvent(@NotNull Block theBlock) {
+        super(theBlock);
+    }
+
+    /**
+     * Gets the cancellation state of this event. A cancelled event will not
+     * be executed in the server, but will still pass to other plugins
+     *
+     * @return true if this event is cancelled
+     */
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    /**
+     * Sets the cancellation state of this event. A cancelled event will not
+     * be executed in the server, but will still pass to other plugins.
+     *
+     * @param cancel true if you wish to cancel this event
+     */
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+
+    @Nullable
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @Nullable
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
2.26.0.windows.1

