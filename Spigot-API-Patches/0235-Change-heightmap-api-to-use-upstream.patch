From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sat, 14 Nov 2020 13:15:03 -0800
Subject: [PATCH] Change heightmap api to use upstream


diff --git a/src/main/java/org/bukkit/Location.java b/src/main/java/org/bukkit/Location.java
index ec9eb042ee8354d17f8ad4230c4acc5fcb46f894..432d5711b7ec34eafeb27df82d367612dfe1fe54 100644
--- a/src/main/java/org/bukkit/Location.java
+++ b/src/main/java/org/bukkit/Location.java
@@ -647,7 +647,7 @@ public class Location implements Cloneable, ConfigurationSerializable {
      */
     @NotNull
     public Location toHighestLocation() {
-        return this.toHighestLocation(com.destroystokyo.paper.HeightmapType.LIGHT_BLOCKING);
+        return this.toHighestLocation(HeightMap.WORLD_SURFACE);
     }
 
     /**
@@ -656,13 +656,27 @@ public class Location implements Cloneable, ConfigurationSerializable {
      * @return A copy of this location except with y = getWorld().getHighestBlockYAt(this.getBlockX(), this.getBlockZ(), heightmap)
      * @throws NullPointerException if {{@link #getWorld()}} is {@code null}
      * @throws UnsupportedOperationException if {@link World#getHighestBlockYAt(int, int, com.destroystokyo.paper.HeightmapType)} does not support the specified heightmap
+     * @deprecated Use {@link org.bukkit.Location#toHighestLocation(HeightMap)}
      */
     @NotNull
+    @Deprecated
     public Location toHighestLocation(@NotNull final com.destroystokyo.paper.HeightmapType heightmap) {
         final Location ret = this.clone();
         ret.setY(this.getWorld().getHighestBlockYAt(this, heightmap));
         return ret;
     }
+
+    /**
+     * Returns a copy of this location except with y = getWorld().getHighestBlockYAt(this.getBlockX(), this.getBlockZ(), heightMap)
+     * @param heightMap The heightmap to use for finding the highest y location.
+     * @return A copy of this location except with y = getWorld().getHighestBlockYAt(this.getBlockX(), this.getBlockZ(), heightMap)
+     */
+    @NotNull
+    public Location toHighestLocation(@NotNull final HeightMap heightMap) {
+        final Location ret = this.clone();
+        ret.setY(this.getWorld().getHighestBlockYAt(this, heightMap));
+        return ret;
+    }
     // Paper end
 
     /**
