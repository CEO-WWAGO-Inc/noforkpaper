From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Owen1212055 <23108066+Owen1212055@users.noreply.github.com>
Date: Sun, 26 Dec 2021 00:22:29 -0500
Subject: [PATCH] Sleep Message API


diff --git a/src/main/java/io/papermc/paper/event/player/PlayerSleepMessageEvent.java b/src/main/java/io/papermc/paper/event/player/PlayerSleepMessageEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..bbc8be31d9054f9300c45bd5bfba002e12470f37
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/player/PlayerSleepMessageEvent.java
@@ -0,0 +1,102 @@
+package io.papermc.paper.event.player;
+
+import net.kyori.adventure.text.Component;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.jetbrains.annotations.NotNull;
+
+
+/**
+ * Called when the player receives a message on the current
+ * sleeping status.
+ *
+ * This will be called with cancelled as true by default if the player has the message disabled
+ * in their config.
+ */
+public class PlayerSleepMessageEvent extends PlayerEvent implements Cancellable {
+
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+
+    private Component component;
+    private final SleepMessageType type;
+    private boolean cancelled;
+
+    public PlayerSleepMessageEvent(@NotNull Player player, @NotNull SleepMessageType type, @NotNull Component component, boolean cancelled) {
+        super(player);
+        this.type = type;
+        this.component = component;
+        this.cancelled = cancelled;
+    }
+
+    /**
+     * Gets the type of sleeping message that is displayed
+     * to the player.
+     * @return sleeping message type
+     */
+    @NotNull
+    public SleepMessageType getMessageType() {
+        return type;
+    }
+
+    /**
+     * Sets the message that is displayed to the user in the
+     * action bar.
+     *
+     * @param component message
+     */
+    public void setMessage(@NotNull Component component) {
+        this.component = component;
+    }
+
+    /**
+     * Gets the message that is displayed to the user in the
+     * action bar.
+     *
+     * @return message
+     */
+    @NotNull
+    public Component getMessage() {
+        return component;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancelled = cancel;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+
+    /**
+     * Represents the action bar message that is sent to the player
+     * when they attempt to sleep.
+     */
+    public enum SleepMessageType {
+        /**
+         * Represents the message that are sent to players if they are currently
+         * skipping the night.
+         */
+        SKIPPING_NIGHT,
+        /**
+         * Represents the message that are sent to players if there
+         * are a certain number of players that are needed to sleep.
+         */
+        PLAYERS_SLEEPING_COUNT,
+        ;
+    }
+}
