From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sat, 15 May 2021 22:10:50 -0700
Subject: [PATCH] ItemStack repair check API


diff --git a/src/main/java/io/papermc/paper/APIBridge.java b/src/main/java/io/papermc/paper/APIBridge.java
index 66c2841b12e765f0b45bcfdbca6c4b58d3eef218..88b18a32682c8ea26c283a1830a265a414ff501e 100644
--- a/src/main/java/io/papermc/paper/APIBridge.java
+++ b/src/main/java/io/papermc/paper/APIBridge.java
@@ -41,4 +41,6 @@ public interface APIBridge {
     ItemRarity getItemRarity(Material material);
 
     ItemRarity getItemStackRarity(ItemStack itemStack);
+
+    boolean isValidRepairItemStack(ItemStack itemToBeRepaired, ItemStack repairMaterial);
 }
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index 8d741448282f3467b54d5eb64d7a4d7b8971f054..3f8634cc9b2ca82739b97b35fd5d48b45a941026 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -886,5 +886,27 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
     public @NotNull io.papermc.paper.inventory.ItemRarity getRarity() {
         return io.papermc.paper.APIBridge.INSTANCE.getItemStackRarity(this);
     }
+
+    /**
+     * Checks if an itemstack can repair this itemstack.
+     * Returns false if {@code this} or {@code repairMaterial}'s type is not an item ({@link Material#isItem()}).
+     *
+     * @param repairMaterial the repair material
+     * @return true if it is repairable by, false if not
+     */
+    public boolean isRepairableBy(@NotNull ItemStack repairMaterial) {
+        return io.papermc.paper.APIBridge.INSTANCE.isValidRepairItemStack(this, repairMaterial);
+    }
+
+    /**
+     * Checks if this itemstack can repair another.
+     * Returns false if {@code this} or {@code toBeRepaired}'s type is not an item ({@link Material#isItem()}).
+     *
+     * @param toBeRepaired the itemstack to be repaired
+     * @return true if it can repair, false if not
+     */
+    public boolean canRepair(@NotNull ItemStack toBeRepaired) {
+        return io.papermc.paper.APIBridge.INSTANCE.isValidRepairItemStack(toBeRepaired, this);
+    }
     // Paper end
 }
