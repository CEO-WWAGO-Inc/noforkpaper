From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: yusshu <yushu@unnamed.team>
Date: Thu, 2 Sep 2021 22:23:35 -0500
Subject: [PATCH] Implement server resource pack API


diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 7b6c547e71230fbb3733f99a4597b3f5b51547b8..78716a209c34e1fbb2db901e5729db664eaf7c4f 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -88,8 +88,12 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
     private MinecraftServerGui gui;
     @Nullable
     private final TextFilterClient textFilterClient;
+    // Paper start
     @Nullable
-    private final Component resourcePackPrompt;
+    private Component resourcePackPrompt;
+    @Nullable
+    private Boolean resourcePackRequired;
+    // Paper end
 
     // CraftBukkit start - Signature changed
     public DedicatedServer(joptsimple.OptionSet options, DataPackConfig datapackconfiguration, Thread thread, RegistryAccess.RegistryHolder iregistrycustom_dimension, LevelStorageSource.LevelStorageAccess convertable_conversionsession, PackRepository resourcepackrepository, ServerResources datapackresources, WorldData savedata, DedicatedServerSettings dedicatedserversettings, DataFixer datafixer, MinecraftSessionService minecraftsessionservice, GameProfileRepository gameprofilerepository, GameProfileCache usercache, ChunkProgressListenerFactory worldloadlistenerfactory) {
@@ -834,7 +838,10 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
 
     @Override
     public boolean isResourcePackRequired() {
-        return this.settings.getProperties().requireResourcePack;
+        if (this.resourcePackRequired == null) {
+            return this.settings.getProperties().requireResourcePack;
+        }
+        return this.resourcePackRequired;
     }
 
     @Nullable
@@ -864,6 +871,16 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         return this.resourcePackPrompt;
     }
 
+    // Paper start
+    public void setResourcePackPrompt(@Nullable Component prompt) {
+        this.resourcePackPrompt = prompt;
+    }
+
+    public void setResourcePackRequired(boolean required) {
+        this.resourcePackRequired = required;
+    }
+    // Paper end
+
     // CraftBukkit start
     public boolean isDebugging() {
         return this.getProperties().debug;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 4687827c096ecf8872ab39b00fbf9261ba5c3689..b6115ef66af1279a17c624fba8c74bf01962c220 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -2666,5 +2666,26 @@ public final class CraftServer implements Server {
         return datapackManager;
     }
 
+    @Override
+    public void setResourcePack(@Nonnull String url, @Nonnull String hash, boolean required, @Nullable net.kyori.adventure.text.Component prompt) {
+        Validate.notNull(url, "Resource pack URL cannot be null");
+        Validate.notNull(hash, "Hash cannot be null");
+        net.minecraft.network.chat.Component promptComponent = prompt != null ?
+            io.papermc.paper.adventure.PaperAdventure.asVanilla(prompt) :
+            new net.minecraft.network.chat.TextComponent("");
+        this.console.setResourcePack(url, hash);
+        this.console.setResourcePackPrompt(promptComponent);
+        this.console.setResourcePackRequired(required);
+    }
+
+    @Override
+    public void setResourcePack(@Nonnull String url, @Nonnull String hash, boolean required) {
+        this.setResourcePack(url, hash, required, null);
+    }
+
+    @Override
+    public void setResourcePack(@Nonnull String url, @Nonnull String hash) {
+        this.setResourcePack(url, hash, false);
+    }
     // Paper end
 }
