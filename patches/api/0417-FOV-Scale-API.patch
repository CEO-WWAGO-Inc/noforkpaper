From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Moulberry <james.jenour@protonmail.com>
Date: Tue, 6 Jun 2023 02:11:34 +0800
Subject: [PATCH] FOV Scale API

Modifies the player's fov by a factor
The multiplier is affected by the client Accessibility option 'FOV
Effects'

diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 88c4885569d2b8b22fce55601d50608ac8e9388c..59a0553137cd4a6492d5e40f51195584230ea9a3 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -1693,6 +1693,38 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public float getWalkSpeed();
 
+    // Paper start
+    /**
+     * Sets a multiplier applied to the Player's FOV. This is affected by
+     * the client Accessibility option 'FOV Effects'
+     * <p>
+     * WARNING: This method relies on an implementation detail of the vanilla
+     * client. Other versions or modded clients may interpret these values
+     * differently (or not at all).
+     * <p>
+     * WARNING: Using a negative value will decrease the FOV further, however
+     * it will also invert normal FOV effects (e.g. a speed potion will decrease
+     * FOV instead of increasing)
+     * <p>
+     * Force the minimum and maximum possible FOV using {@link Float#NEGATIVE_INFINITY}
+     * and {@link Float#POSITIVE_INFINITY} respectively
+     * <p>
+     * Disable normal FOV effects using {@link Float#NaN}
+     *
+     * @param value The fov scale, typically from 0.0 to 2.0
+     */
+    @ApiStatus.Experimental
+    void setFovScale(float value);
+
+    /**
+     * Gets the current multiplier applied to the Player's FOV
+     *
+     * @return value The fov scale, typically from 0.0 to 2.0
+     */
+    @ApiStatus.Experimental
+    float getFovScale();
+    // Paper end
+
     /**
      * Request that the player's client download and switch texture packs.
      * <p>
