From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alexander <alexander.neitzel@codineerdigital.com>
Date: Sun, 5 Dec 2021 15:42:55 +0100
Subject: [PATCH] Added some Blue Bolt prefixes


diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 38a0fb9a7c4ade9cacfd30dffabfea7e6b773981..2674e2e629aa67a846f15040d605be133ceb6b3c 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -183,9 +183,9 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         thread.setDaemon(true);
         thread.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandler(DedicatedServer.LOGGER));
         // thread.start(); // Paper - moved down
-        DedicatedServer.LOGGER.info("Starting minecraft server version {}", SharedConstants.getCurrentVersion().getName());
+        DedicatedServer.LOGGER.info("⚡ Blue Bolt » Starting minecraft server version {}", SharedConstants.getCurrentVersion().getName());
         if (Runtime.getRuntime().maxMemory() / 1024L / 1024L < 512L) {
-            DedicatedServer.LOGGER.warn("To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
+            DedicatedServer.LOGGER.warn("⚡ Blue Bolt » To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
         }
 
         // Paper start - detect running as root
@@ -198,7 +198,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         }
         // Paper end
 
-        DedicatedServer.LOGGER.info("Loading properties");
+        DedicatedServer.LOGGER.info("⚡ Blue Bolt » Loading properties");
         DedicatedServerProperties dedicatedserverproperties = this.settings.getProperties();
 
         if (this.isSingleplayer()) {
@@ -223,7 +223,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         try {
             com.destroystokyo.paper.PaperConfig.init((java.io.File) options.valueOf("paper-settings"));
         } catch (Exception e) {
-            DedicatedServer.LOGGER.error("Unable to load server configuration", e);
+            DedicatedServer.LOGGER.error("⚡ Blue Bolt » Unable to load server configuration", e);
             return false;
         }
         thread.start(); // Paper - start console thread after MinecraftServer.console & PaperConfig are initialized
@@ -240,7 +240,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         super.setPlayerIdleTimeout((Integer) dedicatedserverproperties.playerIdleTimeout.get());
         this.setEnforceWhitelist(dedicatedserverproperties.enforceWhitelist);
         // this.worldData.setGameType(dedicatedserverproperties.gamemode); // CraftBukkit - moved to world loading
-        DedicatedServer.LOGGER.info("Default game type: {}", dedicatedserverproperties.gamemode);
+        DedicatedServer.LOGGER.info("⚡ Blue Bolt » Default game type: {}", dedicatedserverproperties.gamemode);
         // Paper start - Unix domain socket support
         java.net.SocketAddress bindAddress;
         if (this.getLocalIp().startsWith("unix:")) {
@@ -269,7 +269,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         // Paper end
 
         this.initializeKeyPair();
-        DedicatedServer.LOGGER.info("Starting Minecraft server on {}:{}", this.getLocalIp().isEmpty() ? "*" : this.getLocalIp(), this.getPort());
+        DedicatedServer.LOGGER.info("⚡ Blue Bolt » Starting Minecraft server on {}:{}", this.getLocalIp().isEmpty() ? "*" : this.getLocalIp(), this.getPort());
 
         try {
             this.getConnection().bind(bindAddress); // Paper - Unix domain socket support
@@ -309,7 +309,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
 
             SkullBlockEntity.setup(this.getProfileCache(), this.getSessionService(), this);
             GameProfileCache.setUsesAuthentication(this.usesAuthentication());
-            DedicatedServer.LOGGER.info("Preparing level \"{}\"", this.getLevelIdName());
+            DedicatedServer.LOGGER.info("⚡ Blue Bolt » Preparing level \"{}\"", this.getLevelIdName());
             this.loadLevel(storageSource.getLevelId()); // CraftBukkit
             long j = Util.getNanos() - i;
             String s = String.format(Locale.ROOT, "%.3fs", (double) j / 1.0E9D);
@@ -320,12 +320,12 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
             }
 
             if (dedicatedserverproperties.enableQuery) {
-                DedicatedServer.LOGGER.info("Starting GS4 status listener");
+                DedicatedServer.LOGGER.info("⚡ Blue Bolt » Starting GS4 status listener");
                 this.queryThreadGs4 = QueryThreadGs4.create(this);
             }
 
             if (dedicatedserverproperties.enableRcon) {
-                DedicatedServer.LOGGER.info("Starting remote control listener");
+                DedicatedServer.LOGGER.info("⚡ Blue Bolt » Starting remote control listener");
                 this.rconThread = RconThread.create(this);
                 this.remoteConsole = new org.bukkit.craftbukkit.command.CraftRemoteConsoleCommandSender(this.rconConsoleSource); // CraftBukkit
             }
