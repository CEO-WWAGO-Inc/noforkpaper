From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Fri, 12 Mar 2021 17:09:40 -0800
Subject: [PATCH] Item Rarity API


diff --git a/src/main/java/io/papermc/paper/APIBridge.java b/src/main/java/io/papermc/paper/APIBridge.java
index 672cb1cae3a2a4a09a79cfe83b9e393ffe283502..66c2841b12e765f0b45bcfdbca6c4b58d3eef218 100644
--- a/src/main/java/io/papermc/paper/APIBridge.java
+++ b/src/main/java/io/papermc/paper/APIBridge.java
@@ -1,10 +1,12 @@
 package io.papermc.paper;
 
 import com.destroystokyo.paper.util.VersionFetcher;
+import io.papermc.paper.inventory.ItemRarity;
 import java.io.IOException;
 import net.kyori.adventure.text.Component;
 import net.kyori.adventure.text.flattener.ComponentFlattener;
 import net.kyori.adventure.util.Services;
+import org.bukkit.Material;
 import org.bukkit.command.CommandSender;
 import org.bukkit.entity.Entity;
 import org.bukkit.inventory.ItemStack;
@@ -35,4 +37,8 @@ public interface APIBridge {
     ItemStack deserializeItem(byte[] data);
 
     String getMainLevelName();
+
+    ItemRarity getItemRarity(Material material);
+
+    ItemRarity getItemStackRarity(ItemStack itemStack);
 }
diff --git a/src/main/java/io/papermc/paper/inventory/ItemRarity.java b/src/main/java/io/papermc/paper/inventory/ItemRarity.java
new file mode 100644
index 0000000000000000000000000000000000000000..7d6cd7812bb70226d88250ffbba57b811bf90cf4
--- /dev/null
+++ b/src/main/java/io/papermc/paper/inventory/ItemRarity.java
@@ -0,0 +1,28 @@
+package io.papermc.paper.inventory;
+
+import net.kyori.adventure.text.format.NamedTextColor;
+import net.kyori.adventure.text.format.TextColor;
+import org.jetbrains.annotations.NotNull;
+
+public enum ItemRarity {
+
+    COMMON(NamedTextColor.WHITE),
+    UNCOMMON(NamedTextColor.YELLOW),
+    RARE(NamedTextColor.AQUA),
+    EPIC(NamedTextColor.LIGHT_PURPLE);
+
+    final TextColor color;
+
+    ItemRarity(TextColor color) {
+        this.color = color;
+    }
+
+    /**
+     * Gets the color formatting associated with the rarity.
+     *
+     * @return the rarity color
+     */
+    public @NotNull TextColor getColor() {
+        return this.color;
+    }
+}
diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index f0f81ecad42fc3dc894ec0c150346206d70a8720..1ef51b3f4cd716dd24a882d6fc30c80db5796777 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -4414,6 +4414,16 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
             return Bukkit.getUnsafe().getBlockTranslationKey(this);
         }
     }
+
+    /**
+     * Returns the item rarity for the item. The Material <b>MUST</b> be an Item not a block.
+     * Use {@link #isItem()} before this.
+     *
+     * @return the item rarity
+     */
+    public @NotNull io.papermc.paper.inventory.ItemRarity getItemRarity() {
+        return io.papermc.paper.APIBridge.INSTANCE.getItemRarity(this);
+    }
     // Paper end
 
     /**
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index ddf3ad69b2255d09f72f76242d6a0888da968ed5..8d741448282f3467b54d5eb64d7a4d7b8971f054 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -877,5 +877,14 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
     public @NotNull String translationKey() {
         return Bukkit.getUnsafe().getTranslationKey(this);
     }
+
+    /**
+     * Gets the item rarity of the itemstack. The rarity can change based on enchantments.
+     *
+     * @return the itemstack rarity
+     */
+    public @NotNull io.papermc.paper.inventory.ItemRarity getRarity() {
+        return io.papermc.paper.APIBridge.INSTANCE.getItemStackRarity(this);
+    }
     // Paper end
 }
