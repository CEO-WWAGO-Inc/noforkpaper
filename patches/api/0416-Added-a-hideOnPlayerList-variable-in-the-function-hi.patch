From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: jmboy01 <jan-mathijs.pex@student.uhasselt.be>
Date: Fri, 26 May 2023 19:51:26 +0200
Subject: [PATCH] Added a hideOnPlayerList variable in the function hidePlayer
 and all related functions.


diff --git a/src/main/java/org/bukkit/entity/Entity.java b/src/main/java/org/bukkit/entity/Entity.java
index a2a423d4e4c2702ba5967223cab0432dd7d04732..c55f19518e92dde700c9f2ea57050c0e897c8352 100644
--- a/src/main/java/org/bukkit/entity/Entity.java
+++ b/src/main/java/org/bukkit/entity/Entity.java
@@ -604,7 +604,7 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
      * @apiNote draft API
      */
     @ApiStatus.Experimental
-    public void setVisibleByDefault(boolean visible);
+    public void setVisibleByDefault(boolean visible, boolean hideInPlayerList);
 
     /**
      * Gets whether or not this entity is visible by default.
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 9cd49bf6db451af67cd15c8857d7bf51a4e1a67a..48ff4a5bb563c83f216752edd9a3e654e655be7c 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -1570,10 +1570,10 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * Hides a player from this player
      *
      * @param player Player to hide
-     * @deprecated see {@link #hidePlayer(Plugin, Player)}
+     * @deprecated see {@link #hidePlayer(Plugin, Player, boolean)}
      */
     @Deprecated
-    public void hidePlayer(@NotNull Player player);
+    public void hidePlayer(@NotNull Player player, boolean hideInPlayerList);
 
     /**
      * Hides a player from this player
@@ -1581,7 +1581,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param plugin Plugin that wants to hide the player
      * @param player Player to hide
      */
-    public void hidePlayer(@NotNull Plugin plugin, @NotNull Player player);
+    public void hidePlayer(@NotNull Plugin plugin, @NotNull Player player, boolean hideInPlayerList);
 
     /**
      * Allows this player to see a player that was previously hidden
@@ -1616,10 +1616,11 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      *
      * @param plugin Plugin that wants to hide the entity
      * @param entity Entity to hide
+     * @param hideInPlayerList Boolean to pick if player is hidden in player list
      * @apiNote draft API
      */
     @ApiStatus.Experimental
-    public void hideEntity(@NotNull Plugin plugin, @NotNull Entity entity);
+    public void hideEntity(@NotNull Plugin plugin, @NotNull Entity entity, boolean hideInPlayerList);
 
     /**
      * Allows this player to see an entity that was previously hidden. If
@@ -2850,7 +2851,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
         }
 
         /**
-         * Gets all players hidden with {@link #hidePlayer(org.bukkit.entity.Player)}.
+         * Gets all players hidden with {@link #hidePlayer(org.bukkit.entity.Player, boolean)}.
          *
          * @return a Set with all hidden players
          */
diff --git a/src/main/java/org/bukkit/event/player/PlayerHideEntityEvent.java b/src/main/java/org/bukkit/event/player/PlayerHideEntityEvent.java
index 9d9cd7245c60566fda2eff34824ba1331ddcfd1e..1a49f07a8166627f39981863d2bc0135d9b55137 100644
--- a/src/main/java/org/bukkit/event/player/PlayerHideEntityEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerHideEntityEvent.java
@@ -14,7 +14,7 @@ import org.jetbrains.annotations.NotNull;
  * <br>
  * This event is called regardless of if the entity was within tracking range.
  *
- * @see Player#hideEntity(org.bukkit.plugin.Plugin, org.bukkit.entity.Entity)
+ * @see Player#hideEntity(org.bukkit.plugin.Plugin, org.bukkit.entity.Entity, boolean)
  * @apiNote draft API
  */
 @ApiStatus.Experimental
