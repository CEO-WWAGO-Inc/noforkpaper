From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aurora <aurora@relanet.eu>
Date: Sat, 20 Mar 2021 18:14:24 +0100
Subject: [PATCH] Add EntityExtinguishEvent


diff --git a/src/main/java/io/papermc/paper/event/entity/EntityExtinguishEvent.java b/src/main/java/io/papermc/paper/event/entity/EntityExtinguishEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..11097414867a9aaeccad262b6186d2cf8ba00c29
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/entity/EntityExtinguishEvent.java
@@ -0,0 +1,78 @@
+package io.papermc.paper.event.entity;
+
+import org.bukkit.entity.Entity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Is called when a burning {@link org.bukkit.entity.Entity} is extinguished.
+ */
+public class EntityExtinguishEvent extends EntityEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private final Cause cause;
+    private boolean cancelled;
+
+    public EntityExtinguishEvent(@NotNull Entity entity, @NotNull Cause cause) {
+        super(entity);
+        this.cause = cause;
+    }
+
+    /**
+     * Gets the {@link io.papermc.paper.event.entity.EntityExtinguishEvent.Cause} of the extinguish.
+     *
+     * @return the extinguish cause
+     */
+    @NotNull
+    public Cause getCause() {
+        return cause;
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancelled = cancel;
+    }
+
+
+    public enum Cause {
+        /**
+         * Extinguish caused by entity being fireproof
+         */
+        FIREPROOF,
+        /**
+         * Extinguish caused by entity standing in water
+         */
+        WATER,
+        /**
+         * Extinguish caused by entity standing in the rain
+         */
+        RAIN,
+        /**
+         * Extinguish caused by entity standing in a bubble column
+         */
+        BUBBLE,
+        /**
+         * Extinguish caused by entity standing in a cauldron with water
+         */
+        CAULDRON,
+        /**
+         * Extinguish caused by entity dying;
+         */
+        DEATH,
+        /**
+         * Extinguish caused by fire ticks running out
+         */
+        TIME,
+    }
+}
