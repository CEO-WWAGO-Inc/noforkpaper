From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Owen1212055 <23108066+Owen1212055@users.noreply.github.com>
Date: Sun, 17 Oct 2021 14:53:35 -0400
Subject: [PATCH] BoneMeal API


diff --git a/src/main/java/net/minecraft/world/item/BoneMealItem.java b/src/main/java/net/minecraft/world/item/BoneMealItem.java
index 2592d70f3c7802401f42d95a1fe0a5f6759914d3..374adf669a341386d7b3050a8121dd3b3cba3135 100644
--- a/src/main/java/net/minecraft/world/item/BoneMealItem.java
+++ b/src/main/java/net/minecraft/world/item/BoneMealItem.java
@@ -38,15 +38,17 @@ public class BoneMealItem extends Item {
         // CraftBukkit start - extract bonemeal application logic to separate, static method
         return BoneMealItem.applyBonemeal(context);
     }
-
-    public static InteractionResult applyBonemeal(UseOnContext itemactioncontext) {
+    // Paper start - BoneMeal API
+    public static InteractionResult applyBonemeal(UseOnContext itemactioncontext) { return applyBonemeal(itemactioncontext, true); }
+    public static InteractionResult applyBonemeal(UseOnContext itemactioncontext, boolean showParticles) {
+        // Paper end - BoneMeal API
         // CraftBukkit end
         Level world = itemactioncontext.getLevel();
         BlockPos blockposition = itemactioncontext.getClickedPos();
         BlockPos blockposition1 = blockposition.relative(itemactioncontext.getClickedFace());
 
         if (BoneMealItem.growCrop(itemactioncontext.getItemInHand(), world, blockposition)) {
-            if (!world.isClientSide) {
+            if (showParticles && !world.isClientSide) { // Paper - BoneMeal API
                 world.levelEvent(1505, blockposition, 0);
             }
 
@@ -56,7 +58,7 @@ public class BoneMealItem extends Item {
             boolean flag = iblockdata.isFaceSturdy(world, blockposition, itemactioncontext.getClickedFace());
 
             if (flag && BoneMealItem.growWaterPlant(itemactioncontext.getItemInHand(), world, blockposition1, itemactioncontext.getClickedFace())) {
-                if (!world.isClientSide) {
+                if (showParticles && !world.isClientSide) { // Paper - BoneMeal API
                     world.levelEvent(1505, blockposition1, 0);
                 }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index ac41bc23d2f7e16bbacdc9b33fcf6c0d706fa023..76508019a7d37f2573660efb6eb57779d01ed719 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -2154,5 +2154,39 @@ public class CraftWorld extends CraftRegionAccessor implements World {
 
         return this.adventure$pointers;
     }
+
+    @Override
+    public boolean applyBoneMeal(@org.jetbrains.annotations.NotNull Location location, org.bukkit.block.BlockFace face, boolean showParticles, @org.jetbrains.annotations.Nullable Predicate<BlockState> predicate) {
+        BlockPos pos = new BlockPos(location.getBlockX(), location.getBlockY(), location.getBlockZ());
+        var context = new net.minecraft.world.item.context.UseOnContext(this.getHandle(), null, net.minecraft.world.InteractionHand.MAIN_HAND, net.minecraft.world.item.Items.BONE_MEAL.getDefaultInstance(), new net.minecraft.world.phys.BlockHitResult(Vec3.ZERO, CraftBlock.blockFaceToNotch(face), pos, false));
+
+        boolean wasCapturingTrees = world.captureTreeGeneration;
+        boolean wasCapturingBlockStates = world.captureBlockStates;
+
+        var capturedBlocks = world.capturedBlockStates;
+        var capturedTileEntities = world.capturedTileEntities;
+
+        world.capturedBlockStates = new java.util.LinkedHashMap<>();
+        world.capturedTileEntities = new java.util.LinkedHashMap<>();
+
+        world.captureTreeGeneration = true;
+        world.captureBlockStates = true;
+
+        var result = net.minecraft.world.item.BoneMealItem.applyBonemeal(context, showParticles);
+
+        world.captureTreeGeneration = wasCapturingTrees;
+        world.captureBlockStates = wasCapturingBlockStates;
+
+        for (BlockState blockState : world.capturedBlockStates.values()) {
+            if (predicate != null && predicate.test(blockState)) {
+                blockState.update(true);
+            }
+        }
+
+        world.capturedBlockStates = capturedBlocks;
+        world.capturedTileEntities = capturedTileEntities;
+
+        return result == net.minecraft.world.InteractionResult.CONSUME;
+    }
     // Paper end
 }
