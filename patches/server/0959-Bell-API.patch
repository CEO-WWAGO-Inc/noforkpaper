From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lama06 <andreasprues36@gmail.com>
Date: Sun, 22 Jan 2023 11:33:25 +0100
Subject: [PATCH] Bell API

== AT ==
public net.minecraft.world.level.block.entity.BellBlockEntity resonating
public net.minecraft.world.level.block.entity.BellBlockEntity resonationTicks

diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBell.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBell.java
index 6c5ed0fc9f58b9ec22194074a3fd69b387e3b270..d8fd1445482a8dd5804d297983023e497d05c498 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBell.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBell.java
@@ -9,4 +9,48 @@ public class CraftBell extends CraftBlockEntityState<BellBlockEntity> implements
     public CraftBell(World world, BellBlockEntity tileEntity) {
         super(world, tileEntity);
     }
+
+    // Paper start - Bell API
+    @Override
+    public void ring(org.bukkit.block.BlockFace direction) {
+        if (!direction.isCartesian()) throw new IllegalArgumentException("A bell can only ring in a cartesian direction");
+        if (direction.getModY() != 0) throw new IllegalArgumentException("A bell cannot ring up or down");
+        requirePlaced();
+        getTileEntity().onHit(net.minecraft.core.Direction.fromNormal(direction.getModX(), direction.getModY(), direction.getModZ()));
+    }
+
+    @Override
+    public boolean isRinging() {
+        return getTileEntity().shaking;
+    }
+
+    @Override
+    public int getHasBeenRingingFor() {
+        return getTileEntity().ticks;
+    }
+
+    @Override
+    public org.bukkit.block.BlockFace getRingingDirection() {
+        if (!isRinging()) return null;
+
+        return switch (getTileEntity().clickDirection) {
+            case DOWN -> org.bukkit.block.BlockFace.DOWN;
+            case UP -> org.bukkit.block.BlockFace.UP;
+            case NORTH -> org.bukkit.block.BlockFace.NORTH;
+            case SOUTH -> org.bukkit.block.BlockFace.SOUTH;
+            case WEST -> org.bukkit.block.BlockFace.WEST;
+            case EAST -> org.bukkit.block.BlockFace.EAST;
+        };
+    }
+
+    @Override
+    public boolean isResonating() {
+        return getTileEntity().resonating;
+    }
+
+    @Override
+    public int getHasBeenResonatingFor() {
+        return getTileEntity().resonationTicks;
+    }
+    // Paper end
 }
