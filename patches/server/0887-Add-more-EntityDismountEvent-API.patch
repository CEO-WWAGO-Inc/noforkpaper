From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Thu, 15 Jul 2021 19:39:31 +0900
Subject: [PATCH] Add more EntityDismountEvent API


diff --git a/src/main/java/net/minecraft/server/commands/TeleportCommand.java b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
index ced3b3ed227dacf1c4928ee2dfa4f390f13c8a8b..cebac25433ef1e05fdbca25146c49815262cdecb 100644
--- a/src/main/java/net/minecraft/server/commands/TeleportCommand.java
+++ b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
@@ -158,7 +158,7 @@ public class TeleportCommand {
                 ChunkPos chunkcoordintpair = new ChunkPos(new BlockPos(x, y, z));
 
                 world.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, target.getId());
-                target.stopRiding();
+                target.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.TELEPORT); // Paper - Add EntityDismountEvent reason
                 if (((ServerPlayer) target).isSleeping()) {
                     ((ServerPlayer) target).stopSleepInBed(true, true);
                 }
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 3b1a34b34979ab436ccd33f0a85bfae537cbecb4..cabed35c4dac160ba05fed6693cc33130688675c 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -666,7 +666,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                                     return;
                                 }
 
-                                entity.stopRiding();
+                                entity.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.DESPAWN); // Paper - Add EntityDismountEvent reason
                             }
 
                             gameprofilerfiller.push("tick");
@@ -1192,7 +1192,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             } finally { timer.stopTiming(); }// Paper - EAR2 timings
             }
         } else {
-            passenger.stopRiding();
+            passenger.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.DESTROY_OR_DEAD); // Paper - Add EntityDismountEvent reason
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index e74c13e7aaa144fcd07036de70e80bebf0be698a..1557ea7bfdcc25bbc960f3c2c97f6a35906d0adc 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1659,11 +1659,11 @@ public class ServerPlayer extends Player {
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.DISCONNECT); // Paper - Add EntityDismountEvent reason
 
         // Paper start - Workaround an issue where the vehicle doesn't track the passenger disconnection dismount.
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
-            this.stopRiding();
+            this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.DISCONNECT); // Paper - Add EntityDismountEvent reason
         }
         // Paper end
 
@@ -1828,7 +1828,7 @@ public class ServerPlayer extends Player {
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
-                this.stopRiding();
+                this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.GAMEMODE_CHANGE); // Paper - Add EntityDismountEvent reason
             } else {
                 this.setCamera(this);
             }
@@ -2002,7 +2002,7 @@ public class ServerPlayer extends Player {
 
         if (entity != this) {
             // Make sure we're in the right place
-            this.ejectPassengers(); // teleport can fail if we have passengers...
+            this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.START_SPECTATING); // teleport can fail if we have passengers... // Paper - Add EntityDismountEvent reason
             this.getBukkitEntity().teleport(new Location(entity.getCommandSenderWorld().getWorld(), entity.getX(), entity.getY(), entity.getZ(), this.getYRot(), this.getXRot()), TeleportCause.SPECTATE); // Correctly handle cross-world entities from api calls by using CB teleport
 
             // Make sure we're tracking the entity before sending
@@ -2070,7 +2070,7 @@ public class ServerPlayer extends Player {
     public void teleportTo(ServerLevel worldserver, double d0, double d1, double d2, float f, float f1, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
         // CraftBukkit end
         this.setCamera(this);
-        this.stopRiding();
+        this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.TELEPORT); // Paper - Add EntityDismountEvent reason
         /* CraftBukkit start - replace with bukkit handling for multi-world
         if (worldserver == this.level) {
             this.connection.teleport(d0, d1, d2, f, f1);
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 02dc93c394d37c9a84aa4a58d80615c403c54fb9..83bd391af954f8f59a5b02ad2c5b299adbe4d71f 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -644,7 +644,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
-                entityplayer.stopRiding();
+                entityplayer.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.DISCONNECT); // Paper - Add EntityDismountEvent reason
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start
                     if (entity1 instanceof net.minecraft.world.entity.npc.AbstractVillager villager) {
@@ -828,7 +828,7 @@ public abstract class PlayerList {
 
     public ServerPlayer respawn(ServerPlayer entityplayer, ServerLevel worldserver, boolean flag, Location location, boolean avoidSuffocation, org.bukkit.event.player.PlayerRespawnEvent.RespawnFlag...respawnFlags) {
         // Paper end
-        entityplayer.stopRiding(); // CraftBukkit
+        entityplayer.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.MOVE_WORLD); // CraftBukkit // Paper - Add EntityDismountEvent reason
         this.players.remove(entityplayer);
         this.playersByName.remove(entityplayer.getScoreboardName().toLowerCase(java.util.Locale.ROOT)); // Spigot
         entityplayer.getLevel().removePlayerImmediately(entityplayer, Entity.RemovalReason.DISCARDED);
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 84fce7dccf9232209f939a32acfc3131e62eb27c..45a01e4b310d35a76884c859a50b90424372fd05 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -727,7 +727,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
         this.level.getProfiler().push("entityBaseTick");
         this.feetBlockState = null;
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
-            this.stopRiding();
+            this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.DESTROY_OR_DEAD); // Paper - Add EntityDismountEvent reason
         }
 
         if (this.boardingCooldown > 0) {
@@ -2559,7 +2559,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
                 return false;
             } else {
                 if (this.isPassenger()) {
-                    this.stopRiding();
+                    this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.NEW_MOUNT); // Paper - Add EntityDismountEvent reason
                 }
 
                 this.setPose(net.minecraft.world.entity.Pose.STANDING);
@@ -2584,8 +2584,13 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
     }
 
     public void ejectPassengers() {
+        // Paper start - Add EntityDismountEvent reason
+        this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.UNKNOWN);
+    }
+    public void ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason reason) {
+        // Paper end - Add EntityDismountEvent reason
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
-            ((Entity) this.passengers.get(i)).stopRiding();
+            ((Entity) this.passengers.get(i)).stopRiding(reason); // Paper - Add EntityDismountEvent reason
         }
 
     }
@@ -2595,12 +2600,19 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
         stopRiding(false);
     }
     public void stopRiding(boolean suppressCancellation) {
+        // Paper start - Add EntityDismountEvent reason
+        stopRiding(suppressCancellation, org.spigotmc.event.entity.EntityDismountEvent.Reason.UNKNOWN);
+    }
+    public void removeVehicle(org.spigotmc.event.entity.EntityDismountEvent.Reason reason) { stopRiding(false, reason); }
+    public void stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason reason) { this.removeVehicle(reason); }
+    public void stopRiding(boolean suppressCancellation, org.spigotmc.event.entity.EntityDismountEvent.Reason reason) {
+        // Paper end - Add EntityDismountEvent reason
         // Paper end
         if (this.vehicle != null) {
             Entity entity = this.vehicle;
 
             this.vehicle = null;
-            if (!entity.removePassenger(this, suppressCancellation)) this.vehicle = entity; // CraftBukkit // Paper
+            if (!entity.removePassenger(this, suppressCancellation, reason)) this.vehicle = entity; // CraftBukkit // Paper // Paper - Add EntityDismountEvent reason
         }
 
     }
@@ -2666,6 +2678,11 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
+        // Paper start - Add EntityDismountEvent Reason
+        return removePassenger(entity, suppressCancellation, org.spigotmc.event.entity.EntityDismountEvent.Reason.UNKNOWN);
+    }
+    protected boolean removePassenger(Entity entity, boolean suppressCancellation, org.spigotmc.event.entity.EntityDismountEvent.Reason reason) {
+        // Paper end - Add EntityDismountEvent Reason
         // Paper end
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
@@ -2690,7 +2707,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
             }
             // CraftBukkit end
             // Spigot start
-            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation); // Paper
+            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation, reason); // Paper // Paper - Add EntityDismountEvent Reason
             // Suppress during worldgen
             if (this.valid) {
                 Bukkit.getPluginManager().callEvent(event);
@@ -4230,10 +4247,10 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
         }
 
         if (this.removalReason.shouldDestroy()) {
-            this.stopRiding();
+            this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.DESTROY_OR_DEAD); // Paper - Add EntityDismountEvent reason
         }
 
-        this.getPassengers().forEach(Entity::stopRiding);
+        this.getPassengers().forEach(entity -> entity.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.DESTROY_OR_DEAD)); // Paper - Add EntityDismountEvent reason
         this.levelCallback.onRemove(reason);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index fdd76d1a1636f30f519c434b41061d826c4a8261..ea255adad882d21dcbcc5d2dc07e2e7bce73fdee 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -433,7 +433,7 @@ public abstract class LivingEntity extends Entity {
                 }
 
                 if (!this.level.isClientSide && this.isPassenger() && this.getVehicle() != null && !this.getVehicle().rideableUnderWater()) {
-                    this.stopRiding();
+                    this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.SWIMMING); // Paper - Add EntityDismountEvent reason
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
                 this.setAirSupply(this.increaseAirSupply(this.getAirSupply()));
@@ -3478,10 +3478,16 @@ public abstract class LivingEntity extends Entity {
     }
     @Override
     public void stopRiding(boolean suppressCancellation) {
+        // Paper start - Add EntityDismountEvent reason
+        stopRiding(suppressCancellation, org.spigotmc.event.entity.EntityDismountEvent.Reason.UNKNOWN);
+    }
+    @Override public void stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason reason) { this.removeVehicle(reason); }
+    @Override public void stopRiding(boolean suppressCancellation, org.spigotmc.event.entity.EntityDismountEvent.Reason reason) {
+        // Paper end - Add EntityDismountEvent reason
         // Paper end
         Entity entity = this.getVehicle();
 
-        super.stopRiding(suppressCancellation); // Paper - suppress
+        super.stopRiding(suppressCancellation, reason); // Paper - suppress // Paper - Add EntityDismountEvent reason
         if (entity != null && entity != this.getVehicle() && !this.level.isClientSide && entity.valid) { // Paper - don't process on world gen
             this.dismountVehicle(entity);
         }
@@ -4100,7 +4106,7 @@ public abstract class LivingEntity extends Entity {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
-            this.stopRiding();
+            this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.START_SLEEP); // Paper - Add EntityDismountEvent reason
         }
 
         BlockState iblockdata = this.level.getBlockState(pos);
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index b1ae9b0d8b229e2a6797a173cb11ecc0f43e2592..49772100acb350ec98ca233f854c5f0c3bb5e3f8 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1389,7 +1389,7 @@ public abstract class Mob extends LivingEntity {
             if (this.isPassenger()) {
                 Entity entity = this.getVehicle();
 
-                this.stopRiding();
+                this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.TRANSFORM); // Paper - Add EntityDismountEvent reason
                 t0.startRiding(entity, true);
             }
 
@@ -1457,7 +1457,7 @@ public abstract class Mob extends LivingEntity {
         }
 
         if (this.isPassenger()) {
-            this.stopRiding();
+            this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.LEASH); // Paper - Add EntityDismountEvent reason
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting.java b/src/main/java/net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting.java
index 5f169fb5d26f623062b735a643815dd84fe0b5fc..5e92a3be29467126117ec789b26901bce16cd801 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting.java
@@ -36,7 +36,7 @@ public class DismountOrSkipMounting<E extends LivingEntity, T extends Entity> ex
 
     @Override
     protected void start(ServerLevel world, E entity, long time) {
-        entity.stopRiding();
+        entity.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.VANILLA_AI); // Paper - Add EntityDismountEvent reason
         entity.getBrain().eraseMemory(MemoryModuleType.RIDE_TARGET);
     }
 }
diff --git a/src/main/java/net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal.java b/src/main/java/net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal.java
index 5c64905e90ccca6e0b347241ddf9cc3f71058b8e..7bbd8716bbda25693d558669be299e47eb7147b0 100644
--- a/src/main/java/net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal.java
+++ b/src/main/java/net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal.java
@@ -71,7 +71,7 @@ public class RunAroundLikeCrazyGoal extends Goal {
                 this.horse.modifyTemper(5);
             }
 
-            this.horse.ejectPassengers();
+            this.horse.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.FAILED_TAME); // Paper - Add EntityDismountEvent reason
             this.horse.makeMad();
             this.horse.level.broadcastEntityEvent(this.horse, (byte) 6);
         }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Shulker.java b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
index a9dfe190f46230077e2e1bf9aacbf5375651f216..a36836d866290112b0a10335b53f59c13b3858fe 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Shulker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
@@ -289,7 +289,7 @@ public class Shulker extends AbstractGolem implements Enemy {
 
     @Override
     public void stopRiding() {
-        super.stopRiding();
+        super.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.TELEPORT); // Paper - Add EntityDismountEvent reason
         if (this.level.isClientSide) {
             this.clientOldAttachPosition = this.blockPosition();
         }
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
index 57f593e5f797d646ceb70fa61ec2e966cf4dabc1..3987453a1fe867d48819fc24fc94d4f4094d3408 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
@@ -206,7 +206,7 @@ public class PiglinAi {
 
         piglin.setAggressive(behaviorcontroller.hasMemoryValue(MemoryModuleType.ATTACK_TARGET));
         if (!behaviorcontroller.hasMemoryValue(MemoryModuleType.RIDE_TARGET) && PiglinAi.isBabyRidingBaby(piglin)) {
-            piglin.stopRiding();
+            piglin.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.VANILLA_AI); // Paper - Add EntityDismountEvent reason
         }
 
         if (!behaviorcontroller.hasMemoryValue(MemoryModuleType.CELEBRATE_LOCATION)) {
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 2483d7df7f1bf94344afd38b37602c645a4a2dff..bd9291d357fdcd92931cd47ae86aa8b81ef2729b 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -510,7 +510,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level.isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
-            this.stopRiding();
+            this.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.UNMOUNT_KEY); // Paper - Add EntityDismountEvent reason
             this.setShiftKeyDown(false);
         } else {
             double d0 = this.getX();
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
index 834ba402decb556a5f77809b37fa00578b67432e..15f768e15353f2efb62e5428c8c1b7ab5d9b8bcf 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -77,7 +77,7 @@ public class ThrownEnderpearl extends ThrowableItemProjectile {
                         }
 
                         if (entity.isPassenger()) {
-                            entity.stopRiding();
+                            entity.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.ENDER_PEARL); // Paper - Add EntityDismountEvent reason
                         }
 
                         entityplayer.connection.teleport(teleEvent.getTo());
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
index 96a7bfd921e59f298f0ee502d356cc3552c30ce8..651de48e31a23bf7a768cb029a420233d4b6e797 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -265,7 +265,7 @@ public abstract class AbstractMinecart extends Entity {
                         return true;
                     }
                     // CraftBukkit end
-                    this.ejectPassengers();
+                    this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.DESTROY_OR_DEAD); // Paper - Add EntityDismountEvent reason
                     if (flag && !this.hasCustomName()) {
                         this.discard();
                     } else {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
index 0dbc85c450797d7384e641f80e1b1f8c56fd14fc..f395d18f5979416c7a6427cb10848d6ecfd44bce 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
@@ -327,7 +327,7 @@ public class Boat extends Entity {
         }
 
         if (!this.level.isClientSide && this.outOfControlTicks >= 60.0F) {
-            this.ejectPassengers();
+            this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.IN_WATER); // Paper - Add EntityDismountEvent reason
         }
 
         if (this.getHurtTime() > 0) {
@@ -447,7 +447,7 @@ public class Boat extends Entity {
 
                     if (this.bubbleColumnDirectionIsDown) {
                         this.setDeltaMovement(vec3d.add(0.0D, -0.7D, 0.0D));
-                        this.ejectPassengers();
+                        this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.IN_WATER); // Paper - Add EntityDismountEvent reason (ex. magma_block)
                     } else {
                         this.setDeltaMovement(vec3d.x, this.hasPassenger((entity) -> {
                             return entity instanceof Player;
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index 062881d0b3d57401dc4f6d876b802699df586574..460c4f05a0b36c9c9b21e123e31665a1757ef6a6 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -31,7 +31,7 @@ public class ChorusFruitItem extends Item {
                 double d5 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
-                    user.stopRiding();
+                    user.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.CHORUS_FRUIT); // Paper - Add EntityDismountEvent reason
                 }
 
                 // CraftBukkit start - handle canceled status of teleport event
diff --git a/src/main/java/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
index 483dc52c793d9f90a35b1d091dd8ce71115e4640..251913b5b6747575e7007955fc8f285142b61860 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
@@ -166,8 +166,8 @@ public class BeehiveBlockEntity extends BlockEntity {
                 }
             }
             // CraftBukkit end
-            entity.stopRiding();
-            entity.ejectPassengers();
+            entity.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.VANILLA_AI); // Paper - Add EntityDismountEvent reason
+            entity.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.VANILLA_AI); // Paper - Add EntityDismountEvent reason
             CompoundTag nbttagcompound = new CompoundTag();
 
             entity.save(nbttagcompound);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index a92755211e3d42934b5efaa3f201c6c19ab7d2b4..5c4686ef4b5a3882f3698ac810f3436be2282551 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -568,7 +568,7 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         }
 
         // If this entity is riding another entity, we must dismount before teleporting.
-        this.entity.stopRiding();
+        this.entity.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.TELEPORT); // Paper - Add EntityDismountEvent reason
 
         // Let the server handle cross world teleports
         if (!location.getWorld().equals(this.getWorld())) {
@@ -749,7 +749,7 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
     public boolean removePassenger(org.bukkit.entity.Entity passenger) {
         Preconditions.checkArgument(passenger != null, "passenger == null");
 
-        ((CraftEntity) passenger).getHandle().stopRiding();
+        ((CraftEntity) passenger).getHandle().stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.PLUGIN); // Paper - Add EntityDismountEvent reason
         return true;
     }
 
@@ -764,7 +764,7 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
             return false;
         }
 
-        this.getHandle().ejectPassengers();
+        this.getHandle().ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.Reason.PLUGIN); // Paper - Add EntityDismountEvent reason
         return true;
     }
 
@@ -880,7 +880,7 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
             return false;
         }
 
-        this.getHandle().stopRiding();
+        this.getHandle().stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.PLUGIN); // Paper - Add EntityDismountEvent reason
         return true;
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 6feeadad9aecb7d63e24d5daae115a93e39aeb3d..5c67a1ab73c952debf9dfc738e5520e5db985658 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -1072,7 +1072,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         }
 
         // If this player is riding another entity, we must dismount before teleporting.
-        entity.stopRiding();
+        entity.stopRiding(org.spigotmc.event.entity.EntityDismountEvent.Reason.TELEPORT); // Paper - Add EntityDismountEvent reason
 
         // SPIGOT-5509: Wakeup, similar to riding
         if (this.isSleeping()) {
