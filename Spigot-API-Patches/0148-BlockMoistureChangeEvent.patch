From 5a1f71dac3916e88103a90a0a330036e8f917e85 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Thu, 6 Sep 2018 17:19:37 -0500
Subject: [PATCH] BlockMoistureChangeEvent


diff --git a/src/main/java/com/destroystokyo/paper/event/block/BlockMoistureChangeEvent.java b/src/main/java/com/destroystokyo/paper/event/block/BlockMoistureChangeEvent.java
new file mode 100644
index 00000000..a2784e59
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/block/BlockMoistureChangeEvent.java
@@ -0,0 +1,70 @@
+package com.destroystokyo.paper.event.block;
+
+import org.bukkit.block.Block;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.block.BlockEvent;
+
+/**
+ * Called with a block's moisture level changes
+ * <p>
+ * Cancelling the event will prevent the moisture level from changing
+ */
+public class BlockMoistureChangeEvent extends BlockEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private boolean cancelled;
+    private final int from;
+    private int to;
+
+    public BlockMoistureChangeEvent(Block block, int from, int to) {
+        super(block);
+        this.from = from;
+        this.to = to;
+    }
+
+    /**
+     * Get the original moisture level before the change
+     *
+     * @return Original moisture level
+     */
+    public int getOriginalMoisture() {
+        return from;
+    }
+
+    /**
+     * Get the new moisture level getting changed to
+     *
+     * @return New moisture level
+     */
+    public int getNewMoisture() {
+        return to;
+    }
+
+    /**
+     * Set the new moisture level getting changed to
+     *
+     * @param to New moisture level
+     */
+    public void setNewMoisture(int to) {
+        this.to = Math.max(0, Math.min(7, to));
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancelled) {
+        this.cancelled = cancelled;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
2.18.0

