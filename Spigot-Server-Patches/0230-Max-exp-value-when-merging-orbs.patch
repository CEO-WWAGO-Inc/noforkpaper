From e0e7e4ba2da5ada6d148889ffd051e0259ff55a3 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Mon, 31 Jul 2017 01:35:54 -0500
Subject: [PATCH] Max exp value when merging orbs


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 54d081fd..e0977149 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -428,4 +428,10 @@ public class PaperWorldConfig {
         disableCreeperLingeringEffect = getBoolean("disable-creeper-lingering-effect", false);
         log("Creeper lingering effect: " + disableCreeperLingeringEffect);
     }
+
+    public int expMergeMaxValue;
+    private void expMergeMaxValue() {
+        expMergeMaxValue = getInt("exp-merge-max-value", 0);
+        log("Experience Merge Max Value: " + expMergeMaxValue);
+    }
 }
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 9dfc2b4d..032d1157 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1,4 +1,4 @@
-	package net.minecraft.server;
+package net.minecraft.server;
 
 import com.destroystokyo.paper.event.server.ServerExceptionEvent;
 import com.destroystokyo.paper.exception.ServerInternalException;
@@ -1146,16 +1146,24 @@ public abstract class World implements IBlockAccess {
             EntityExperienceOrb xp = (EntityExperienceOrb) entity;
             double radius = spigotConfig.expMerge;
             if (radius > 0) {
+                // Paper start
+                int maxValue = paperConfig.expMergeMaxValue;
                 List<Entity> entities = this.getEntities(entity, entity.getBoundingBox().grow(radius, radius, radius));
                 for (Entity e : entities) {
                     if (e instanceof EntityExperienceOrb) {
                         EntityExperienceOrb loopItem = (EntityExperienceOrb) e;
-                        if (!loopItem.dead) {
+                        if (!loopItem.dead && !(maxValue > 0 && loopItem.value >= maxValue)) {
                             xp.value += loopItem.value;
+                            if (maxValue > 0 && xp.value > maxValue) {
+                                loopItem.value = xp.value - maxValue;
+                                xp.value = maxValue;
+                                break;
+                            }
                             loopItem.die();
                         }
                     }
                 }
+                // Paper end
             }
         } // Spigot end
 
-- 
2.11.0

