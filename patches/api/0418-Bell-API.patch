From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lama06 <andreasprues36@gmail.com>
Date: Sun, 22 Jan 2023 11:22:49 +0100
Subject: [PATCH] Bell API


diff --git a/src/main/java/org/bukkit/block/Bell.java b/src/main/java/org/bukkit/block/Bell.java
index 6fee356a3fc2811d99d9ed2a551118e3e6f0de79..d077bab39dd702b5280455b33db417be4eef6429 100644
--- a/src/main/java/org/bukkit/block/Bell.java
+++ b/src/main/java/org/bukkit/block/Bell.java
@@ -3,4 +3,53 @@ package org.bukkit.block;
 /**
  * Represents a captured state of Bell.
  */
-public interface Bell extends TileState { }
+public interface Bell extends TileState {
+    // Paper start - Bell API
+    /**
+     * Rings the bell in the direction that it is facing.
+     */
+    void ring();
+
+    /**
+     * Rings the bell in the specified direction.
+     * @param direction The direction the bell should ring in
+     * @throws IllegalArgumentException If the specified direction is not {@link BlockFace#isCartesian() cartesian}
+     * or equals either {@link BlockFace#UP} or {@link BlockFace#DOWN}
+     */
+    void ring(@org.jetbrains.annotations.NotNull BlockFace direction);
+
+    /**
+     * Returns if the bell is currently ringing.
+     * @return Whether the bell is currently ringing
+     */
+    boolean isRinging();
+
+    /**
+     * Returns the number of ticks this bell has been ringing for or 0 if it is not ringing.
+     * A bell stops ringing after 50 ticks.
+     * @return The number of ticks this bell has been ringing for
+     */
+    int getTicksRinging();
+
+    /**
+     * Returns the direction the bell is ringing in or null if it is not ringing.
+     * @return The direction the bell is ringing in
+     */
+    @org.jetbrains.annotations.Nullable BlockFace getRingingDirection();
+
+    /**
+     * Returns if the bell is currently resonating.
+     * The resonation sound starts playing 5 ticks after the bell is hit if there are raiders nearby and ends 40 ticks later.
+     * As soon as the resonation sound ends nearby raiders are revealed.
+     * @return Whether the bell is currently resonating
+     */
+    boolean isResonating();
+
+    /**
+     * Returns the number of ticks this bell has been resonating for or 0 if it is not resonating.
+     * A bell stops resonating after 40 ticks.
+     * @return The number of ticks this bell has been resonating for
+     */
+    int getTicksResonating();
+    // Paper end
+}
