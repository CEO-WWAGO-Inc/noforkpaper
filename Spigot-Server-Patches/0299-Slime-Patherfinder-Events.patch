From b87231bb2f79c9344656a31454fc8e016d61b613 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Sat, 21 Jul 2018 00:48:25 -0500
Subject: [PATCH] Slime Patherfinder Events


diff --git a/src/main/java/net/minecraft/server/EntitySlime.java b/src/main/java/net/minecraft/server/EntitySlime.java
index 3b13b697a..b6a134af1 100644
--- a/src/main/java/net/minecraft/server/EntitySlime.java
+++ b/src/main/java/net/minecraft/server/EntitySlime.java
@@ -57,6 +57,7 @@ public class EntitySlime extends EntityInsentient implements IMonster {
         super.b(nbttagcompound);
         nbttagcompound.setInt("Size", this.getSize() - 1);
         nbttagcompound.setBoolean("wasOnGround", this.bD);
+        nbttagcompound.setBoolean("Paper.canWander", this.canWander); // Paper
     }
 
     public void a(NBTTagCompound nbttagcompound) {
@@ -69,6 +70,7 @@ public class EntitySlime extends EntityInsentient implements IMonster {
 
         this.setSize(i + 1, false);
         this.bD = nbttagcompound.getBoolean("wasOnGround");
+        this.canWander = nbttagcompound.getBoolean("Paper.canWander"); // Paper
     }
 
     public boolean dy() {
@@ -308,7 +310,7 @@ public class EntitySlime extends EntityInsentient implements IMonster {
         }
 
         public boolean a() {
-            return true;
+            return this.a.canWander && new com.destroystokyo.paper.event.entity.SlimeWanderEvent((org.bukkit.entity.Slime) this.a.getBukkitEntity()).callEvent(); // Paper
         }
 
         public void e() {
@@ -327,7 +329,7 @@ public class EntitySlime extends EntityInsentient implements IMonster {
         }
 
         public boolean a() {
-            return this.a.isInWater() || this.a.ax();
+            return (this.a.isInWater() || this.a.ax()) && this.a.canWander && new com.destroystokyo.paper.event.entity.SlimeSwimEvent((org.bukkit.entity.Slime) this.a.getBukkitEntity()).callEvent(); // Paper
         }
 
         public void e() {
@@ -351,13 +353,17 @@ public class EntitySlime extends EntityInsentient implements IMonster {
         }
 
         public boolean a() {
-            return this.a.getGoalTarget() == null && (this.a.onGround || this.a.isInWater() || this.a.ax() || this.a.hasEffect(MobEffects.LEVITATION));
+            return this.a.canWander && this.a.getGoalTarget() == null && (this.a.onGround || this.a.isInWater() || this.a.ax() || this.a.hasEffect(MobEffects.LEVITATION)); // Paper
         }
 
         public void e() {
             if (--this.c <= 0) {
                 this.c = 40 + this.a.getRandom().nextInt(60);
-                this.b = (float) this.a.getRandom().nextInt(360);
+                // Paper start
+                com.destroystokyo.paper.event.entity.SlimeChangeDirectionEvent event = new com.destroystokyo.paper.event.entity.SlimeChangeDirectionEvent((org.bukkit.entity.Slime) this.a.getBukkitEntity(), (float) this.a.getRandom().nextInt(360));
+                if (!this.a.canWander || !event.callEvent()) return;
+                this.b = event.getNewYaw();
+                // Paper end
             }
 
             ((EntitySlime.ControllerMoveSlime) this.a.getControllerMove()).a(this.b, false);
@@ -377,7 +383,16 @@ public class EntitySlime extends EntityInsentient implements IMonster {
         public boolean a() {
             EntityLiving entityliving = this.a.getGoalTarget();
 
-            return entityliving == null ? false : (!entityliving.isAlive() ? false : !(entityliving instanceof EntityHuman) || !((EntityHuman) entityliving).abilities.isInvulnerable);
+            // Paper start
+            if (entityliving != null && entityliving.isAlive() && (!(entityliving instanceof EntityHuman) || !((EntityHuman) entityliving).abilities.isInvulnerable)) {
+                if (this.a.canWander && new com.destroystokyo.paper.event.entity.SlimeTargetLivingEntityEvent((org.bukkit.entity.Slime) this.a.getBukkitEntity(), (org.bukkit.entity.LivingEntity) entityliving.getBukkitEntity()).callEvent()) {
+                    return true;
+                }
+                this.b = 0;
+                this.a.setGoalTarget(null);
+            }
+            return false;
+            // Paper end
         }
 
         public void c() {
@@ -388,7 +403,16 @@ public class EntitySlime extends EntityInsentient implements IMonster {
         public boolean b() {
             EntityLiving entityliving = this.a.getGoalTarget();
 
-            return entityliving == null ? false : (!entityliving.isAlive() ? false : (entityliving instanceof EntityHuman && ((EntityHuman) entityliving).abilities.isInvulnerable ? false : --this.b > 0));
+            // Paper start
+            if (entityliving != null && entityliving.isAlive() && (!(entityliving instanceof EntityHuman) || !((EntityHuman) entityliving).abilities.isInvulnerable)) {
+                if (this.a.canWander && new com.destroystokyo.paper.event.entity.SlimeTargetLivingEntityEvent((org.bukkit.entity.Slime) this.a.getBukkitEntity(), (org.bukkit.entity.LivingEntity) entityliving.getBukkitEntity()).callEvent()) {
+                    return true;
+                }
+                this.b = 0;
+                this.a.setGoalTarget(null);
+            }
+            return false;
+            // Paper end
         }
 
         public void e() {
@@ -452,4 +476,16 @@ public class EntitySlime extends EntityInsentient implements IMonster {
             }
         }
     }
+
+    // Paper start
+    private boolean canWander = true;
+
+    public boolean canWander() {
+        return canWander;
+    }
+
+    public void setWander(boolean canWander) {
+        this.canWander = canWander;
+    }
+    // Paper end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftSlime.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftSlime.java
index 3768b9573..b0b4ab96d 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftSlime.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftSlime.java
@@ -49,4 +49,14 @@ public class CraftSlime extends CraftLivingEntity implements Slime, CraftSentien
     public EntityType getType() {
         return EntityType.SLIME;
     }
+
+    // Paper start
+    public boolean canWander() {
+        return getHandle().canWander();
+    }
+
+    public void setWander(boolean canWander) {
+        getHandle().setWander(canWander);
+    }
+    // Paper end
 }
-- 
2.18.0

