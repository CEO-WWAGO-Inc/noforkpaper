From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Moulberry <james.jenour@protonmail.com>
Date: Tue, 6 Jun 2023 02:11:34 +0800
Subject: [PATCH] FOV Scale API

Modifies the player's fov by a factor
The multiplier is affected by the client Accessibility option 'FOV
Effects'

diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 88c4885569d2b8b22fce55601d50608ac8e9388c..fa63f1d2f8ffe937137b15b9ab1964cdfb7e7cb9 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -890,8 +890,8 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * they have seen it before because this method was called.
      * Note this method does not make the player invulnerable, which is normally expected when viewing credits.
      *
-     * @see #hasSeenWinScreen() 
-     * @see #setHasSeenWinScreen(boolean) 
+     * @see #hasSeenWinScreen()
+     * @see #setHasSeenWinScreen(boolean)
      * @see <a href="https://minecraft.fandom.com/wiki/End_Poem#Technical_details">https://minecraft.fandom.com/wiki/End_Poem#Technical_details</a>
      */
     public void showWinScreen();
@@ -1693,6 +1693,25 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public float getWalkSpeed();
 
+    // Paper start
+    /**
+     * Sets a multiplier applied to the Player's FOV. This is affected by
+     * the client Accessibility option 'FOV Effects'
+     *
+     * @param value The fov scale, typically from 0.1 to 1.5
+     * @throws IllegalArgumentException If new fov scale is {@link Float#NaN},
+     *      {@link Float#POSITIVE_INFINITY} or {@link Float#NEGATIVE_INFINITY}
+     */
+    void setFovScale(float value) throws IllegalArgumentException;
+
+    /**
+     * Gets the current multiplier applied to the Player's FOV
+     *
+     * @return value The fov scale, typically from 0.1 to 1.5
+     */
+    float getFovScale();
+    // Paper end
+
     /**
      * Request that the player's client download and switch texture packs.
      * <p>
@@ -2144,7 +2163,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param saturationLevel the saturation level of the player
      */
     public void sendHealthUpdate(final double health, final int foodLevel, final float saturationLevel);
-    
+
     /**
      * Forcefully sends a health update to the player.
      * This uses the player's current health, saturation, and food level.
@@ -2153,7 +2172,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public void sendHealthUpdate();
     // Paper end
-    
+
     /**
      * Gets the entity which is followed by the camera when in
      * {@link GameMode#SPECTATOR}.
@@ -2514,7 +2533,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param simulationDistance the player's new simulation distance
      */
     public void setSimulationDistance(int simulationDistance);
-    
+
     /**
      * Gets the no-ticking view distance for this player.
      * <p>
