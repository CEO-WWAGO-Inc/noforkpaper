From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tamion <70228790+notTamion@users.noreply.github.com>
Date: Sat, 25 Nov 2023 23:15:22 +0100
Subject: [PATCH] Add required-plugins config option


diff --git a/src/main/java/io/papermc/paper/plugin/manager/PaperPluginInstanceManager.java b/src/main/java/io/papermc/paper/plugin/manager/PaperPluginInstanceManager.java
index 08b1aab5d37a56dc42542ce15ba1f7ccd1b08400..71543d2bf811aabfcfda57b7ac9dd91c70788ff5 100644
--- a/src/main/java/io/papermc/paper/plugin/manager/PaperPluginInstanceManager.java
+++ b/src/main/java/io/papermc/paper/plugin/manager/PaperPluginInstanceManager.java
@@ -211,6 +211,13 @@ class PaperPluginInstanceManager {
         if (!(plugin instanceof JavaPlugin javaPlugin)) {
             throw new IllegalArgumentException("Only expects java plugins.");
         }
+        // Paper start
+        if (!this.server.isStopping() && !this.server.isReloading() && io.papermc.paper.configuration.GlobalConfiguration.get().misc.requiredPlugins.contains(plugin.getName())) {
+            this.server.getLogger().severe("The required plugin " + plugin.getName() + " got disabled. Stopping Server.");
+            this.server.shutdown();
+            return;
+        }
+        // Paper end
         if (!plugin.isEnabled()) {
             return;
         }
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 1c9742ad81f04052d2c3bc18c7636f45b2fc5160..4abf65f1d423ce722dbff5c0220228d37d83c982 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -275,6 +275,13 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         // CraftBukkit end
 
         // Paper start
+        List<String> missingPlugins = new java.util.ArrayList<>(io.papermc.paper.configuration.GlobalConfiguration.get().misc.requiredPlugins);
+        missingPlugins.removeAll(java.util.Arrays.stream(this.server.paperPluginManager.getPlugins()).filter(org.bukkit.plugin.Plugin::isEnabled).map(org.bukkit.plugin.Plugin::getName).toList());
+        if (!missingPlugins.isEmpty()) {
+            DedicatedServer.LOGGER.error("The following required plugins aren't enabled: {}. Stopping Server.", String.join(", ", missingPlugins));
+            return false;
+        }
+
         boolean usingProxy = org.spigotmc.SpigotConfig.bungee || io.papermc.paper.configuration.GlobalConfiguration.get().proxies.velocity.enabled;
         String proxyFlavor = (io.papermc.paper.configuration.GlobalConfiguration.get().proxies.velocity.enabled) ? "Velocity" : "BungeeCord";
         String proxyLink = (io.papermc.paper.configuration.GlobalConfiguration.get().proxies.velocity.enabled) ? "https://docs.papermc.io/velocity/security" : "http://www.spigotmc.org/wiki/firewall-guide/";
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 356107688a5d40d1c462b164f61af82f4dfd3926..36f3913b80d9f2a8945bc7d1bc58a6cabe150338 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -304,6 +304,7 @@ public final class CraftServer implements Server {
     private boolean overrideAllCommandBlockCommands = false;
     public boolean ignoreVanillaPermissions = false;
     private final List<CraftPlayer> playerView;
+    public boolean isReloading; // Paper
     public int reloadCount;
     private final io.papermc.paper.datapack.PaperDatapackManager datapackManager; // Paper
     public static Exception excessiveVelEx; // Paper - Velocity warnings
@@ -1009,6 +1010,7 @@ public final class CraftServer implements Server {
 
     @Override
     public void reload() {
+        this.isReloading = true; // Paper
         org.spigotmc.WatchdogThread.hasStarted = false; // Paper - Disable watchdog early timeout on reload
         this.reloadCount++;
         this.configuration = YamlConfiguration.loadConfiguration(this.getConfigFile());
@@ -1101,6 +1103,7 @@ public final class CraftServer implements Server {
         this.enablePlugins(PluginLoadOrder.POSTWORLD);
         this.getPluginManager().callEvent(new ServerLoadEvent(ServerLoadEvent.LoadType.RELOAD));
         org.spigotmc.WatchdogThread.hasStarted = true; // Paper - Disable watchdog early timeout on reload
+        this.isReloading = false; // Paper
     }
 
     // Paper start
@@ -1957,6 +1960,11 @@ public final class CraftServer implements Server {
 
         return CraftItemStack.asBukkitCopy(stack);
     }
+
+    @Override
+    public boolean isReloading() {
+        return this.isReloading;
+    }
     // Paper end
 
     @Override
