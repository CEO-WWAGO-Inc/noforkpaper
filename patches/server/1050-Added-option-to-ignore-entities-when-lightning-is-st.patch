From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jakush <James_Sulc@outlook.cz>
Date: Fri, 10 May 2024 20:56:40 +0200
Subject: [PATCH] Added option to ignore entities when lightning is striking


diff --git a/src/main/java/net/minecraft/world/entity/LightningBolt.java b/src/main/java/net/minecraft/world/entity/LightningBolt.java
index 4f701788bd21b61cad251a3a88f9bc416fb99051..ab5e83e3bb04967e57f7c2f3fe9a60c879243d71 100644
--- a/src/main/java/net/minecraft/world/entity/LightningBolt.java
+++ b/src/main/java/net/minecraft/world/entity/LightningBolt.java
@@ -6,8 +6,10 @@ import java.util.Iterator;
 import java.util.List;
 import java.util.Optional;
 import java.util.Set;
+import java.util.function.Predicate;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+import io.papermc.paper.event.weather.PreLightningSelectionEvent;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
@@ -106,6 +108,18 @@ public class LightningBolt extends Entity {
         }
 
         --this.life;
+        // Paper start - Added option to ignore entities when lightning is striking
+        PreLightningSelectionEvent event = new PreLightningSelectionEvent(this.level().getWorld(), (org.bukkit.entity.LightningStrike) getBukkitEntity());
+        event.callEvent();
+        if (event.isCancelled())
+            return;
+
+        Predicate<org.bukkit.entity.Entity> predicate = event.getPredicate() == null
+            ?
+            entity -> event.getIgnoredTypes().contains(entity.getType()) || event.getIgnoredEntities().contains(entity)
+            :
+            event.getPredicate();
+        // Paper end - Added option to ignore entities when lightning is striking
         List list;
         Iterator iterator;
 
@@ -139,7 +153,9 @@ public class LightningBolt extends Entity {
             if (!(this.level() instanceof ServerLevel)) {
                 this.level().setSkyFlashTime(2);
             } else if (!this.visualOnly) {
-                list = this.level().getEntities((Entity) this, new AABB(this.getX() - 3.0D, this.getY() - 3.0D, this.getZ() - 3.0D, this.getX() + 3.0D, this.getY() + 6.0D + 3.0D, this.getZ() + 3.0D), Entity::isAlive);
+                list = this.level().getEntities((Entity) this, new AABB(this.getX() - 3.0D, this.getY() - 3.0D, this.getZ() - 3.0D, this.getX() + 3.0D, this.getY() + 6.0D + 3.0D, this.getZ() + 3.0D), entity -> {
+                    return entity.isAlive() && !predicate.test(entity.getBukkitEntity()); // Paper - Added option to ignore entities when lightning is striking
+                });
                 iterator = list.iterator();
 
                 while (iterator.hasNext()) {
