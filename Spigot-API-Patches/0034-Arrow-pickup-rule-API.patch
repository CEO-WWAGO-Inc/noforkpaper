From 4145454dc311af775b10962642666e375bbbd462 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Fri, 4 Mar 2016 03:13:18 -0500
Subject: [PATCH] Arrow pickup rule API


diff --git a/src/main/java/org/bukkit/entity/Arrow.java b/src/main/java/org/bukkit/entity/Arrow.java
index ec8443b6..7b8f2c1a 100644
--- a/src/main/java/org/bukkit/entity/Arrow.java
+++ b/src/main/java/org/bukkit/entity/Arrow.java
@@ -94,4 +94,92 @@ public interface Arrow extends AbstractArrow {
      * in a state with no Custom Effects and PotionType.UNCRAFTABLE
      */
     void clearCustomEffects();
+
+    public enum PickupStatus {
+        /**
+         * The arrow cannot be picked up.
+         */
+        DISALLOWED,
+        /**
+         * The arrow can be picked up.
+         */
+        ALLOWED,
+        /**
+         * The arrow can only be picked up by players in creative mode.
+         */
+        CREATIVE_ONLY
+    }
+
+    // Spigot start
+    public class Spigot extends Entity.Spigot
+    {
+
+        /**
+         * Gets the base amount of damage this arrow will do.
+         *
+         * Defaults to 2.0 for a normal arrow with
+         * <code>0.5 * (1 + power level)</code> added for arrows fired from
+         * enchanted bows.
+         *
+         * @return base damage amount
+         * @deprecated {@link Arrow#getDamage()}
+         */
+        @Deprecated
+        public double getDamage()
+        {
+            throw new UnsupportedOperationException( "Not supported yet." );
+        }
+
+        /**
+         * Sets the base amount of damage this arrow will do.
+         *
+         * @param damage new damage amount
+         * @deprecated {@link Arrow#setDamage(double)}
+         */
+        @Deprecated
+        public void setDamage(double damage)
+        {
+            throw new UnsupportedOperationException( "Not supported yet." );
+        }
+    }
+
+    @NotNull
+    @Override
+    Spigot spigot();
+    // Spigot end
+
+    // Paper start
+    /**
+     * Gets the {@link PickupRule} for this arrow.
+     *
+     * <p>This is generally {@link PickupRule#ALLOWED} only if the arrow was
+     * <b>not</b> fired from a bow with the infinity enchantment.</p>
+     *
+     * @return The pickup rule
+     * @deprecated Use {@link Arrow#getPickupStatus()} as an upstream compatible replacement for this function
+     */
+    @Deprecated
+    default PickupRule getPickupRule() {
+        return PickupRule.valueOf(this.getPickupStatus().name());
+    }
+
+    /**
+     * Set the rule for which players can pickup this arrow as an item.
+     *
+     * @param rule The pickup rule
+     * @deprecated Use {@link Arrow#setPickupStatus(AbstractArrow.PickupStatus)} with {@link PickupStatus} as an upstream compatible replacement for this function
+     */
+    @Deprecated
+    default void setPickupRule(PickupRule rule) {
+        this.setPickupStatus(AbstractArrow.PickupStatus.valueOf(rule.name()));
+    }
+
+    @Deprecated
+    enum PickupRule {
+        DISALLOWED,
+        ALLOWED,
+        CREATIVE_ONLY;
+    }
+    // Paper end
+
 }
-- 
2.17.1

