From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Cryptite <cryptite@gmail.com>
Date: Mon, 1 May 2023 16:22:43 -0500
Subject: [PATCH] Add PlayerShieldDisableEvent

Called whenever a player's shield is disable. The cooldown (default 100 ticks) is also provided to optionally be changed

diff --git a/src/main/java/io/papermc/paper/event/player/PlayerShieldDisableEvent.java b/src/main/java/io/papermc/paper/event/player/PlayerShieldDisableEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..0ea97d57386e7bde1cd09a6117e3d77c4382be9a
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/player/PlayerShieldDisableEvent.java
@@ -0,0 +1,71 @@
+package io.papermc.paper.event.player;
+
+import org.bukkit.Material;
+import org.bukkit.entity.Entity;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+/**
+ * Thrown whenever a Player's shield is disabled
+ */
+public class PlayerShieldDisableEvent extends PlayerEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private final Entity damager;
+    private int cooldown;
+    private boolean cancelled = false;
+
+    public PlayerShieldDisableEvent(@NotNull final Player player, @Nullable final Entity damager, int cooldown) {
+        super(player);
+        this.damager = damager;
+        this.cooldown = cooldown;
+    }
+
+    /**
+     * @return Return the Entity that caused the shield disable attempt.
+     * <B>Note:</B> Presently the only way this could be null is if a plugin uses disableShield() on the nms Player (so, pretty unlikely)
+     */
+    @Nullable
+    public Entity getDamager() {
+        return damager;
+    }
+
+    /**
+     * @return Get the cooldown in ticks (used by {@link HumanEntity#setCooldown(Material, int)}) that the shield will be disabled for
+     */
+    public int getCooldown() {
+        return cooldown;
+    }
+
+    /**
+     * @param cooldown Set the cooldown in ticks (used by {@link HumanEntity#setCooldown(Material, int)}) that the shield will be disabled for
+     */
+    public void setCooldown(int cooldown) {
+        this.cooldown = cooldown;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+}
