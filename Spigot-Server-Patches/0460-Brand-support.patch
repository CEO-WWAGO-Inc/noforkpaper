From 899faf727c64d5a089a6c900a0ae15b0bd14b9b5 Mon Sep 17 00:00:00 2001
From: DigitalRegent <misterwener@gmail.com>
Date: Mon, 6 Apr 2020 21:21:23 +0200
Subject: [PATCH] Brand support


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 7929fcc8..e224be23 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -106,6 +106,8 @@ public class PlayerConnection implements PacketListenerPlayIn {
     private static final int MAX_SIGN_LINE_LENGTH = Integer.getInteger("Paper.maxSignLength", 80);
     private static final long KEEPALIVE_LIMIT = Long.getLong("paper.playerconnection.keepalive", 30) * 1000; // Paper - provide property to set keepalive limit
 
+    private String clientBrandName = null; // Paper - Brand name
+
     public PlayerConnection(MinecraftServer minecraftserver, NetworkManager networkmanager, EntityPlayer entityplayer) {
         this.minecraftServer = minecraftserver;
         this.networkManager = networkmanager;
@@ -2641,6 +2643,8 @@ public class PlayerConnection implements PacketListenerPlayIn {
     private static final MinecraftKey CUSTOM_REGISTER = new MinecraftKey("register");
     private static final MinecraftKey CUSTOM_UNREGISTER = new MinecraftKey("unregister");
 
+    private static final MinecraftKey MINECRAFT_BRAND = new MinecraftKey("brand"); // Paper - Brand support
+
     @Override
     public void a(PacketPlayInCustomPayload packetplayincustompayload) {
         PlayerConnectionUtils.ensureMainThread(packetplayincustompayload, this, this.player.getWorldServer());
@@ -2665,10 +2669,16 @@ public class PlayerConnection implements PacketListenerPlayIn {
                 this.disconnect("Invalid payload UNREGISTER!");
             }
         } else {
+            // Paper start - Brand support
+            byte[] data = new byte[packetplayincustompayload.data.readableBytes()];
+            packetplayincustompayload.data.readBytes(data);
+            
+            if (packetplayincustompayload.tag.equals(MINECRAFT_BRAND))
+                this.clientBrandName = new String(data);
+
             try {
-                byte[] data = new byte[packetplayincustompayload.data.readableBytes()];
-                packetplayincustompayload.data.readBytes(data);
                 server.getMessenger().dispatchIncomingMessage(player.getBukkitEntity(), packetplayincustompayload.tag.toString(), data);
+                // Paper end
             } catch (Exception ex) {
                 PlayerConnection.LOGGER.error("Couldn\'t dispatch custom payload", ex);
                 this.disconnect("Invalid custom payload!");
@@ -2677,6 +2687,12 @@ public class PlayerConnection implements PacketListenerPlayIn {
 
     }
 
+    // Paper start - brand support
+    public String getClientBrandName() {
+        return clientBrandName;
+    }
+    // Paper end
+
     public final boolean isDisconnected() {
         return (!this.player.joining && !this.networkManager.isConnected()) || this.processedDisconnect; // Paper
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 60f62f19..9444946b 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -2087,6 +2087,13 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         // Paper end
     };
 
+    // Paper start - brand support
+    @Override
+    public String getClientBrandName() {
+        return getHandle().playerConnection.getClientBrandName();
+    }
+    // Paper end
+    
     public Player.Spigot spigot()
     {
         return spigot;
-- 
2.25.1.windows.1

