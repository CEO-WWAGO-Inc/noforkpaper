From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Fruxz <cedricspitzer@outlook.de>
Date: Thu, 8 Oct 2020 18:17:29 +0200
Subject: [PATCH] fixup! Maded Title-objects directly sendable


diff --git a/src/main/java/com/destroystokyo/paper/Title.java b/src/main/java/com/destroystokyo/paper/Title.java
index d151f122e70160172621d0f48b8a8e3b35773def..67c11f9f89748a63233b81489fa6df0ebbea9e3a 100644
--- a/src/main/java/com/destroystokyo/paper/Title.java
+++ b/src/main/java/com/destroystokyo/paper/Title.java
@@ -124,11 +124,11 @@ public final class Title {
      */
     public Title(@NotNull BaseComponent title, @Nullable BaseComponent subtitle, int fadeIn, int stay, int fadeOut) {
         this(
-                new BaseComponent[]{checkNotNull(title, "title")},
-                subtitle == null ? null : new BaseComponent[]{subtitle},
-                fadeIn,
-                stay,
-                fadeOut
+            new BaseComponent[]{checkNotNull(title, "title")},
+            subtitle == null ? null : new BaseComponent[]{subtitle},
+            fadeIn,
+            stay,
+            fadeOut
         );
     }
 
@@ -166,11 +166,11 @@ public final class Title {
      */
     public Title(@NotNull String title, @Nullable String subtitle, int fadeIn, int stay, int fadeOut) {
         this(
-                TextComponent.fromLegacyText(checkNotNull(title, "title")),
-                subtitle == null ? null : TextComponent.fromLegacyText(subtitle),
-                fadeIn,
-                stay,
-                fadeOut
+            TextComponent.fromLegacyText(checkNotNull(title, "title")),
+            subtitle == null ? null : TextComponent.fromLegacyText(subtitle),
+            fadeIn,
+            stay,
+            fadeOut
         );
     }
 
@@ -230,9 +230,7 @@ public final class Title {
     /**
      * Sends the title directly to an player
      *
-     * <p>The player value can not be null!</p>
-     *
-     * @param player defines the target of the title
+     * @param player the receiver of the title
      */
     public void send(@NotNull Player player) {
         player.sendTitle(this);
@@ -241,34 +239,20 @@ public final class Title {
     /**
      * Sends the title directly to the defined players
      *
-     * <p>The players can be null, but the list itself not</p>
-     *
-     * @param players defines the targets of the title
+     * @param players the receivers of the title
      */
     public void send(@NotNull Collection<Player> players) {
-        if (players != null) {
-            players.forEach((player -> {
-                if (player != null && player.isOnline()) {
-                    send(player);
-                }
-            }));
-        }
+        players.forEach((this::send));
     }
 
     /**
      * Sends the title directly to the defined players
      *
-     * <p>The players can be null, but the array itself not</p>
-     *
-     * @param players defines the targets of the title
+     * @param players the receivers of the title
      */
     public void send(@NotNull Player[] players) {
-        if (players != null) {
-            Arrays.stream(players).forEach((player -> {
-                if (player != null && player.isOnline()) {
-                    player.sendTitle(this);
-                }
-            }));
+        for (Player player : players) {
+            player.sendTitle(this);
         }
     }
 
