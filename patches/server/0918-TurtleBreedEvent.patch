From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lulu13022002 <41980282+Lulu13022002@users.noreply.github.com>
Date: Thu, 23 Jun 2022 14:24:01 +0200
Subject: [PATCH] TurtleBreedEvent


diff --git a/src/main/java/net/minecraft/world/entity/animal/Turtle.java b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
index 5575730aa6f77a91467c394fa8465c335d73db8e..eacd2a8ef9b155283198f3da929ac796d7e21920 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Turtle.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
@@ -437,6 +437,16 @@ public class Turtle extends Animal {
                 entityplayer = this.partner.getLoveCause();
             }
 
+            // Paper start
+            RandomSource randomsource = this.animal.getRandom();
+            int experience = randomsource.nextInt(7) + 1;
+            io.papermc.paper.event.entity.TurtleBreedEvent event = new io.papermc.paper.event.entity.TurtleBreedEvent((org.bukkit.entity.Turtle) turtle.getBukkitEntity(), partner == null ? null : (org.bukkit.entity.Turtle) partner.getBukkitEntity(), entityplayer.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(turtle.breedItem).clone(), experience);
+            if(!event.callEvent()) {
+                return;
+            }
+            experience = event.getExperience();
+            // Paper end
+
             if (entityplayer != null) {
                 entityplayer.awardStat(Stats.ANIMALS_BRED);
                 CriteriaTriggers.BRED_ANIMALS.trigger(entityplayer, this.animal, this.partner, (AgeableMob) null);
@@ -445,10 +455,9 @@ public class Turtle extends Animal {
             this.turtle.setHasEgg(true);
             this.animal.resetLove();
             this.partner.resetLove();
-            RandomSource randomsource = this.animal.getRandom();
 
-            if (this.level.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) {
-                this.level.addFreshEntity(new ExperienceOrb(this.level, this.animal.getX(), this.animal.getY(), this.animal.getZ(), randomsource.nextInt(7) + 1, org.bukkit.entity.ExperienceOrb.SpawnReason.BREED, entityplayer)); // Paper;
+            if (experience > 0 && this.level.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) { // Paper
+                this.level.addFreshEntity(new ExperienceOrb(this.level, this.animal.getX(), this.animal.getY(), this.animal.getZ(), experience, org.bukkit.entity.ExperienceOrb.SpawnReason.BREED, entityplayer)); // Paper;
             }
 
         }
