From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ysl3000 <yannicklamprecht@live.de>
Date: Sun, 28 Jun 2020 21:35:06 +0200
Subject: [PATCH] Create HoverEvent from ItemStack Entity


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 25e01267888762826ffaf93711bdc7952c36da18..c563ec1cafca6bbc8449de0f72bd9a0cfbc9c747 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -47,6 +47,9 @@ import java.util.logging.Level;
 import java.util.logging.Logger;
 import javax.imageio.ImageIO;
 //import jline.console.ConsoleReader; // Paper
+import net.md_5.bungee.api.chat.HoverEvent; // Paper
+import net.md_5.bungee.api.chat.TextComponent; // Paper
+import net.md_5.bungee.chat.ComponentSerializer; // Paper
 import net.minecraft.server.Advancement;
 import net.minecraft.server.ArgumentEntity;
 import net.minecraft.server.BiomeManager;
@@ -88,6 +91,7 @@ import net.minecraft.server.MobSpawnerPatrol;
 import net.minecraft.server.MobSpawnerPhantom;
 import net.minecraft.server.MobSpawnerTrader;
 import net.minecraft.server.NBTBase;
+import net.minecraft.server.NBTTagCompound; // Paper
 import net.minecraft.server.PlayerList;
 import net.minecraft.server.RegistryMaterials;
 import net.minecraft.server.RegistryReadOps;
@@ -2340,5 +2344,29 @@ public final class CraftServer implements Server {
     public com.destroystokyo.paper.entity.ai.MobGoals getMobGoals() {
         return mobGoals;
     }
+
+    @Override
+    public HoverEvent hoverEventOf(ItemStack itemStack) {
+        String compoundString = CraftItemStack.asNMSCopy(itemStack).save(new NBTTagCompound()).toString();
+        return new HoverEvent(HoverEvent.Action.SHOW_ITEM, new BaseComponent[]{new TextComponent(compoundString)});
+    }
+
+    @Override
+    public HoverEvent hoverEventOf(Entity entity, String customName) {
+        return hoverEventOf(entity, customName!=null? new TextComponent(customName): null);
+    }
+
+    @Override
+    public HoverEvent hoverEventOf(Entity entity, BaseComponent customName) {
+        NBTTagCompound nbtTagCompound = new NBTTagCompound();
+        nbtTagCompound.setString("id", entity.getUniqueId().toString());
+        nbtTagCompound.setString("type", entity.getType().getKey().toString());
+        BaseComponent baseComponent = customName;
+        if(baseComponent == null){
+            baseComponent = new TextComponent(entity.getName());
+        }
+        nbtTagCompound.setString("name", ComponentSerializer.toString(baseComponent));
+        return new HoverEvent(HoverEvent.Action.SHOW_ENTITY, new BaseComponent[]{new TextComponent(nbtTagCompound.toString())});
+    }
     // Paper end
 }
