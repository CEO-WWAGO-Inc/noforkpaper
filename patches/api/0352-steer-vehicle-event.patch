From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: rgnter <maros.prejsa1@gmail.com>
Date: Mon, 3 Jan 2022 17:56:28 +0100
Subject: [PATCH] steer vehicle event


diff --git a/src/main/java/com/destroystokyo/paper/event/player/PlayerSteerVehicleEvent.java b/src/main/java/com/destroystokyo/paper/event/player/PlayerSteerVehicleEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..dbe465517e3c75d2baa99a34db30d7b4d3604534
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/player/PlayerSteerVehicleEvent.java
@@ -0,0 +1,66 @@
+package com.destroystokyo.paper.event.player;
+
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Called when player is steering any vehicle.
+ */
+public class PlayerSteerVehicleEvent extends Event {
+
+    private static final HandlerList handlers
+        = new HandlerList();
+
+    private final float sideways;
+    private final float forward;
+
+    private final boolean isJumping;
+    private final boolean isSneaking;
+
+    public PlayerSteerVehicleEvent(float sideways, float forward, boolean isJumping, boolean isSneaking) {
+        this.sideways = sideways;
+        this.forward = forward;
+        this.isJumping = isJumping;
+        this.isSneaking = isSneaking;
+    }
+
+    /**
+     * @return Sideways movement speed between -1.0f and 1.0f. Positive to left.
+     */
+    public float getSidewaysSpeed() {
+        return sideways;
+    }
+
+    /**
+     * @return Sideways movement speed between -1.0f and 1.0f. Positive forward.
+     */
+    public float getForwardSpeed() {
+        return forward;
+    }
+
+    /**
+     * @return Whether jump flag is set.
+     */
+    public boolean isJumping() {
+        return isJumping;
+    }
+
+    /**
+     * @return Whether sneak flag is set.
+     */
+    public boolean isSneaking() {
+        return isSneaking;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
