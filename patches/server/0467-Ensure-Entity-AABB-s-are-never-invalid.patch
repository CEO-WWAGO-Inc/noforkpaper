From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 10 May 2020 22:12:46 -0400
Subject: [PATCH] Ensure Entity AABB's are never invalid


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 912723108af2ffe660f0c2e528e4e028f7f74bcb..7606f6fd9a79b1becd7af5b203ababbc6c6e4b7e 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -560,7 +560,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
 
     public void setPos(double x, double y, double z) {
         this.setPosRaw(x, y, z);
-        this.setBoundingBox(this.makeBoundingBox());
+        // this.setBoundingBox(this.makeBoundingBox()); // Paper - move into setPositionRaw
     }
 
     protected AABB makeBoundingBox() {
@@ -3750,6 +3750,13 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
                 this.blockPosition = new BlockPos(i, j, k);
             }

+            // Paper start - never allow AABB to become desynced from position
+            // hanging has its own special logic
+            if (!(this instanceof net.minecraft.world.entity.decoration.HangingEntity)) {
+                this.setBoundingBox(this.makeBoundingBox());
+            }
+            // Paper end
+
             this.levelCallback.onMove();
             GameEventListenerRegistrar gameeventlistenerregistrar = this.getGameEventListenerRegistrar();
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/Shulker.java b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
index ca0d1c059a6ad94590bcbff34b37b9c13ef19474..c61f127342f404fbf766c64254fd191ff01f1507 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Shulker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
@@ -236,6 +236,7 @@ public class Shulker extends AbstractGolem implements Enemy {

     private void onPeekAmountChange() {
         this.reapplyPosition();
+        this.setBoundingBox(this.makeBoundingBox()); // Paper - manually update bounding box as paper caches bounding box if the entity did not move (See Entity#setPosRaw)
         float f = Shulker.getPhysicalPeek(this.currentPeekAmount);
         float f1 = Shulker.getPhysicalPeek(this.currentPeekAmountO);
         Direction enumdirection = this.getAttachFace().getOpposite();
