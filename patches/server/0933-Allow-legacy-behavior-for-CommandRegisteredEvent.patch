From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jason Penilla <11360596+jpenilla@users.noreply.github.com>
Date: Fri, 5 Aug 2022 14:14:28 -0700
Subject: [PATCH] Allow legacy behavior for CommandRegisteredEvent


diff --git a/src/main/java/com/mojang/brigadier/tree/CommandNode.java b/src/main/java/com/mojang/brigadier/tree/CommandNode.java
index d65defd5fc54086a969c568b93dfb05f40dd5a44..39844531b03eb8a6c70700b4ecbf0ff1a557424d 100644
--- a/src/main/java/com/mojang/brigadier/tree/CommandNode.java
+++ b/src/main/java/com/mojang/brigadier/tree/CommandNode.java
@@ -34,6 +34,7 @@ public abstract class CommandNode<S> implements Comparable<CommandNode<S>> {
     private final RedirectModifier<S> modifier;
     private final boolean forks;
     private Command<S> command;
+    public LiteralCommandNode<CommandSourceStack> clientNode = null; // Paper
     // CraftBukkit start
     public void removeCommand(String name) {
         this.children.remove(name);
diff --git a/src/main/java/net/minecraft/commands/Commands.java b/src/main/java/net/minecraft/commands/Commands.java
index fcc75660a69122eefc100e4de0a62f587bf97d7b..8fd28fa902b5eb0382b829c1cfe816e136a1d18e 100644
--- a/src/main/java/net/minecraft/commands/Commands.java
+++ b/src/main/java/net/minecraft/commands/Commands.java
@@ -425,6 +425,11 @@ public class Commands {
         boolean registeredAskServerSuggestionsForTree = false; // Paper - tell clients to ask server for suggestions for EntityArguments
         while (iterator.hasNext()) {
             CommandNode<CommandSourceStack> commandnode2 = (CommandNode) iterator.next();
+            // Paper start
+            if (commandnode2.clientNode != null) {
+                commandnode2 = commandnode2.clientNode;
+            }
+            // Paper end
             if ( !org.spigotmc.SpigotConfig.sendNamespaced && commandnode2.getName().contains( ":" ) ) continue; // Spigot
 
             if (commandnode2.canUse(source)) {
diff --git a/src/main/java/org/bukkit/craftbukkit/command/BukkitCommandWrapper.java b/src/main/java/org/bukkit/craftbukkit/command/BukkitCommandWrapper.java
index 2476727cd60034c4df2db36b9ed808e72d7b686f..cf29e5701283de5c4806b817999ffbf01f1cc027 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/BukkitCommandWrapper.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/BukkitCommandWrapper.java
@@ -34,6 +34,7 @@ public class BukkitCommandWrapper implements com.mojang.brigadier.Command<Comman
         // Paper start - Expose Brigadier to Paper-MojangAPI
         com.mojang.brigadier.tree.RootCommandNode<CommandSourceStack> root = dispatcher.getRoot();
         LiteralCommandNode<CommandSourceStack> literal = LiteralArgumentBuilder.<CommandSourceStack>literal(label).requires(this).executes(this).build();
+        LiteralCommandNode<CommandSourceStack> defaultNode = literal;
         com.mojang.brigadier.tree.ArgumentCommandNode<CommandSourceStack, String> defaultArgs = RequiredArgumentBuilder.<CommandSourceStack, String>argument("args", StringArgumentType.greedyString()).suggests(this).executes(this).build();
         literal.addChild(defaultArgs);
         com.destroystokyo.paper.event.brigadier.CommandRegisteredEvent<CommandSourceStack> event = new com.destroystokyo.paper.event.brigadier.CommandRegisteredEvent<>(label, this, this.command, root, literal, defaultArgs);
@@ -41,6 +42,10 @@ public class BukkitCommandWrapper implements com.mojang.brigadier.Command<Comman
             return null;
         }
         literal = event.getLiteral();
+        if (event.getLegacyBehavior()) {
+            defaultNode.clientNode = literal;
+            literal = defaultNode;
+        }
         root.addChild(literal);
         return literal;
         // Paper end
