From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Thu, 20 May 2021 20:40:53 -0700
Subject: [PATCH] Fix PotionSplashEvent for water splash potions

Fixes SPIGOT-6221: https://hub.spigotmc.org/jira/projects/SPIGOT/issues/SPIGOT-6221

diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
index b5e2c391ebcca05db5c960792fcb14991aec4fe2..d3dfeddb7d8719091103bd4d1b850df127ef4bf9 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
@@ -123,33 +123,50 @@ public class ThrownPotion extends ThrowableItemProjectile implements ItemSupplie
         }
     }
 
+    private static final Predicate<net.minecraft.world.entity.LivingEntity> APPLY_WATER_GET_ENTITIES_PREDICATE = ThrownPotion.WATER_SENSITIVE_OR_ON_FIRE.or(Axolotl.class::isInstance); // Paper
     private void applyWater() {
         AABB axisalignedbb = this.getBoundingBox().inflate(4.0D, 2.0D, 4.0D);
-        List<net.minecraft.world.entity.LivingEntity> list = this.level.getEntitiesOfClass(net.minecraft.world.entity.LivingEntity.class, axisalignedbb, ThrownPotion.WATER_SENSITIVE_OR_ON_FIRE);
+        // Paper start
+        List<net.minecraft.world.entity.LivingEntity> list = this.level.getEntitiesOfClass(net.minecraft.world.entity.LivingEntity.class, axisalignedbb, ThrownPotion.APPLY_WATER_GET_ENTITIES_PREDICATE);
+        Map<LivingEntity, Double> affected = new HashMap<>();
+        List<org.bukkit.entity.Axolotl> rehydrate = new java.util.ArrayList<>();
+        List<LivingEntity> extinguish = new java.util.ArrayList<>();
         Iterator iterator = list.iterator();
 
         while (iterator.hasNext()) {
             net.minecraft.world.entity.LivingEntity entityliving = (net.minecraft.world.entity.LivingEntity) iterator.next();
+            if (entityliving instanceof Axolotl axolotl) {
+                rehydrate.add(((org.bukkit.entity.Axolotl) axolotl.getBukkitEntity()));
+            }
             double d0 = this.distanceToSqr((Entity) entityliving);
 
             if (d0 < 16.0D) {
                 if (entityliving.isSensitiveToWater()) {
-                    entityliving.hurt(DamageSource.indirectMagic(this, this.getOwner()), 1.0F);
+                    affected.put(entityliving.getBukkitLivingEntity(), 1.0);
                 }
 
                 if (entityliving.isOnFire() && entityliving.isAlive()) {
-                    entityliving.extinguishFire();
+                    extinguish.add(entityliving.getBukkitLivingEntity());
                 }
             }
         }
 
-        List<Axolotl> list1 = this.level.getEntitiesOfClass(Axolotl.class, axisalignedbb);
-        Iterator iterator1 = list1.iterator();
-
-        while (iterator1.hasNext()) {
-            Axolotl axolotl = (Axolotl) iterator1.next();
-
-            axolotl.rehydrate();
+        io.papermc.paper.event.entity.SplashWaterBottleSplashEvent event = new io.papermc.paper.event.entity.SplashWaterBottleSplashEvent(
+            (org.bukkit.entity.ThrownPotion) this.getBukkitEntity(), affected, rehydrate, extinguish
+        );
+        if (event.callEvent()) {
+            for (LivingEntity affectedEntity : event.getAffectedEntities()) {
+                if (event.getIntensity(affectedEntity) > 0) {
+                    ((CraftLivingEntity) affectedEntity).getHandle().hurt(DamageSource.indirectMagic(this, this.getOwner()), 1.0F);
+                }
+            }
+            for (LivingEntity toExtinguish : event.getToExtinguish()) {
+                ((CraftLivingEntity) toExtinguish).getHandle().extinguishFire();
+            }
+            for (org.bukkit.entity.Axolotl axolotl : event.getToRehydrate()) {
+                ((Axolotl) ((CraftLivingEntity) axolotl).getHandle()).rehydrate();
+            }
+            // Paper end
         }
 
     }
@@ -170,6 +187,7 @@ public class ThrownPotion extends ThrowableItemProjectile implements ItemSupplie
                     double d0 = this.distanceToSqr((Entity) entityliving);
 
                     if (d0 < 16.0D) {
+                        // Paper - diff on change, used when calling the splash event for water splash potions
                         double d1 = 1.0D - Math.sqrt(d0) / 4.0D;
 
                         if (entityliving == entity) {
