From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MelnCat <melncatuwu@gmail.com>
Date: Fri, 12 Aug 2022 23:24:53 -0700
Subject: [PATCH] Add getDrops and isPreferredTool to BlockState


diff --git a/src/main/java/org/bukkit/block/BlockState.java b/src/main/java/org/bukkit/block/BlockState.java
index 10cbe71917bc32cca61748bcb0aa3395c554dbf8..0f19f8b6e68e73eb83bfb82c6f4d2c22c550a7d8 100644
--- a/src/main/java/org/bukkit/block/BlockState.java
+++ b/src/main/java/org/bukkit/block/BlockState.java
@@ -5,12 +5,16 @@ import org.bukkit.Location;
 import org.bukkit.Material;
 import org.bukkit.World;
 import org.bukkit.block.data.BlockData;
+import org.bukkit.entity.Entity;
+import org.bukkit.inventory.ItemStack;
 import org.bukkit.material.MaterialData;
 import org.bukkit.metadata.Metadatable;
 import org.jetbrains.annotations.Contract;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
+import java.util.Collection;
+
 /**
  * Represents a captured state of a block, which will not change
  * automatically.
@@ -233,5 +237,45 @@ public interface BlockState extends Metadatable {
      * @return true if collidable
      */
     boolean isCollidable();
+
+    /**
+     * Returns a list of items which would drop by destroying this block state.
+     *
+     * @return a list of dropped items for the block state
+     */
+    @NotNull
+    Collection<ItemStack> getDrops();
+
+    /**
+     * Returns a list of items which would drop by destroying this block state
+     * with a specific tool
+     *
+     * @param tool The tool or item in hand used for digging
+     * @return a list of dropped items for the block state
+     */
+    @NotNull
+    Collection<ItemStack> getDrops(@Nullable ItemStack tool);
+
+    /**
+     * Returns a list of items which would drop by the entity destroying this
+     * block state with a specific tool
+     *
+     * @param tool The tool or item in hand used for digging
+     * @param entity the entity destroying the block
+     * @return a list of dropped items for the block state
+     */
+    @NotNull
+    Collection<ItemStack> getDrops(@NotNull ItemStack tool, @Nullable Entity entity);
+
+    /**
+     * Returns if the given item is a preferred choice to break this block state.
+     *
+     * In some cases this determines if a block will drop anything or extra
+     * loot.
+     *
+     * @param tool The tool or item used for breaking this block state
+     * @return true if the tool is preferred for breaking this block state
+     */
+    boolean isPreferredTool(@NotNull ItemStack tool);
     // Paper end
 }
