From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Matthew Miller <mnmiller1@me.com>
Date: Fri, 19 Mar 2021 19:24:32 +1000
Subject: [PATCH] Add EntitySearchTargetEvent


diff --git a/src/main/java/io/papermc/paper/event/entity/EntitySearchTargetEvent.java b/src/main/java/io/papermc/paper/event/entity/EntitySearchTargetEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..c2cf90f935a30a3a6d81f7e1b5c3de66e53917b9
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/entity/EntitySearchTargetEvent.java
@@ -0,0 +1,66 @@
+package io.papermc.paper.event.entity;
+
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+/**
+ * Called when an entity attempts to find another entity to target.
+ */
+public class EntitySearchTargetEvent extends EntityEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private boolean canceled;
+    private LivingEntity target;
+
+    public EntitySearchTargetEvent(@NotNull LivingEntity entity, @Nullable LivingEntity target) {
+        super(entity);
+        this.target = target;
+    }
+
+    @Override
+    @NotNull
+    public LivingEntity getEntity() {
+        return (LivingEntity) entity;
+    }
+
+    /**
+     * Get the targeted entity, if any.
+     *
+     * @return The targeted entity
+     */
+    @Nullable
+    public LivingEntity getTarget() {
+        return target;
+    }
+
+    /**
+     * Set the targeted entity, or null for no target.
+     *
+     * @param target The targeted entity
+     */
+    public void setTarget(@Nullable LivingEntity target) {
+        this.target = target;
+    }
+
+    public boolean isCancelled() {
+        return canceled;
+    }
+
+    public void setCancelled(boolean cancel) {
+        canceled = cancel;
+    }
+
+    @Override
+    @NotNull
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
