From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Owen1212055 <23108066+Owen1212055@users.noreply.github.com>
Date: Wed, 6 Oct 2021 20:10:36 -0400
Subject: [PATCH] Collision API


diff --git a/src/main/java/org/bukkit/RegionAccessor.java b/src/main/java/org/bukkit/RegionAccessor.java
index e55f6e2baf35dbd91c433ab9e62713eaac85435b..7e1ac06f9e74e72b9e02eb4d2008e2ef5a7a89cc 100644
--- a/src/main/java/org/bukkit/RegionAccessor.java
+++ b/src/main/java/org/bukkit/RegionAccessor.java
@@ -376,4 +376,17 @@ public interface RegionAccessor {
      */
     @NotNull
     public <T extends Entity> T spawn(@NotNull Location location, @NotNull Class<T> clazz, boolean randomizeData, @Nullable Consumer<T> function) throws IllegalArgumentException;
+
+    // Paper Start - Collision API
+
+    /**
+     * Checks for any collisions in the given boundingbox.
+     * This will check for any colliding hard entities (boats, shulkers) / worldborder / blocks.
+     * Does not load chunks that are within the bounding box.
+     *
+     * @param boundingBox the box to check collisions in
+     * @return collides or not
+     */
+    boolean collidesWith(@NotNull org.bukkit.util.BoundingBox boundingBox);
+    // Paper End - Collision API
 }
diff --git a/src/main/java/org/bukkit/entity/Entity.java b/src/main/java/org/bukkit/entity/Entity.java
index 8bc6876c82935988436597161fa0ec94c032174b..23524b1b10242f4f54f31dad0b33d6a7bb266336 100644
--- a/src/main/java/org/bukkit/entity/Entity.java
+++ b/src/main/java/org/bukkit/entity/Entity.java
@@ -830,4 +830,26 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
      */
     boolean isInPowderedSnow();
     // Paper end
+
+    // Paper Start - Collision API
+    /**
+     * Checks for any collisions in the given boundingbox.
+     * This will check for any colliding entities (boats, shulkers) / worldborder / blocks.
+     * Does not load chunks that are within the bounding box at the specified location.
+     *
+     * @param location the location to check collisions in
+     * @return collides or not
+     */
+    boolean collidesAt(@NotNull Location location);
+
+    /**
+     * Checks for any collisions in the given boundingbox.
+     * This will check for any colliding entities (boats, shulkers) / worldborder / blocks.
+     * Does not load chunks that are within the bounding box.
+     *
+     * @param boundingBox the box to check collisions in
+     * @return collides or not
+     */
+    boolean collidesWith(@NotNull BoundingBox boundingBox);
+    // Paper End - Collision API
 }
