From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Thu, 11 Jun 2020 17:29:42 -0700
Subject: [PATCH] Fix piston physics inconsistency - MC-188840

Pistons invoke physics when they move blocks. The physics can cause
tnt blocks to ignite. However, pistons (when storing the blocks they "moved")
don't actually go back to the world state sometimes to check if something
like that happened. As a result they end up moving the tnt like it was
never ignited. This resulted in the ability to create machines
that can duplicate tnt, called "world eaters".
This patch makes the piston logic retrieve the block state from the world
prevent this from occuring.

Tested against the following tnt duper design:
https://www.youtube.com/watch?v=mS7xxNGhjxs

This patch also affects every type of machine that utilises
this mechanic. For example, dead coral is removed by a physics
update when being moved while it is attached to slimeblocks.

Standard piston machines that don't destroy or modify the
blocks they move by physics updates should be entirely
unaffected.

This patch fixes https://bugs.mojang.com/browse/MC-188840

diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index ecacb72b922927f06883b75e7d2cc1f904eb9f03..b338e6574e54d18f2c1f608336a400b35172d72b 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -691,4 +691,9 @@ public class PaperWorldConfig {
             delayChunkUnloadsBy *= 20;
         }
     }
+
+    public boolean fixPistonTntDuplicaton = true;
+    private void fixPistonTntDuplicaton() {
+        fixPistonTntDuplicaton = getBoolean("fix-piston-tnt-duplication", fixPistonTntDuplicaton);
+    }
 }
diff --git a/src/main/java/net/minecraft/server/BlockPiston.java b/src/main/java/net/minecraft/server/BlockPiston.java
index b29525c40dc8e3ae747b8ddf5a3bd79b7cc0b792..09dd085e5ab2633c4661aa4f924d4b237a32721f 100644
--- a/src/main/java/net/minecraft/server/BlockPiston.java
+++ b/src/main/java/net/minecraft/server/BlockPiston.java
@@ -364,11 +364,17 @@ public class BlockPiston extends BlockDirectional {
 
             for (k = list.size() - 1; k >= 0; --k) {
                 blockposition3 = (BlockPosition) list.get(k);
-                iblockdata1 = world.getType(blockposition3);
+                iblockdata1 = world.getType(blockposition3); if (world.paperConfig.fixPistonTntDuplicaton) map.replace(blockposition3, iblockdata1); // Paper - fix piston physics inconsistency & make piston tnt duplication configurable
                 blockposition3 = blockposition3.shift(enumdirection1);
                 map.remove(blockposition3);
                 world.setTypeAndData(blockposition3, (IBlockData) Blocks.MOVING_PISTON.getBlockData().set(BlockPiston.FACING, enumdirection), 68);
-                world.setTileEntity(blockposition3, BlockPistonMoving.a((IBlockData) list1.get(k), enumdirection, flag, false));
+                // Paper start - Make piston tnt duplication configurable
+                if (world.paperConfig.fixPistonTntDuplicaton) {
+                    world.setTileEntity(blockposition3, BlockPistonMoving.a(iblockdata1, enumdirection, flag, false)); // Paper - fix piston physics inconsistency
+                } else {
+                    world.setTileEntity(blockposition3, BlockPistonMoving.a((IBlockData) list1.get(k), enumdirection, flag, false));
+                }
+                // Paper end
                 --j;
                 aiblockdata[j] = iblockdata1;
             }
diff --git a/src/main/java/net/minecraft/server/TileEntityPiston.java b/src/main/java/net/minecraft/server/TileEntityPiston.java
index 489175abd8e582a3c082364fec357c4f061a22d7..a3b10ba42a6fe8a0a7c93ef339fb58dcde52f433 100644
--- a/src/main/java/net/minecraft/server/TileEntityPiston.java
+++ b/src/main/java/net/minecraft/server/TileEntityPiston.java
@@ -275,7 +275,13 @@ public class TileEntityPiston extends TileEntity implements ITickable {
                 IBlockData iblockdata = Block.b(this.a, (GeneratorAccess) this.world, this.position);
 
                 if (iblockdata.isAir()) {
-                    this.world.setTypeAndData(this.position, this.a, 84);
+                    // Paper start - Make piston tnt duplication configurable
+                    if (this.world.paperConfig.fixPistonTntDuplicaton) {
+                        this.world.setTypeAndData(this.position, this.a, 84 | 2); // Paper - force notify (flag 2), it's possible the set type by the piston block (which doesn't notify) set this block to air
+                    } else {
+                        this.world.setTypeAndData(this.position, this.a, 84);
+                    }
+                    // Paper end
                     Block.a(this.a, iblockdata, this.world, this.position, 3);
                 } else {
                     if (iblockdata.b((IBlockState) BlockProperties.C) && (Boolean) iblockdata.get(BlockProperties.C)) {
