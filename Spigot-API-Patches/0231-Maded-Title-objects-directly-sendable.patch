From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Fruxz <cedricspitzer@outlook.de>
Date: Thu, 8 Oct 2020 11:06:46 +0200
Subject: [PATCH] Maded Title-objects directly sendable


diff --git a/src/main/java/com/destroystokyo/paper/Title.java b/src/main/java/com/destroystokyo/paper/Title.java
index 4fe18540f77143ee7cd7e94d3aa279ae744289e4..d151f122e70160172621d0f48b8a8e3b35773def 100644
--- a/src/main/java/com/destroystokyo/paper/Title.java
+++ b/src/main/java/com/destroystokyo/paper/Title.java
@@ -7,6 +7,9 @@ import org.bukkit.entity.Player;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
+import java.util.Arrays;
+import java.util.Collection;
+
 import static com.google.common.base.Preconditions.checkArgument;
 import static com.google.common.base.Preconditions.checkNotNull;
 import static com.google.common.base.Preconditions.checkState;
@@ -224,6 +227,51 @@ public final class Title {
         return this.fadeOut;
     }
 
+    /**
+     * Sends the title directly to an player
+     *
+     * <p>The player value can not be null!</p>
+     *
+     * @param player defines the target of the title
+     */
+    public void send(@NotNull Player player) {
+        player.sendTitle(this);
+    }
+
+    /**
+     * Sends the title directly to the defined players
+     *
+     * <p>The players can be null, but the list itself not</p>
+     *
+     * @param players defines the targets of the title
+     */
+    public void send(@NotNull Collection<Player> players) {
+        if (players != null) {
+            players.forEach((player -> {
+                if (player != null && player.isOnline()) {
+                    send(player);
+                }
+            }));
+        }
+    }
+
+    /**
+     * Sends the title directly to the defined players
+     *
+     * <p>The players can be null, but the array itself not</p>
+     *
+     * @param players defines the targets of the title
+     */
+    public void send(@NotNull Player[] players) {
+        if (players != null) {
+            Arrays.stream(players).forEach((player -> {
+                if (player != null && player.isOnline()) {
+                    player.sendTitle(this);
+                }
+            }));
+        }
+    }
+
     @NotNull
     public static Builder builder() {
         return new Builder();
