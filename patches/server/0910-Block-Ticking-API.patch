From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Owen1212055 <23108066+Owen1212055@users.noreply.github.com>
Date: Sun, 26 Dec 2021 13:23:46 -0500
Subject: [PATCH] Block Ticking API


diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
index bfe9dc935c87e01fb435d8b46ce413b84ca74856..5f9d0ec4a30b99bd96a3bb1b8c082af2f34c21d1 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
@@ -536,6 +536,23 @@ public class CraftBlock implements Block {
         // SPIGOT-6778: Directly call setBlock instead of setTypeAndData, so that the tile entiy is not removed and custom remove logic is run.
         return this.world.setBlock(position, fluidState.createLegacyBlock(), 3) && result; // Paper - leave liquid if waterlogged
     }
+    // Paper start - Block tick API
+    @Override
+    public void tick() {
+        net.minecraft.world.level.block.state.BlockState blockData = this.getNMS();
+        var level = this.world.getMinecraftWorld();
+
+        blockData.getBlock().tick(blockData, level, position, level.random);
+    }
+
+    @Override
+    public void randomTick() {
+        net.minecraft.world.level.block.state.BlockState blockData = this.getNMS();
+        var level = this.world.getMinecraftWorld();
+
+        blockData.getBlock().randomTick(blockData, level, position, level.random);
+    }
+    // Paper end
 
     @Override
     public boolean applyBoneMeal(BlockFace face) {
diff --git a/src/main/java/org/bukkit/craftbukkit/block/data/CraftBlockData.java b/src/main/java/org/bukkit/craftbukkit/block/data/CraftBlockData.java
index 4cc67caac2be8c75cd60be5ac63c9aefcc6e2c9c..aaab87049185ccd814592fa34f34de75f990aeeb 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/data/CraftBlockData.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/data/CraftBlockData.java
@@ -575,4 +575,11 @@ public class CraftBlockData implements BlockData {
     public SoundGroup getSoundGroup() {
         return CraftSoundGroup.getSoundGroup(this.state.getSoundType());
     }
+
+    // Paper start - Ticking API
+    @Override
+    public boolean isRandomlyTicked() {
+        return state.isRandomlyTicking();
+    }
+    // Paper end
 }
