From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Micah Rao <micah.s.rao@gmail.com>
Date: Wed, 7 Feb 2024 09:40:11 -0500
Subject: [PATCH] fixup! Check for server JARs in plugin directory


diff --git a/src/main/java/io/papermc/paper/plugin/provider/source/FileProviderSource.java b/src/main/java/io/papermc/paper/plugin/provider/source/FileProviderSource.java
index a835cfa818926354aeabf5f6309c9c50aeff09d5..633ed0e705e5ce460a3791e0d7e35f71f28832f6 100644
--- a/src/main/java/io/papermc/paper/plugin/provider/source/FileProviderSource.java
+++ b/src/main/java/io/papermc/paper/plugin/provider/source/FileProviderSource.java
@@ -58,18 +58,18 @@ public class FileProviderSource implements ProviderSource<Path, Path> {
         String source = this.contextChecker.apply(context);
 
         JarFile file = new JarFile(context.toFile(), true, JarFile.OPEN_READ, JarFile.runtimeVersion());
-        // Paper start - Check for server JARs in plugin directory
-        if (file.getEntry("META-INF/versions.list") != null) {
-            java.util.logging.Logger.getLogger("Minecraft").warning(
-                context + " is a server JAR and should be removed from the plugins folder."
-            );
-
-            throw new IllegalArgumentException(context + " is a server JAR");
-        }
-        // Paper end - Check for server JARs in plugin directory
-
         PluginFileType<?, ?> type = PluginFileType.guessType(file);
         if (type == null) {
+            // Paper start - Check for server JARs in plugin directory
+            if (file.getEntry("META-INF/versions.list") != null) {
+                java.util.logging.Logger.getLogger("Minecraft").warning(
+                    context + " is a server JAR and should be removed from the plugins folder."
+                );
+
+                throw new IllegalArgumentException(context + " is a server JAR");
+            }
+            // Paper end - Check for server JARs in plugin directory
+
             throw new IllegalArgumentException(source + " does not contain a " + String.join(" or ", PluginFileType.getConfigTypes()) + "! Could not determine plugin type, cannot load a plugin from it!");
         }
 
