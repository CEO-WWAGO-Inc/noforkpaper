From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sun, 4 Dec 2022 19:21:52 -0800
Subject: [PATCH] Add FluidState API


diff --git a/src/main/java/io/papermc/paper/block/fluid/FluidData.java b/src/main/java/io/papermc/paper/block/fluid/FluidData.java
new file mode 100644
index 0000000000000000000000000000000000000000..251e5b5a9b5ec5c71fefb53af48eed423228f49c
--- /dev/null
+++ b/src/main/java/io/papermc/paper/block/fluid/FluidData.java
@@ -0,0 +1,21 @@
+package io.papermc.paper.block.fluid;
+
+import org.bukkit.Fluid;
+import org.jetbrains.annotations.NotNull;
+
+public interface FluidData extends Cloneable {
+
+    /**
+     * Gets the fluid type of this fluid data.
+     *
+     * @return the fluid type
+     */
+    @NotNull Fluid getFluidType();
+
+    /**
+     * Returns a copy of this FluidData.
+     *
+     * @return a copy of the fluid data
+     */
+    @NotNull FluidData clone();
+}
diff --git a/src/main/java/io/papermc/paper/block/fluid/type/Flowing.java b/src/main/java/io/papermc/paper/block/fluid/type/Flowing.java
new file mode 100644
index 0000000000000000000000000000000000000000..1fac91e43eabcfd183c8a4c143e604e04723e668
--- /dev/null
+++ b/src/main/java/io/papermc/paper/block/fluid/type/Flowing.java
@@ -0,0 +1,25 @@
+package io.papermc.paper.block.fluid.type;
+
+public interface Flowing extends IdkWhat {
+
+    /**
+     * Get the level of the flowing liquid.
+     *
+     * @return the level
+     */
+    int getLevel();
+
+    /**
+     * Get the minimum possible level for the liquid.
+     *
+     * @return the minimum level
+     */
+    int getMinimumLevel();
+
+    /**
+     * Get the maximum possible level for the liquid.
+     *
+     * @return the maximum level
+     */
+    int getMaximumLevel();
+}
diff --git a/src/main/java/io/papermc/paper/block/fluid/type/IdkWhat.java b/src/main/java/io/papermc/paper/block/fluid/type/IdkWhat.java
new file mode 100644
index 0000000000000000000000000000000000000000..d4ea786475d1b514e23d9c017919da94483040f6
--- /dev/null
+++ b/src/main/java/io/papermc/paper/block/fluid/type/IdkWhat.java
@@ -0,0 +1,13 @@
+package io.papermc.paper.block.fluid.type;
+
+import io.papermc.paper.block.fluid.FluidData;
+
+public interface IdkWhat extends FluidData {
+
+    /**
+     * Get if this liquid is falling.
+     *
+     * @return true if falling
+     */
+    boolean isFalling();
+}
diff --git a/src/main/java/org/bukkit/block/data/BlockData.java b/src/main/java/org/bukkit/block/data/BlockData.java
index b166d053b3c44f06cb1f5b643e7f7e117eb21d17..d02f969d0eb0f8a12d229b5fb24bdb89be848a9c 100644
--- a/src/main/java/org/bukkit/block/data/BlockData.java
+++ b/src/main/java/org/bukkit/block/data/BlockData.java
@@ -171,5 +171,7 @@ public interface BlockData extends Cloneable {
      * @return true if the tool is preferred for breaking this block
      */
     boolean isPreferredTool(@NotNull org.bukkit.inventory.ItemStack tool);
+
+    @NotNull io.papermc.paper.block.fluid.FluidData getFluidData();
     // Paper end
 }
