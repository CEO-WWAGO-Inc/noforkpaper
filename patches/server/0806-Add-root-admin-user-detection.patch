From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: egg82 <eggys82@gmail.com>
Date: Sat, 11 Sep 2021 22:55:14 +0200
Subject: [PATCH] Add root/admin user detection

This patch detects whether or not the server is currently executing as a privileged user and spits out a warning.
The warning serves as a sort-of PSA for newer server admins who don't understand the risks of running as root.
We've seen plenty of bad/malicious plugins hit markets, and there's been a few close-calls with exploits in the past.
Hopefully this helps mitigate some potential damage to servers, even if it is just a warning.

Co-authored-by: Noah van der Aa <ndvdaa@gmail.com>

diff --git a/src/main/java/io/papermc/paper/util/ServerEnvironment.java b/src/main/java/io/papermc/paper/util/ServerEnvironment.java
new file mode 100644
index 0000000000000000000000000000000000000000..fb2320730210d1d48cbe524e19140dd715ba2bd0
--- /dev/null
+++ b/src/main/java/io/papermc/paper/util/ServerEnvironment.java
@@ -0,0 +1,57 @@
+package io.papermc.paper.util;
+
+import org.apache.commons.lang.SystemUtils;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.PrintStream;
+import java.util.prefs.Preferences;
+
+public class ServerEnvironment {
+    private static final boolean runningAsRootOrAdmin;
+
+    static {
+        if (SystemUtils.IS_OS_WINDOWS) {
+            // https://stackoverflow.com/a/23538961
+            Preferences prefs = Preferences.systemRoot();
+            PrintStream err = System.err;
+            PrintStream emptyStream = new PrintStream(new OutputStream() {
+                @Override
+                public void write(int b) {
+                }
+            });
+
+            System.err.flush();
+            System.setErr(emptyStream);
+
+            boolean retVal;
+            try {
+                prefs.put("papermc.priv_test", "This is a test performed by the Paper Minecraft server software."); // SecurityException
+                prefs.remove("papermc.priv_test");
+                prefs.flush(); // BackingStoreException
+                retVal = true;
+            } catch (Exception ignored) { // Windows = SecurityException
+                retVal = false;
+            }
+            runningAsRootOrAdmin = retVal;
+
+            System.err.flush();
+            System.setErr(err);
+        } else {
+            String uid = "";
+
+            try (final InputStream inputStream = Runtime.getRuntime().exec("id -u " + System.getProperty("user.name")).getInputStream()) {
+                uid = new String(inputStream.readAllBytes()).trim();
+            } catch (IOException ignored) {
+            }
+
+            // On Unix systems the UID for the root user is always zero.
+            runningAsRootOrAdmin = uid.equals("0");
+        }
+    }
+
+    public static boolean userIsRootOrAdmin() {
+        return runningAsRootOrAdmin;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 1bf19965d12514dee34545235bfbadc0b74ddc8b..1146ae9273906428bc96c4beff3c9f44b2a0490d 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -190,6 +190,17 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
             DedicatedServer.LOGGER.warn("To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
         }
 
+        // Paper start - detect running as root
+        if (io.papermc.paper.util.ServerEnvironment.userIsRootOrAdmin()) {
+            DedicatedServer.LOGGER.error("****************************");
+            DedicatedServer.LOGGER.error("YOU ARE RUNNING AS AN ADMINISTRATIVE OR ROOT USER. THIS IS NOT ADVISED.");
+            DedicatedServer.LOGGER.error("YOU ARE OPENING YOURSELF UP TO POTENTIAL RISKS WHEN DOING THIS.");
+            DedicatedServer.LOGGER.error("MALWARE, BAD PLUGINS, AND ATTACKERS WILL HAVE COMPLETE ACCESS AND CONTROL OF YOUR MACHINE.");
+            DedicatedServer.LOGGER.error("****************************");
+            DedicatedServer.LOGGER.error("");
+        }
+        // Paper end
+
         DedicatedServer.LOGGER.info("Loading properties");
         DedicatedServerProperties dedicatedserverproperties = this.settings.getProperties();
 
