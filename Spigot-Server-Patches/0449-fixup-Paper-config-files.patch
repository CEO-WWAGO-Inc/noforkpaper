From 7d5ff20c9e611d7f639038758924aed1d0ed8bfa Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Mon, 16 Mar 2020 13:07:50 -0700
Subject: [PATCH] fixup! Paper config files


diff --git a/src/main/java/com/destroystokyo/paper/PaperCommand.java b/src/main/java/com/destroystokyo/paper/PaperCommand.java
index 132397b3f..70a5609d4 100644
--- a/src/main/java/com/destroystokyo/paper/PaperCommand.java
+++ b/src/main/java/com/destroystokyo/paper/PaperCommand.java
@@ -328,11 +328,11 @@ public class PaperCommand extends Command {
                 }
                 WorldServer world = ((CraftWorld) Bukkit.getWorld(worldName)).getHandle();
 
+                Map<MinecraftKey, Integer> nonEntityTicking = Maps.newHashMap();
+                ChunkProviderServer chunkProviderServer = world.getChunkProvider();
+
                 Collection<Entity> entities = world.entitiesById.values();
                 entities.forEach(e -> {
-                    if (!e.isChunkLoaded()) {
-                        return;
-                    }
                     MinecraftKey key = e.getMinecraftKey();
                     if (e.shouldBeRemoved) return; // Paper
 
@@ -340,19 +340,23 @@ public class PaperCommand extends Command {
                     ChunkCoordIntPair chunk = new ChunkCoordIntPair(e.getChunkX(), e.getChunkZ());
                     info.left++;
                     info.right.put(chunk, info.right.getOrDefault(chunk, 0) + 1);
+                    if (!chunkProviderServer.isInEntityTickingChunk(e)) {
+                        nonEntityTicking.merge(key, Integer.valueOf(1), Integer::sum);
+                    }
                 });
 
                 if (names.size() == 1) {
                     MinecraftKey name = names.iterator().next();
                     Pair<Integer, Map<ChunkCoordIntPair, Integer>> info = list.get(name);
+                    int nonTicking = nonEntityTicking.getOrDefault(name, Integer.valueOf(0)).intValue();
                     if (info == null) {
                         sender.sendMessage(ChatColor.RED + "No entities found.");
                         return;
                     }
-                    sender.sendMessage("Entity: " + name + " Total: " + info.getLeft());
+                    sender.sendMessage("Entity: " + name + " Total Ticking: " + (info.getLeft() - nonTicking) + ", Total Non-Ticking: " + nonTicking);
                     info.getRight().entrySet().stream()
                             .sorted((a, b) -> !a.getValue().equals(b.getValue()) ? b.getValue() - a.getValue() : a.getKey().toString().compareTo(b.getKey().toString()))
-                            .limit(10).forEach(e -> sender.sendMessage("  " + e.getValue() + ": " + e.getKey().x + ", " + e.getKey().z));
+                            .limit(10).forEach(e -> sender.sendMessage("  " + e.getValue() + ": " + e.getKey().x + ", " + e.getKey().z + (chunkProviderServer.isEntityTickingChunk(e.getKey()) ? " (Ticking)" : " (Non-Ticking)")));
                 } else {
                     List<Pair<MinecraftKey, Integer>> info = list.entrySet().stream()
                             .filter(e -> names.contains(e.getKey()))
@@ -367,7 +371,11 @@ public class PaperCommand extends Command {
 
                     int count = info.stream().mapToInt(Pair::getRight).sum();
                     sender.sendMessage("Total: " + count);
-                    info.forEach(e -> sender.sendMessage("  " + e.getValue() + ": " + e.getKey()));
+                    info.forEach(e -> {
+                        int nonTicking = nonEntityTicking.getOrDefault(e.getKey(), Integer.valueOf(0)).intValue();
+                        sender.sendMessage("  " + (e.getValue() - nonTicking) + " (*" + nonTicking + ") " + ": " + e.getKey());
+                    });
+                    sender.sendMessage("* Indicates entities which do not tick");
                 }
                 break;
         }
diff --git a/src/main/java/net/minecraft/server/ChunkProviderServer.java b/src/main/java/net/minecraft/server/ChunkProviderServer.java
index cf9021d60..a385a473a 100644
--- a/src/main/java/net/minecraft/server/ChunkProviderServer.java
+++ b/src/main/java/net/minecraft/server/ChunkProviderServer.java
@@ -511,15 +511,15 @@ public class ChunkProviderServer extends IChunkProvider {
         }
     }
 
-    @Override
-    public boolean a(Entity entity) {
+    public final boolean isInEntityTickingChunk(Entity entity) { return this.a(entity); } // Paper - OBFHELPER
+    @Override public boolean a(Entity entity) {
         long i = ChunkCoordIntPair.pair(MathHelper.floor(entity.locX()) >> 4, MathHelper.floor(entity.locZ()) >> 4);
 
         return this.a(i, PlayerChunk::b);
     }
 
-    @Override
-    public boolean a(ChunkCoordIntPair chunkcoordintpair) {
+    public final boolean isEntityTickingChunk(ChunkCoordIntPair chunkcoordintpair) { return this.a(chunkcoordintpair); } // Paper - OBFHELPER
+    @Override public boolean a(ChunkCoordIntPair chunkcoordintpair) {
         return this.a(chunkcoordintpair.pair(), PlayerChunk::b);
     }
 
-- 
2.25.1

