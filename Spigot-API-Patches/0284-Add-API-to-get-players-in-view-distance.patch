From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SirYwell <hannesgreule@outlook.de>
Date: Sat, 10 Apr 2021 18:58:46 +0200
Subject: [PATCH] Add API to get players in view distance


diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index b01cda41fcc14364af6a43165e97a01a5c08d319..5e4086f5e61af685353d57620c4e30e368692e21 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -3517,6 +3517,67 @@ public interface World extends PluginMessageRecipient, Metadatable, net.kyori.ad
      * @param viewDistance view distance in [2, 32]
      */
     void setNoTickViewDistance(int viewDistance);
+
+    /**
+     * Returns a collection of players in view distance of the chunk at the given location.
+     * @param location the location in the chunk to get the players in range for.
+     * @return the players in view distance of the chunk.
+     */
+    @NotNull
+    default Collection<Player> getPlayersInViewDistance(@NotNull Location location) {
+        return getPlayersInViewDistance(location.getChunk());
+    }
+
+    /**
+     * Returns a collection of players in view distance of the given chunk.
+     * @param chunk the chunk to get the players in range for.
+     * @return the players in view distance of the chunk.
+     */
+    @NotNull
+    default Collection<Player> getPlayersInViewDistance(@NotNull Chunk chunk) {
+        return getPlayersInViewDistance(chunk.getX(), chunk.getZ());
+    }
+
+    /**
+     * Returns a collection of players in view distance of the chunk at the given
+     * chunk coordinates.
+     * @param chunkX the x-coordinate of the chunk.
+     * @param chunkZ the z-coordinate of the chunk.
+     * @return the players in view distance of the chunk.
+     */
+    @NotNull
+    Collection<Player> getPlayersInViewDistance(int chunkX, int chunkZ);
+
+    /**
+     * Returns a collection of players in the no-tick view distance of the chunk
+     * at the given location.
+     * @param location the location in the chunk to get players in range for.
+     * @return the players in no-tick view distance of the chunk.
+     */
+    @NotNull
+    default Collection<Player> getPlayersInNoTickViewDistance(@NotNull Location location) {
+        return getPlayersInNoTickViewDistance(location.getChunk());
+    }
+
+    /**
+     * Returns a collection of players in the no-tick view distance of the given chunk.
+     * @param chunk the chunk to get the players in range for-
+     * @return the players in no-tick view distance of the chunk.
+     */
+    @NotNull
+    default Collection<Player> getPlayersInNoTickViewDistance(@NotNull Chunk chunk) {
+        return getPlayersInNoTickViewDistance(chunk.getX(), chunk.getZ());
+    }
+
+    /**
+     * Returns a collection of players in the no-tick view distance at the given
+     * chunk coordinates.
+     * @param chunkX the x-coordinate of the chunk.
+     * @param chunkZ the z-coordinate of the chunk.
+     * @return the players in no-tick view distance of the chunk.
+     */
+    @NotNull
+    Collection<Player> getPlayersInNoTickViewDistance(int chunkX, int chunkZ);
     // Paper end - view distance api
 
     // Spigot start
