From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Flo0 <flo.roma@web.de>
Date: Mon, 8 Apr 2024 16:22:07 +0200
Subject: [PATCH] Added API method


diff --git a/src/main/java/org/bukkit/Chunk.java b/src/main/java/org/bukkit/Chunk.java
index d547ae2b20c58bc703de4532b3b591dd34ddb1c6..6422d0db92bfaba7081d908b6592526f158a4acb 100644
--- a/src/main/java/org/bukkit/Chunk.java
+++ b/src/main/java/org/bukkit/Chunk.java
@@ -351,6 +351,17 @@ public interface Chunk extends PersistentDataHolder {
     @NotNull
     Collection<GeneratedStructure> getStructures(@NotNull Structure structure);
 
+    // Paper start - Add chunk view API
+    /**
+     * Gets the players that are currently viewing this chunk.
+     * A player is considered to be viewing if they have received the chunk data from the server.
+     * Modifications of this set will not affect the actual viewing players.
+     *
+     * @return a set of players that are currently viewing this chunk
+     */
+    java.util.Set<org.bukkit.entity.Player> getViewingPlayers();
+    // Paper end
+
     /**
      * An enum to specify the load level of a chunk.
      */
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index c6cb4f17469a8f2e60dd3e28d41402851ce5fb21..539168385cc627401453a48d4c6a6dcccd21cd87 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -3707,6 +3707,26 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
     void resetIdleDuration();
     // Paper end
 
+    // Paper start - Add chunk view API
+    /**
+     * Gets the set of chunks that this player is currently viewing.
+     * A chunk is considered viewed if the player has received the chunk data from the server.
+     * Modifying this set will not affect the player's view.
+     *
+     * @return the set of chunks
+     */
+    java.util.Set<org.bukkit.Chunk> getViewedChunks();
+
+    /**
+     * Checks if the player is currently viewing the specified chunk.
+     * A chunk is considered viewed if the player has received the chunk data from the server.
+     *
+     * @param chunk the chunk to check
+     * @return true if the player is viewing the chunk, false otherwise
+     */
+    boolean isViewingChunk(org.bukkit.Chunk chunk);
+    // Paper end
+
     @NotNull
     @Override
     Spigot spigot();
