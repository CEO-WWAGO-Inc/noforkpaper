From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lulu13022002 <41980282+Lulu13022002@users.noreply.github.com>
Date: Sun, 16 Oct 2022 16:12:49 +0200
Subject: [PATCH] More vanilla friendly methods to update trades


diff --git a/src/main/java/net/minecraft/world/entity/npc/AbstractVillager.java b/src/main/java/net/minecraft/world/entity/npc/AbstractVillager.java
index 5eab7d50734551d96128dfebee126a1da4c51375..562bbd9d1b7595bf5d5c175c42cc5ff3f81ee9d9 100644
--- a/src/main/java/net/minecraft/world/entity/npc/AbstractVillager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/AbstractVillager.java
@@ -257,8 +257,13 @@ public abstract class AbstractVillager extends AgeableMob implements InventoryCa
 
         return j >= 0 && j < this.inventory.getContainerSize() ? SlotAccess.forContainer(this.inventory, j) : super.getSlot(mappedIndex);
     }
+    // Paper start
+    protected void updateTrades() {
+        updateTrades(2);
+    }
 
-    protected abstract void updateTrades();
+    public abstract void updateTrades(int amount);
+    // Paper end
 
     protected void addOffersFromItemListings(MerchantOffers recipeList, VillagerTrades.ItemListing[] pool, int count) {
         Set<Integer> set = Sets.newHashSet();
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index 10b45ec24a5a0867106d1694312385ad1e267f43..3a25ccc87b5d6f3a581289d945b15227906bd772 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -918,7 +918,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     @Override
-    protected void updateTrades() {
+    public void updateTrades(int amount) { // Paper
         VillagerData villagerdata = this.getVillagerData();
         Int2ObjectMap<VillagerTrades.ItemListing[]> int2objectmap = (Int2ObjectMap) VillagerTrades.TRADES.get(villagerdata.getProfession());
 
@@ -928,7 +928,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
             if (avillagertrades_imerchantrecipeoption != null) {
                 MerchantOffers merchantrecipelist = this.getOffers();
 
-                this.addOffersFromItemListings(merchantrecipelist, avillagertrades_imerchantrecipeoption, 2);
+                this.addOffersFromItemListings(merchantrecipelist, avillagertrades_imerchantrecipeoption, amount); // Paper
             }
         }
     }
diff --git a/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java b/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
index af092098cdfc528bd9f5d771ead1b685aa051bee..a8c87f0ed7df687c7571154c1cdb84759b6faed8 100644
--- a/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
+++ b/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
@@ -129,13 +129,20 @@ public class WanderingTrader extends net.minecraft.world.entity.npc.AbstractVill
 
     @Override
     protected void updateTrades() {
+        // Paper start
+        updateTrades(5);
+    }
+
+    @Override
+    public void updateTrades(int amount) {
+        // Paper end
         VillagerTrades.ItemListing[] avillagertrades_imerchantrecipeoption = (VillagerTrades.ItemListing[]) VillagerTrades.WANDERING_TRADER_TRADES.get(1);
         VillagerTrades.ItemListing[] avillagertrades_imerchantrecipeoption1 = (VillagerTrades.ItemListing[]) VillagerTrades.WANDERING_TRADER_TRADES.get(2);
 
         if (avillagertrades_imerchantrecipeoption != null && avillagertrades_imerchantrecipeoption1 != null) {
             MerchantOffers merchantrecipelist = this.getOffers();
 
-            this.addOffersFromItemListings(merchantrecipelist, avillagertrades_imerchantrecipeoption, 5);
+            this.addOffersFromItemListings(merchantrecipelist, avillagertrades_imerchantrecipeoption, amount); // Paper
             int i = this.random.nextInt(avillagertrades_imerchantrecipeoption1.length);
             VillagerTrades.ItemListing villagertrades_imerchantrecipeoption = avillagertrades_imerchantrecipeoption1[i];
             MerchantOffer merchantrecipe = villagertrades_imerchantrecipeoption.getOffer(this, this.random);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
index f0b910df1ee471b4d72d97c6197ab14f2854976e..2cc03fe21c879d2cca0c2d5ac85094203fb0709e 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
@@ -99,6 +99,30 @@ public class CraftVillager extends CraftAbstractVillager implements Villager {
     }
 
     // Paper start
+    @Override
+    public boolean increaseLevel(int amount) {
+        Preconditions.checkArgument(amount > 0, "Level earned must be positive");
+
+        it.unimi.dsi.fastutil.ints.Int2ObjectMap<net.minecraft.world.entity.npc.VillagerTrades.ItemListing[]> trades =
+            net.minecraft.world.entity.npc.VillagerTrades.TRADES.get(this.getHandle().getVillagerData().getProfession());
+
+        if (trades == null || trades.isEmpty()) return false;
+
+        amount = Math.min(this.getVillagerLevel() + amount, 5) - this.getVillagerLevel();
+        int initialAmount = amount;
+        while (amount > 0) {
+            this.getHandle().increaseMerchantCareer();
+            amount--;
+        }
+        return initialAmount != amount;
+    }
+
+    @Override
+    public void addTrades(int amount) {
+        Preconditions.checkArgument(amount > 0, "Number of trades unlocked must be positive");
+        this.getHandle().updateTrades(amount);
+    }
+
     @Override
     public int getRestocksToday() {
         return getHandle().numberOfRestocksToday;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftWanderingTrader.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftWanderingTrader.java
index d3618b2fd698552b2331f1114654b3339f3f066f..2e2ec0c5662662a65c1a442d292ae7eb160f7ab6 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftWanderingTrader.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftWanderingTrader.java
@@ -75,5 +75,11 @@ public class CraftWanderingTrader extends CraftAbstractVillager implements Wande
 
         this.getHandle().wanderTarget = pos;
     }
+
+    @Override
+    public void addTrades(int amount) {
+        com.google.common.base.Preconditions.checkArgument(amount > 0, "Number of trades unlocked must be positive");
+        this.getHandle().updateTrades(amount - 1); // This is due to how wandering trader refill their trades by default 5 + 1
+    }
     // Paper end
 }
