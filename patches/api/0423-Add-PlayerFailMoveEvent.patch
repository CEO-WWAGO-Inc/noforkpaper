From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Moulberry <james.jenour@protonmail.com>
Date: Wed, 26 Jul 2023 20:57:11 +0800
Subject: [PATCH] Add PlayerFailMoveEvent


diff --git a/src/main/java/io/papermc/paper/event/player/PlayerFailMoveEvent.java b/src/main/java/io/papermc/paper/event/player/PlayerFailMoveEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..4525618952907237a037fed36e01768c69e48fd9
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/player/PlayerFailMoveEvent.java
@@ -0,0 +1,83 @@
+package io.papermc.paper.event.player;
+
+import org.bukkit.Location;
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.jetbrains.annotations.NotNull;
+
+public class PlayerFailMoveEvent extends PlayerEvent {
+
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+
+    private final FailReason failReason;
+    private boolean allowed;
+    private boolean logWarning;
+    private final Location from;
+    private final Location to;
+
+    public PlayerFailMoveEvent(@NotNull Player who, FailReason failReason, boolean allowed, boolean logWarning, Location from, Location to) {
+        super(who);
+        this.failReason = failReason;
+        this.allowed = allowed;
+        this.logWarning = logWarning;
+        this.from = from;
+        this.to = to;
+    }
+
+    @NotNull
+    public FailReason getFailReason() {
+        return failReason;
+    }
+
+    public Location getFrom() {
+        return from;
+    }
+
+    public Location getTo() {
+        return to;
+    }
+
+    public boolean isAllowed() {
+        return allowed;
+    }
+
+    /**
+     * Set if the check should be bypassed and the movement should be allowed
+     * @param allowed whether to bypass the check
+     */
+    public void setAllowed(boolean allowed) {
+        this.allowed = allowed;
+    }
+
+    public boolean getLogWarning() {
+        return logWarning;
+    }
+
+    /**
+     * Set if a warning is printed to console. eg. "Player123 moved too quickly!"
+     * @param logWarning whether to log warnings
+     */
+    public void setLogWarning(boolean logWarning) {
+        this.logWarning = logWarning;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+
+    public enum FailReason {
+        MOVED_INTO_UNLOADED_CHUNK, // Only fired if the world setting prevent-moving-into-unloaded-chunks is true
+        MOVED_TOO_QUICKLY,
+        MOVED_WRONGLY,
+        CLIPPED_INTO_BLOCK
+    }
+
+}
