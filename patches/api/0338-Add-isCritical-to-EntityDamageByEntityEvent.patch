From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sun, 10 Oct 2021 18:55:04 -0700
Subject: [PATCH] Add isCritical to EntityDamageByEntityEvent


diff --git a/src/main/java/org/bukkit/event/entity/EntityDamageByEntityEvent.java b/src/main/java/org/bukkit/event/entity/EntityDamageByEntityEvent.java
index 869bad7405ec7fa67728e90d8b9f2e11b542611f..19880897f5c4e88512287b9be8addd400e311c93 100644
--- a/src/main/java/org/bukkit/event/entity/EntityDamageByEntityEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityDamageByEntityEvent.java
@@ -10,15 +10,23 @@ import org.jetbrains.annotations.NotNull;
  */
 public class EntityDamageByEntityEvent extends EntityDamageEvent {
     private final Entity damager;
+    private final boolean isCriticalHit; // Paper
 
     public EntityDamageByEntityEvent(@NotNull final Entity damager, @NotNull final Entity damagee, @NotNull final DamageCause cause, final double damage) {
         super(damagee, cause, damage);
         this.damager = damager;
+        this.isCriticalHit = false; // Paper
     }
 
     public EntityDamageByEntityEvent(@NotNull final Entity damager, @NotNull final Entity damagee, @NotNull final DamageCause cause, @NotNull final Map<DamageModifier, Double> modifiers, @NotNull final Map<DamageModifier, ? extends Function<? super Double, Double>> modifierFunctions) {
+        // Paper start
+        this(damager, damagee, cause, modifiers, modifierFunctions, false);
+    }
+    public EntityDamageByEntityEvent(@NotNull final Entity damager, @NotNull final Entity damagee, @NotNull final DamageCause cause, @NotNull final Map<DamageModifier, Double> modifiers, @NotNull final Map<DamageModifier, ? extends Function<? super Double, Double>> modifierFunctions, boolean isCriticalHit) {
+        // Paper end
         super(damagee, cause, modifiers, modifierFunctions);
         this.damager = damager;
+        this.isCriticalHit = isCriticalHit; // Paper
     }
 
     /**
@@ -30,4 +38,15 @@ public class EntityDamageByEntityEvent extends EntityDamageEvent {
     public Entity getDamager() {
         return damager;
     }
+
+    // Paper start
+    /**
+     * Gets if this damage was the result of a critical hit
+     *
+     * @return true if critical hit
+     */
+    public boolean isCriticalHit() {
+        return isCriticalHit;
+    }
+    // Paper end
 }
