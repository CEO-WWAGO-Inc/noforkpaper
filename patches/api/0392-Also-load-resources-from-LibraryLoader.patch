From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nick Hensel <nickhensel25@icloud.com>
Date: Sun, 28 Aug 2022 23:44:18 +0200
Subject: [PATCH] Also load resources from LibraryLoader


diff --git a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
index 345394132df70593800127d34a38f8f8a4dafe00..2dc519b1703be2682e120733774216e4a9d9f776 100644
--- a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
@@ -13,6 +13,7 @@ import java.security.CodeSource;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.Enumeration;
+import java.util.LinkedList;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
@@ -90,12 +91,29 @@ public final class PluginClassLoader extends URLClassLoader { // Spigot
 
     @Override
     public URL getResource(String name) {
-        return findResource(name);
+        // Paper start
+        var resource = findResource(name);
+        if (resource == null && libraryLoader != null) {
+            return libraryLoader.getResource(name);
+        }
+        return resource;
+        // Paper end
     }
 
     @Override
     public Enumeration<URL> getResources(String name) throws IOException {
-        return findResources(name);
+        // Paper start
+        var resources = new LinkedList<URL>();
+        addEnumeration(resources, super.getResources(name));
+        addEnumeration(resources, libraryLoader.getResources(name));
+        return Collections.enumeration(resources);
+        // Paper end
+    }
+
+    private <T> void addEnumeration(LinkedList<T> list, Enumeration<T> enumeration) {
+        while(enumeration.hasMoreElements()) {
+            list.add(enumeration.nextElement());
+        }
     }
 
     @Override
