From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Owen1212055 <23108066+Owen1212055@users.noreply.github.com>
Date: Sun, 26 Dec 2021 20:27:43 -0500
Subject: [PATCH] Freeze Override API


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 8ea81f6ac7503c68f0aea34802843bc545f46db0..8c43efc8840b8b424cfa3466c132c9d521a9048d 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -2949,13 +2949,31 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
         this.entityData.set(Entity.DATA_AIR_SUPPLY_ID, event.getAmount());
         // CraftBukkit end
     }
+    public int realFrozenTicks; // Paper - Frozen Override API
 
     public int getTicksFrozen() {
-        return (Integer) this.entityData.get(Entity.DATA_TICKS_FROZEN);
+        return realFrozenTicks; // Paper - Frozen Override API
     }
+    // Paper start - Frozen Override API
+    public int getSentTicksFrozen() {
+        return this.entityData.get(Entity.DATA_TICKS_FROZEN);
+    }
+
+    public net.kyori.adventure.util.TriState frozenOverride = net.kyori.adventure.util.TriState.NOT_SET;
+    public void updateFrozenEffect() {
+        if (this.frozenOverride == net.kyori.adventure.util.TriState.TRUE) {
+            this.entityData.set(Entity.DATA_TICKS_FROZEN, this.getTicksRequiredToFreeze());
+        } else if (this.frozenOverride == net.kyori.adventure.util.TriState.FALSE) {
+            this.entityData.set(Entity.DATA_TICKS_FROZEN, 0);
+        } else {
+            this.entityData.set(Entity.DATA_TICKS_FROZEN, realFrozenTicks);
+        }
+    }
+    // Paper end - Frozen Override API
 
     public void setTicksFrozen(int frozenTicks) {
-        this.entityData.set(Entity.DATA_TICKS_FROZEN, frozenTicks);
+        updateFrozenEffect(); // Paper - Frozen Override API
+        this.realFrozenTicks = frozenTicks; // Paper - Frozen Override API
     }
 
     public float getPercentFrozen() {
@@ -2965,6 +2983,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
     }
 
     public boolean isFullyFrozen() {
+        if (this.frozenOverride == net.kyori.adventure.util.TriState.TRUE) {return true;} // Paper - Frozen Override API
+         else if (this.frozenOverride == net.kyori.adventure.util.TriState.FALSE) {return false;} // Paper - Frozen Override API
         return this.getTicksFrozen() >= this.getTicksRequiredToFreeze();
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index fe7e22d9a69d69dfcce63faa28e90945ea45fc49..b1821dfa27a219d82e8720104891c5131cef6966 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -568,7 +568,7 @@ public abstract class LivingEntity extends Entity {
 
     protected void tryAddFrost() {
         if (!this.getBlockStateOn().isAir()) {
-            int i = this.getTicksFrozen();
+            int i = this.getSentTicksFrozen(); // Paper - Frozen Override API
 
             if (i > 0) {
                 AttributeInstance attributemodifiable = this.getAttribute(Attributes.MOVEMENT_SPEED);
@@ -577,7 +577,11 @@ public abstract class LivingEntity extends Entity {
                     return;
                 }
 
-                float f = -0.05F * this.getPercentFrozen();
+                // Paper start - Frozen Override API
+                // See this.getPercentFrozen();
+                int requiredFreeze = this.getTicksRequiredToFreeze();
+                float f = -0.05F * ((float) Math.min(this.getSentTicksFrozen(), requiredFreeze) / (float) requiredFreeze);
+                // Paper end - Frozen Override API
 
                 attributemodifiable.addTransientModifier(new AttributeModifier(LivingEntity.SPEED_MODIFIER_POWDER_SNOW_UUID, "Powder snow slow", (double) f, AttributeModifier.Operation.ADDITION));
             }
@@ -4276,6 +4280,9 @@ public abstract class LivingEntity extends Entity {
 
     @Override
     public boolean canFreeze() {
+        if (this.frozenOverride == net.kyori.adventure.util.TriState.TRUE) {return true;} // Paper - Frozen Override API
+        else if (this.frozenOverride == net.kyori.adventure.util.TriState.FALSE) {return false;} // Paper - Frozen Override API
+
         if (this.isSpectator()) {
             return false;
         } else {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 5893d2028679d23315a32433f6affa0c8d63c01c..d54df51020d04b67ad8f4cbd551dd69242f9dfc5 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -660,6 +660,18 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         return this.getHandle().isFullyFrozen();
     }
 
+    // Paper Start - Frozen Override API
+    @Override
+    public net.kyori.adventure.util.TriState getFrozenOverride() {
+        return this.getHandle().frozenOverride;
+    }
+
+    @Override
+    public void setFrozenOverride(net.kyori.adventure.util.TriState override) {
+        this.getHandle().frozenOverride = override;
+        this.getHandle().updateFrozenEffect();
+    }
+    // Paper end - Frozen Override API
     @Override
     public void remove() {
         this.entity.discard();
