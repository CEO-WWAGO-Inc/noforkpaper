From b4f8544ddbaf786e1030c31e1522d0ded92a6489 Mon Sep 17 00:00:00 2001
From: willies952002 <admin@domnian.com>
Date: Wed, 8 May 2019 20:54:16 -0400
Subject: [PATCH] Add EntityDrawCrossbowEvent


diff --git a/src/main/java/com/destroystokyo/paper/event/entity/EntityDrawCrossbowEvent.java b/src/main/java/com/destroystokyo/paper/event/entity/EntityDrawCrossbowEvent.java
new file mode 100644
index 00000000..941aed27
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/entity/EntityDrawCrossbowEvent.java
@@ -0,0 +1,78 @@
+package com.destroystokyo.paper.event.entity;
+
+import com.google.common.collect.Lists;
+import org.bukkit.entity.Entity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.List;
+
+import static java.util.Arrays.asList;
+
+/**
+ * Fired when an entity draws a crossbow
+ */
+public class EntityDrawCrossbowEvent extends EntityEvent implements Cancellable {
+
+    private static final HandlerList handlers = new HandlerList();
+    private boolean canceled;
+
+    private final ItemStack crossbow;
+    private List<ItemStack> ammunition;
+
+    public EntityDrawCrossbowEvent(@NotNull Entity entity, @NotNull ItemStack crossbow, @Nullable List<ItemStack> ammunition) {
+        super(entity);
+        this.crossbow = crossbow;
+        this.ammunition = ammunition != null ? ammunition : Lists.newArrayList();
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return canceled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        canceled = cancel;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    @NotNull
+    public List<ItemStack> getAmmunition() {
+        return ammunition;
+    }
+
+    public void addAmmunition(@NotNull ItemStack... ammunition) {
+        if (this.ammunition.size() > 2) throw new IllegalArgumentException("Cannot have more than 3 projectiles");
+        this.ammunition.addAll(asList(ammunition));
+    }
+
+    public void setAmmunition(@Nullable ItemStack... ammunition) {
+        if (ammunition.length > 3) throw new IllegalArgumentException("Cannot have more than 3 projectiles");
+        this.ammunition = asList(ammunition);
+    }
+
+    public void clearAmmunition() {
+        this.ammunition.clear();
+    }
+
+    @NotNull
+    public ItemStack getCrossbow() {
+        return crossbow;
+    }
+
+}
-- 
2.20.1.windows.1

