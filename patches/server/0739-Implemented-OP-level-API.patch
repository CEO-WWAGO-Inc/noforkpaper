From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MCMDEV <john-m.1@gmx.de>
Date: Thu, 5 Aug 2021 17:00:10 +0200
Subject: [PATCH] Implemented OP level API


diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedPlayerList.java b/src/main/java/net/minecraft/server/dedicated/DedicatedPlayerList.java
index 918f5221e94cbc867349c69c83563e225d2fef1d..d3464011db58266bf6381ea7ef3d6bab2365cf57 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedPlayerList.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedPlayerList.java
@@ -40,11 +40,13 @@ public class DedicatedPlayerList extends PlayerList {
         this.getServer().storeUsingWhiteList(whitelistEnabled);
     }
 
+    // Paper start - OP level API
     @Override
-    public void op(GameProfile profile) {
-        super.op(profile);
+    public void op(GameProfile profile, int permissionLevel) {
+        super.op(profile, permissionLevel);
         this.saveOps();
     }
+    // Paper end
 
     @Override
     public void deop(GameProfile profile) {
@@ -52,6 +54,17 @@ public class DedicatedPlayerList extends PlayerList {
         this.saveOps();
     }
 
+    // Paper start - OP level API
+    public int getOperatorLevel(GameProfile profile)  {
+        return this.getServer().getProfilePermissions(profile);
+    }
+
+    public void setOperatorLevel(GameProfile profile, int value)  {
+        super.op(profile, value);
+        this.saveOps();
+    }
+    // Paper end
+
     @Override
     public void reloadWhiteList() {
         this.loadWhiteList();
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 48045993c8ad4b014cf4a67f7c4db42e014d1c81..d9a572efe0298647755fb6e3a0e49be10dc745e0 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1124,15 +1124,20 @@ public abstract class PlayerList {
         return this.ipBans;
     }
 
-    public void op(GameProfile profile) {
-        this.ops.add(new ServerOpListEntry(profile, this.server.getOperatorUserPermissionLevel(), this.ops.canBypassPlayerLimit(profile)));
+    // Paper start - OP level API
+    public void op(GameProfile profile)  {
+        this.op(profile, this.server.getOperatorUserPermissionLevel());
+    }
+
+    public void op(GameProfile profile, int permissionLevel)  {
+        this.ops.add(new ServerOpListEntry(profile, permissionLevel, this.ops.canBypassPlayerLimit(profile)));
         ServerPlayer entityplayer = this.getPlayer(profile.getId());
 
         if (entityplayer != null) {
             this.sendPlayerPermissionLevel(entityplayer);
         }
-
     }
+    // Paper end
 
     public void deop(GameProfile profile) {
         this.ops.remove(profile);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
index b20bfe5ab165bf86985e5ff2f93f415d9710e0e4..8147e7ffd278dd02419492666042309ff20ae2cd 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -96,6 +96,18 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
         }
     }
 
+    //Paper start - OP level API
+    @Override
+    public int getOpLevel()  {
+        return this.server.getHandle().getOperatorLevel(profile);
+    }
+
+    @Override
+    public void setOpLevel(int value)  {
+        this.server.getHandle().setOperatorLevel(profile, value);
+    }
+    //Paper end
+
     @Override
     public boolean isBanned() {
         if (this.getName() == null) {
diff --git a/src/main/java/org/bukkit/craftbukkit/command/CraftBlockCommandSender.java b/src/main/java/org/bukkit/craftbukkit/command/CraftBlockCommandSender.java
index 83efca7144b4ce9cf7bd6bbbbf9c4426d2472315..1f9fbaa9b67ffd8554b8732f6677e6e711fc4079 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/CraftBlockCommandSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/CraftBlockCommandSender.java
@@ -56,6 +56,18 @@ public class CraftBlockCommandSender extends ServerCommandSender implements Bloc
         throw new UnsupportedOperationException("Cannot change operator status of a block");
     }
 
+    //Paper start - OP level API
+    @Override
+    public int getOpLevel()  {
+        return 2;
+    }
+
+    @Override
+    public void setOpLevel(int value)  {
+        throw new UnsupportedOperationException("Cannot change operator level of a block");
+    }
+    //Paper end
+
     public CommandSourceStack getWrapper() {
         return this.block;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/command/CraftConsoleCommandSender.java b/src/main/java/org/bukkit/craftbukkit/command/CraftConsoleCommandSender.java
index 9383e2fd8469d3203e0fe91dfbb05eb8192bc082..740993519fab9c5837f6a11d78a57171d38eaaf4 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/CraftConsoleCommandSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/CraftConsoleCommandSender.java
@@ -56,6 +56,16 @@ public class CraftConsoleCommandSender extends ServerCommandSender implements Co
         throw new UnsupportedOperationException("Cannot change operator status of server console");
     }
 
+    @Override
+    public int getOpLevel() {
+        return 4;
+    }
+
+    @Override
+    public void setOpLevel(int value) {
+        throw new UnsupportedOperationException("Cannot change operator level of server console");
+    }
+
     @Override
     public boolean beginConversation(Conversation conversation) {
         return this.conversationTracker.beginConversation(conversation);
diff --git a/src/main/java/org/bukkit/craftbukkit/command/CraftRemoteConsoleCommandSender.java b/src/main/java/org/bukkit/craftbukkit/command/CraftRemoteConsoleCommandSender.java
index a3194c8a425d1d808c76ebef9997478f4d399fe0..5e9c7a3bf9d54471aaf76361f32c13d2d6e0694a 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/CraftRemoteConsoleCommandSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/CraftRemoteConsoleCommandSender.java
@@ -40,6 +40,18 @@ public class CraftRemoteConsoleCommandSender extends ServerCommandSender impleme
         throw new UnsupportedOperationException("Cannot change operator status of remote controller.");
     }
 
+    //Paper start - OP level API
+    @Override
+    public int getOpLevel()  {
+        return 4;
+    }
+
+    @Override
+    public void setOpLevel(int value)  {
+        throw new UnsupportedOperationException("Cannot change operator level of remote controller.");
+    }
+    //Paper end
+
     // Paper start
     @Override
     public boolean hasPermission(String name) {
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java b/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
index 53d6950ad270ba901de5226b9daecb683248ad05..f806b2e51e63a51072e2f916cb31190278f160ee 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
@@ -132,6 +132,18 @@ public class ProxiedNativeCommandSender implements ProxiedCommandSender {
         this.getCaller().setOp(value);
     }
 
+    //Paper start - OP level API
+    @Override
+    public int getOpLevel()  {
+        return this.caller.getOpLevel();
+    }
+
+    @Override
+    public void setOpLevel(int value)  {
+        this.caller.setOpLevel(value);
+    }
+    //Paper end
+
     // Spigot start
     @Override
     public org.bukkit.command.CommandSender.Spigot spigot()
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 85ca30aef0703db6859e66c62781ecfd334426e7..21029884c3158bced5707576508a89b5c23f127a 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -998,6 +998,18 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         CraftEntity.getPermissibleBase().setOp(value);
     }
 
+    //Paper start - OP level API
+    @Override
+    public int getOpLevel()  {
+        return CraftEntity.getPermissibleBase().getOpLevel();
+    }
+
+    @Override
+    public void setOpLevel(int value)  {
+        CraftEntity.getPermissibleBase().setOpLevel(value);
+    }
+    //Paper end
+
     @Override
     public void setGlowing(boolean flag) {
         this.getHandle().setGlowingTag(flag);
@@ -1135,6 +1147,18 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
                 public void setOp(boolean value) {
 
                 }
+
+                //Paper start - OP level API
+                @Override
+                public int getOpLevel()  {
+                    return 0;
+                }
+
+                @Override
+                public void setOpLevel(int value)  {
+
+                }
+                //Paper end
             });
         }
         return CraftEntity.perm;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftMinecartCommand.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftMinecartCommand.java
index 446fdca49a5a6999626a7ee3a1d5c168b15a09dd..45667da757e01232e96bcbf0e105de75bf58440d 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftMinecartCommand.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftMinecartCommand.java
@@ -75,6 +75,18 @@ public class CraftMinecartCommand extends CraftMinecart implements CommandMineca
         throw new UnsupportedOperationException("Cannot change operator status of a minecart");
     }
 
+    //Paper start - OP level API
+    @Override
+    public int getOpLevel()  {
+        return 2;
+    }
+
+    @Override
+    public void setOpLevel(int value)  {
+        throw new UnsupportedOperationException("Cannot change operator level of a block");
+    }
+    //Paper end
+
     @Override
     public boolean isPermissionSet(String name) {
         return this.perm.isPermissionSet(name);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 9e8918d03b8213e5f6689fc93030138fd704aca9..4d3f9e65184dfe93f524bc969b669e98c051c3fc 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -182,6 +182,18 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         perm.recalculatePermissions();
     }
 
+    //Paper start - OP level API
+    @Override
+    public int getOpLevel()  {
+        return server.getHandle().getOperatorLevel(this.getProfile());
+    }
+
+    @Override
+    public void setOpLevel(int value)  {
+        server.getHandle().setOperatorLevel(this.getProfile(), value);
+    }
+    //Paper end
+
     @Override
     public boolean isOnline() {
         return server.getPlayer(getUniqueId()) != null;
