From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Noah van der Aa <ndvdaa@gmail.com>
Date: Sun, 5 Sep 2021 22:31:38 +0200
Subject: [PATCH] Add EntityFormWitherRoseEvent


diff --git a/src/main/java/io/papermc/paper/event/entity/EntityFormWitherRoseEvent.java b/src/main/java/io/papermc/paper/event/entity/EntityFormWitherRoseEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..1a6bafd7be3af7ed022fb756da91820490febd30
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/entity/EntityFormWitherRoseEvent.java
@@ -0,0 +1,65 @@
+package io.papermc.paper.event.entity;
+
+import org.bukkit.block.Block;
+import org.bukkit.block.BlockState;
+import org.bukkit.entity.Entity;
+import org.bukkit.entity.Wither;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.block.EntityBlockFormEvent;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Called when an entity dies and forms a wither rose.
+ */
+public class EntityFormWitherRoseEvent extends EntityBlockFormEvent {
+    private static final HandlerList handlers = new HandlerList();
+    private boolean cancelled;
+
+    private final Wither wither;
+
+    public EntityFormWitherRoseEvent(@NotNull Entity entity, @NotNull Wither wither, @NotNull Block block, @NotNull BlockState blockstate) {
+        super(entity, block, blockstate);
+        this.wither = wither;
+    }
+
+    /**
+     * Get the entity that forms the wither rose.
+     * @return the entity that forms the wither rose
+     */
+    @Override
+    @NotNull
+    public Entity getEntity() {
+        return super.getEntity();
+    }
+
+    /**
+     * Get the wither that killed the entity.
+     * @return the wither that killed the entity
+     */
+    @NotNull
+    public Wither getWither() {
+        return this.wither;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancelled) {
+        this.cancelled = cancelled;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+}
