From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: roro1506HD <roro1506mcpro@gmail.com>
Date: Fri, 17 Mar 2023 21:20:55 +0100
Subject: [PATCH] Make banners modifiable with both BannerMeta and
 BlockStateMeta


diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
index 83bbfe1ffd0dc8e168064225a02abcaa49df60ed..1df9ab240c3478cc6154fb24cbbc6c3a944673f4 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
@@ -130,7 +130,7 @@ public final class CraftItemFactory implements ItemFactory {
         case WHITE_WALL_BANNER:
         case YELLOW_BANNER:
         case YELLOW_WALL_BANNER:
-            return meta instanceof CraftMetaBanner ? meta : new CraftMetaBanner(meta);
+            return meta instanceof CraftMetaBanner ? meta : new CraftMetaBanner(meta, material); // Paper - Provide the material
         case ALLAY_SPAWN_EGG:
         case AXOLOTL_SPAWN_EGG:
         case BAT_SPAWN_EGG:
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
index f45e4acee69bd95ff2e41feaf44f5414d2e40df0..5d47d47358dfa082e9b7bf142a24bd2e3ac7dd24 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
@@ -362,7 +362,7 @@ public final class CraftItemStack extends ItemStack {
             case WHITE_WALL_BANNER:
             case YELLOW_BANNER:
             case YELLOW_WALL_BANNER:
-                return new CraftMetaBanner(item.getTag());
+                return new CraftMetaBanner(item.getTag(), material); // Paper - Provide the material
             case ALLAY_SPAWN_EGG:
             case AXOLOTL_SPAWN_EGG:
             case BAT_SPAWN_EGG:
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBanner.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBanner.java
index 881f221517dc062a34489df6f7e006af9540953f..cabf141fcd9ba1ef25d45e46376217c728eae618 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBanner.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBanner.java
@@ -18,7 +18,7 @@ import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.bukkit.inventory.meta.BannerMeta;
 
 @DelegateDeserialization(CraftMetaItem.SerializableMeta.class)
-public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
+public class CraftMetaBanner extends CraftMetaBlockState implements BannerMeta { // Paper - Make banners also modifiable with BlockStateMeta
 
     private static final Set<Material> BANNER_MATERIALS = Sets.newHashSet(
             Material.BLACK_BANNER,
@@ -60,13 +60,21 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
     static final ItemMetaKey COLOR = new ItemMetaKey("Color", "color");
     static final ItemMetaKey PATTERN = new ItemMetaKey("Pattern", "pattern");
 
+    // Paper start - Add banner materials to CraftMetaBlockState's material list
+    static {
+        CraftMetaBlockState.BLOCK_STATE_MATERIALS.addAll(CraftMetaBanner.BANNER_MATERIALS);
+    }
+    // Paper end - Add banner materials to CraftMetaBlockState's material list
+
     private DyeColor base;
     private List<Pattern> patterns = new ArrayList<Pattern>();
 
-    CraftMetaBanner(CraftMetaItem meta) {
-        super(meta);
+    // Paper start - Create new constructor to properly handle different banners
+    CraftMetaBanner(CraftMetaItem meta, Material material) {
+        super(meta, material);
 
-        if (!(meta instanceof CraftMetaBanner)) {
+        if (true || !(meta instanceof CraftMetaBanner)) {
+            // Paper end - Create new constructor to properly handle different banners
             return;
         }
 
@@ -75,10 +83,12 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
         this.patterns = new ArrayList<Pattern>(banner.patterns);
     }
 
-    CraftMetaBanner(CompoundTag tag) {
-        super(tag);
+    // Paper start - Create new constructor to properly handle different banners
+    CraftMetaBanner(CompoundTag tag, Material material) {
+        super(tag, material);
 
-        if (!tag.contains("BlockEntityTag")) {
+        if (true || !tag.contains("BlockEntityTag")) {
+            // Paper end - Create new constructor to properly handle different banners
             return;
         }
 
@@ -102,10 +112,19 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
 
     CraftMetaBanner(Map<String, Object> map) {
         super(map);
+        // Paper start - Correctly deserialize old BannerMeta to new BlockStateMeta
+        if (map.containsKey("blockMaterial")) {
+            return;
+        }
+        this.material = Material.WHITE_BANNER;
+        if (map.containsKey("internal")) {
+            return;
+        }
+        // Paper end - Correctly deserialize old BannerMeta to new BlockStateMeta
 
         String baseStr = SerializableMeta.getString(map, BASE.BUKKIT, true);
         if (baseStr != null) {
-            this.base = DyeColor.legacyValueOf(baseStr);
+            this.setBaseColor(DyeColor.legacyValueOf(baseStr)); // Paper - Use setter to correctly update block state
         }
 
         Iterable<?> rawPatternList = SerializableMeta.getObject(Iterable.class, map, PATTERNS.BUKKIT, true);
@@ -123,6 +142,7 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
     @Override
     void applyToItem(CompoundTag tag) {
         super.applyToItem(tag);
+        if (true) return; // Paper - CraftMetaBlockState already save the banner for us
 
         CompoundTag entityTag = new CompoundTag();
         if (this.base != null) {
@@ -144,46 +164,88 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
 
     @Override
     public DyeColor getBaseColor() {
+        if (true) return ((org.bukkit.block.Banner) this.getBlockState()).getBaseColor(); // Paper - Use underlying block state
         return this.base;
     }
 
+    // Paper start - Use underlying block state
+    private void processModification(java.util.function.Consumer<org.bukkit.block.Banner> consumer) {
+        org.bukkit.block.Banner banner = (org.bukkit.block.Banner) this.getBlockState();
+        consumer.accept(banner);
+        this.setBlockState(banner);
+    }
+
     @Override
     public void setBaseColor(DyeColor color) {
+        if (true) {
+            this.processModification(banner -> banner.setBaseColor(color));
+            return;
+        }
+        // Paper end - Use underlying block state
         this.base = color;
     }
 
     @Override
     public List<Pattern> getPatterns() {
+        if (true) return ((org.bukkit.block.Banner) this.getBlockState()).getPatterns(); // Paper - Use underlying block state
         return new ArrayList<Pattern>(this.patterns);
     }
 
     @Override
     public void setPatterns(List<Pattern> patterns) {
+        // Paper start - Use underlying block state
+        if (true) {
+            this.processModification(banner -> banner.setPatterns(patterns));
+            return;
+        }
+        // Paper end - Use underlying block state
         this.patterns = new ArrayList<Pattern>(patterns);
     }
 
     @Override
     public void addPattern(Pattern pattern) {
+        // Paper start - Use underlying block state
+        if (true) {
+            this.processModification(banner -> banner.addPattern(pattern));
+            return;
+        }
+        // Paper end - Use underlying block state
         this.patterns.add(pattern);
     }
 
     @Override
     public Pattern getPattern(int i) {
+        if (true) return ((org.bukkit.block.Banner) this.getBlockState()).getPattern(i); // Paper - Use underlying block state
         return this.patterns.get(i);
     }
 
     @Override
     public Pattern removePattern(int i) {
+        // Paper start - Use underlying block state
+        if (true) {
+            org.bukkit.block.Banner banner = (org.bukkit.block.Banner) this.getBlockState();
+            Pattern removedPattern = banner.removePattern(i);
+            this.setBlockState(banner);
+            return removedPattern;
+        }
+        // Paper end - Use underlying block state
         return this.patterns.remove(i);
     }
 
     @Override
     public void setPattern(int i, Pattern pattern) {
+        // Paper start - Use underlying block state
+        if (true) {
+            this.processModification(banner -> banner.setPattern(i, pattern));
+            return;
+        }
+        // Paper end - Use underlying block state
         this.patterns.set(i, pattern);
     }
 
     @Override
     public int numberOfPatterns() {
+        if (true) return ((org.bukkit.block.Banner) this.getBlockState()).numberOfPatterns(); // Paper - Use underlying block state
         return this.patterns.size();
     }
 
@@ -191,6 +253,7 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
     ImmutableMap.Builder<String, Object> serialize(ImmutableMap.Builder<String, Object> builder) {
         super.serialize(builder);
 
+        if (true) return builder; // Paper - Let CraftMetaBlockState serialize for us
         if (this.base != null) {
             builder.put(BASE.BUKKIT, this.base.toString());
         }
@@ -206,6 +269,7 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
     int applyHash() {
         final int original;
         int hash = original = super.applyHash();
+        if (true) return original; // Paper - CraftMetaBlockState's hash is good enough
         if (this.base != null) {
             hash = 31 * hash + this.base.hashCode();
         }
@@ -217,6 +281,7 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
 
     @Override
     public boolean equalsCommon(CraftMetaItem meta) {
+        if (true) return super.equalsCommon(meta); // Paper - Only check CraftMetaBlockState's data
         if (!super.equalsCommon(meta)) {
             return false;
         }
@@ -230,11 +295,13 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
 
     @Override
     boolean notUncommon(CraftMetaItem meta) {
+        if (true) return super.notUncommon(meta);  // Paper - Only check CraftMetaBlockState's data
         return super.notUncommon(meta) && (meta instanceof CraftMetaBanner || (this.patterns.isEmpty() && this.base == null));
     }
 
     @Override
     boolean isEmpty() {
+        if (true) return super.isEmpty(); // Paper - Only check CraftMetaBlockState's data
         return super.isEmpty() && this.patterns.isEmpty() && this.base == null;
     }
 
@@ -246,7 +313,7 @@ public class CraftMetaBanner extends CraftMetaItem implements BannerMeta {
     @Override
     public CraftMetaBanner clone() {
         CraftMetaBanner meta = (CraftMetaBanner) super.clone();
-        meta.patterns = new ArrayList<>(this.patterns);
+        // meta.patterns = new ArrayList<>(this.patterns); // Paper - Only copy CraftMetaBlockState's data
         return meta;
     }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
index 1957e82b67b4aa301d12468d5a81d96e621dab49..0fdb24d6716de62e6e01174a10648875825cb437 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
@@ -40,7 +40,7 @@ public class CraftMetaBlockState extends CraftMetaItem implements BlockStateMeta
             Material.BLACK_SHULKER_BOX
     );
 
-    private static final Set<Material> BLOCK_STATE_MATERIALS = Sets.newHashSet(
+    static final Set<Material> BLOCK_STATE_MATERIALS = Sets.newHashSet( // Paper - Change it to package-private, so we can use that in CraftMetaBanner
             Material.FURNACE,
             Material.CHEST,
             Material.TRAPPED_CHEST,
@@ -130,7 +130,7 @@ public class CraftMetaBlockState extends CraftMetaItem implements BlockStateMeta
     @ItemMetaKey.Specific(ItemMetaKey.Specific.To.NBT)
     static final ItemMetaKey BLOCK_ENTITY_TAG = new ItemMetaKey("BlockEntityTag");
 
-    final Material material;
+    Material material; // Paper - Remove final keyword, so it can be changed in CraftMetaBanner's deserialized constructor
     CompoundTag blockEntityTag;
 
     CraftMetaBlockState(CraftMetaItem meta, Material material) {
