From dbcdbb75888b03ba7eb4faea90e903637fa9fb89 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Fri, 28 Sep 2018 08:45:00 -0500
Subject: [PATCH] BlockTickEvents


diff --git a/src/main/java/com/destroystokyo/paper/event/block/BlockTickEvent.java b/src/main/java/com/destroystokyo/paper/event/block/BlockTickEvent.java
new file mode 100644
index 00000000..858f9b99
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/block/BlockTickEvent.java
@@ -0,0 +1,49 @@
+package com.destroystokyo.paper.event.block;
+
+import org.bukkit.World;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.block.BlockEvent;
+
+/**
+ * Called when a block is ticked by the server.
+ */
+public class BlockTickEvent extends BlockEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private final boolean isRandomTick;
+    private boolean cancelled;
+
+    public BlockTickEvent(World world, int x, int y, int z) {
+        this(world, x, y, z, false);
+    }
+
+    public BlockTickEvent(World world, int x, int y, int z, boolean isRandomTick) {
+        super(world.getBlockAt(x, y, z));
+        this.isRandomTick = isRandomTick;
+    }
+
+    /**
+     * Check if this is a random tick
+     *
+     * @return True if random
+     */
+    public boolean isRandomTick() {
+        return isRandomTick;
+    }
+
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/com/destroystokyo/paper/event/block/FluidTickEvent.java b/src/main/java/com/destroystokyo/paper/event/block/FluidTickEvent.java
new file mode 100644
index 00000000..b605c6fc
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/block/FluidTickEvent.java
@@ -0,0 +1,49 @@
+package com.destroystokyo.paper.event.block;
+
+import org.bukkit.World;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.block.BlockEvent;
+
+/**
+ * Called when a fluid is ticked by the server.
+ */
+public class FluidTickEvent extends BlockEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private final boolean isRandomTick;
+    private boolean cancelled;
+
+    public FluidTickEvent(World world, int x, int y, int z) {
+        this(world, x, y, z, false);
+    }
+
+    public FluidTickEvent(World world, int x, int y, int z, boolean isRandomTick) {
+        super(world.getBlockAt(x, y, z));
+        this.isRandomTick = isRandomTick;
+    }
+
+    /**
+     * Check if this is a random tick
+     *
+     * @return True if random
+     */
+    public boolean isRandomTick() {
+        return isRandomTick;
+    }
+
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index 7bfe0b68..9a827fad 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -1413,6 +1413,34 @@ public interface World extends PluginMessageRecipient, Metadatable {
     public default boolean createExplosion(Location loc, float power, boolean setFire, boolean breakBlocks) {
         return createExplosion(loc.getX(), loc.getY(), loc.getZ(), power, setFire, breakBlocks);
     }
+
+    /**
+     * Get if {@link com.destroystokyo.paper.event.block.BlockTickEvent} is enabled for this world
+     *
+     * @return True if enabled
+     */
+    boolean isBlockTickEventEnabled();
+
+    /**
+     * Set if {@link com.destroystokyo.paper.event.block.BlockTickEvent} is enabled for this world
+     *
+     * @param enabled True to enable
+     */
+    void setBlockTickEventEnabled(boolean enabled);
+
+    /**
+     * Get if {@link com.destroystokyo.paper.event.block.FluidTickEvent} is enabled for this world
+     *
+     * @return True if enabled
+     */
+    boolean isFluidTickEventEnabled();
+
+    /**
+     * Set if {@link com.destroystokyo.paper.event.block.FluidTickEvent} is enabled for this world
+     *
+     * @param enabled True to enable
+     */
+    void setFluidTickEventEnabled(boolean enabled);
     // Paper end
 
     /**
-- 
2.19.0

