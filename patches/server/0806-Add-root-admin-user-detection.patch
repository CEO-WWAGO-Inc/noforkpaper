From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: egg82 <eggys82@gmail.com>
Date: Sat, 11 Sep 2021 22:55:14 +0200
Subject: [PATCH] Add root/admin user detection

This patch detects whether or not the server is currently executing as a privileged user and spits out a warning.
The warning serves as a sort-of PSA for newer server admins who don't understand the risks of running as root.
We've seen plenty of bad/malicious plugins hit markets, and there's been a few close-calls with exploits in the past.
Hopefully this helps mitigate some potential damage to servers, even if it is just a warning.

Co-authored-by: Noah van der Aa <ndvdaa@gmail.com>

diff --git a/src/main/java/io/papermc/paper/util/ServerEnvironment.java b/src/main/java/io/papermc/paper/util/ServerEnvironment.java
new file mode 100644
index 0000000000000000000000000000000000000000..2d029bafafd912a35c7d272e9a08b87c23314f88
--- /dev/null
+++ b/src/main/java/io/papermc/paper/util/ServerEnvironment.java
@@ -0,0 +1,64 @@
+package io.papermc.paper.util;
+
+import org.apache.commons.lang.SystemUtils;
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.io.PrintStream;
+import java.util.prefs.Preferences;
+
+public class ServerEnvironment {
+    private static final boolean runningAsRootOrAdmin;
+
+    static {
+        if (SystemUtils.IS_OS_WINDOWS) {
+            // https://stackoverflow.com/a/23538961
+            Preferences prefs = Preferences.systemRoot();
+            PrintStream err = System.err;
+            PrintStream emptyStream = new PrintStream(new OutputStream() {
+                @Override
+                public void write(int b) {
+                }
+            });
+
+            System.err.flush();
+            System.setErr(emptyStream);
+
+            boolean retVal;
+            try {
+                prefs.put("papermc.priv_test", "This is a test performed by the Paper Minecraft server software."); // SecurityException
+                prefs.remove("papermc.priv_test");
+                prefs.flush(); // BackingStoreException
+                retVal = true;
+            } catch (Exception ignored) { // Windows = SecurityException
+                retVal = false;
+            }
+            runningAsRootOrAdmin = retVal;
+
+            System.err.flush();
+            System.setErr(err);
+        } else {
+            String uid = "";
+
+            // https://stackoverflow.com/a/4796235/11171331
+            try {
+                Process child = Runtime.getRuntime().exec("id -u " + System.getProperty("user.name"));
+
+                // Get the input stream and read from it.
+                BufferedReader reader = new BufferedReader(new InputStreamReader(child.getInputStream()));
+                uid = reader.readLine();
+                reader.close();
+            } catch (IOException ignored) {
+            }
+
+            // On Unix systems the UID for the root user is always zero.
+            runningAsRootOrAdmin = uid.equals("0");
+        }
+    }
+
+    public static boolean userIsRootOrAdmin() {
+        return runningAsRootOrAdmin;
+    }
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 22e9dd17f62103c5061435099ce96a3d70d54808..0c7247a3703f26ae3389daaa95ffbb30275c0125 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -261,6 +261,17 @@ public class Main {
                     System.setProperty(TerminalConsoleAppender.JLINE_OVERRIDE_PROPERTY, "false"); // Paper
                 }
 
+                // Paper start - detect running as root
+                if (io.papermc.paper.util.ServerEnvironment.userIsRootOrAdmin()) {
+                    System.err.println("****************************");
+                    System.err.println("YOU ARE RUNNING AS AN ADMINISTRATIVE OR ROOT USER. THIS IS NOT ADVISED.");
+                    System.err.println("YOU ARE OPENING YOURSELF UP TO POTENTIAL RISKS WHEN DOING THIS.");
+                    System.err.println("MALWARE, BAD PLUGINS, AND ATTACKERS WILL HAVE COMPLETE ACCESS AND CONTROL OF YOUR MACHINE.");
+                    System.err.println("****************************");
+                    System.err.println();
+                }
+                // Paper end
+
                 if (Main.class.getPackage().getImplementationVendor() != null && System.getProperty("IReallyKnowWhatIAmDoingISwear") == null) {
                     Date buildDate = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z").parse(Main.class.getPackage().getImplementationVendor()); // Paper
 
