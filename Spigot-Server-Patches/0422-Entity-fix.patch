From 5a76871acc1e57f675ea85b9c94866ae596afeb9 Mon Sep 17 00:00:00 2001
From: IlluzionzDev <jaminstratford@gmail.com>
Date: Sun, 19 Jan 2020 19:24:39 +1300
Subject: [PATCH] Entity fix


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 1dd4a50ce..08ac06349 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -2126,7 +2126,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     // Paper start
     public void stopRiding() { stopRiding(false); }
     public void stopRiding(boolean suppressCancellation) {
-    // Paper end
+        // Paper end
         if (this.vehicle != null) {
             Entity entity = this.vehicle;
 
@@ -2148,8 +2148,8 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
             Entity orig = craft == null ? null : craft.getHandle();
             if (getBukkitEntity() instanceof Vehicle && entity.getBukkitEntity() instanceof LivingEntity) {
                 VehicleEnterEvent event = new VehicleEnterEvent(
-                        (Vehicle) getBukkitEntity(),
-                         entity.getBukkitEntity()
+                    (Vehicle) getBukkitEntity(),
+                    entity.getBukkitEntity()
                 );
                 // Suppress during worldgen
                 if (this.valid) {
@@ -2194,8 +2194,8 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
             Entity orig = craft == null ? null : craft.getHandle();
             if (getBukkitEntity() instanceof Vehicle && entity.getBukkitEntity() instanceof LivingEntity) {
                 VehicleExitEvent event = new VehicleExitEvent(
-                        (Vehicle) getBukkitEntity(),
-                        (LivingEntity) entity.getBukkitEntity(), !suppressCancellation // Paper
+                    (Vehicle) getBukkitEntity(),
+                    (LivingEntity) entity.getBukkitEntity(), !suppressCancellation // Paper
                 );
                 Bukkit.getPluginManager().callEvent(event);
                 CraftEntity craftn = (CraftEntity) entity.getBukkitEntity().getVehicle();
@@ -2667,70 +2667,62 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
             float f = 0.0F;
             BlockPosition blockposition = location; // CraftBukkit
 
-        if (blockposition == null) { // CraftBukkit
-            if (dimensionmanager1.getType() == DimensionManager.THE_END && dimensionmanager == DimensionManager.OVERWORLD) { // CraftBukkit
-                // CraftBukkit start
-                EntityPortalEvent event = CraftEventFactory.callEntityPortalEvent(this, worldserver1, worldserver1.getHighestBlockYAt(HeightMap.Type.MOTION_BLOCKING_NO_LEAVES, worldserver1.getSpawn()), 0);
-                if (event == null) {
-                    return null;
-                }
-                worldserver1 = ((CraftWorld) event.getTo().getWorld()).getHandle();
-                blockposition = new BlockPosition(event.getTo().getX(), event.getTo().getY(), event.getTo().getZ());
-                // CraftBukkit end
-            } else if (dimensionmanager.getType() == DimensionManager.THE_END) { // CraftBukkit
-                // CraftBukkit start
-                EntityPortalEvent event = CraftEventFactory.callEntityPortalEvent(this, worldserver1, worldserver1.getDimensionSpawn() != null ? worldserver1.getDimensionSpawn() : worldserver1.getSpawn(), 0);
-                if (event == null) {
-                    return null;
-                }
-                worldserver1 = ((CraftWorld) event.getTo().getWorld()).getHandle();
-                blockposition = new BlockPosition(event.getTo().getX(), event.getTo().getY(), event.getTo().getZ());
-                // CraftBukkit end
-            } else {
-                double d0 = this.locX();
-                double d1 = this.locZ();
-                double d2 = 8.0D;
-
-                if (dimensionmanager1.getType() == DimensionManager.OVERWORLD && dimensionmanager.getType() == DimensionManager.NETHER) { // CraftBukkit
-                    d0 /= 8.0D;
-                    d1 /= 8.0D;
-                } else if (dimensionmanager1.getType() == DimensionManager.NETHER && dimensionmanager.getType() == DimensionManager.OVERWORLD) { // CraftBukkit
-                    d0 *= 8.0D;
-                    d1 *= 8.0D;
-                }
+            if (blockposition == null) { // CraftBukkit
+                if (dimensionmanager1.getType() == DimensionManager.THE_END && dimensionmanager == DimensionManager.OVERWORLD) { // CraftBukkit
+                    blockposition = worldserver1.getHighestBlockYAt(HeightMap.Type.MOTION_BLOCKING_NO_LEAVES, worldserver1.getSpawn());
+                } else if (dimensionmanager.getType() == DimensionManager.THE_END) { // CraftBukkit
+                    blockposition = worldserver1.getDimensionSpawn();
+                } else {
+                    double d0 = this.locX();
+                    double d1 = this.locZ();
+                    double d2 = 8.0D;
+
+                    if (dimensionmanager1.getType() == DimensionManager.OVERWORLD && dimensionmanager.getType() == DimensionManager.NETHER) { // CraftBukkit
+                        d0 /= 8.0D;
+                        d1 /= 8.0D;
+                    } else if (dimensionmanager1.getType() == DimensionManager.NETHER && dimensionmanager.getType() == DimensionManager.OVERWORLD) { // CraftBukkit
+                        d0 *= 8.0D;
+                        d1 *= 8.0D;
+                    }
 
-                double d3 = Math.min(-2.9999872E7D, worldserver1.getWorldBorder().c() + 16.0D);
-                double d4 = Math.min(-2.9999872E7D, worldserver1.getWorldBorder().d() + 16.0D);
-                double d5 = Math.min(2.9999872E7D, worldserver1.getWorldBorder().e() - 16.0D);
-                double d6 = Math.min(2.9999872E7D, worldserver1.getWorldBorder().f() - 16.0D);
+                    double d3 = Math.min(-2.9999872E7D, worldserver1.getWorldBorder().c() + 16.0D);
+                    double d4 = Math.min(-2.9999872E7D, worldserver1.getWorldBorder().d() + 16.0D);
+                    double d5 = Math.min(2.9999872E7D, worldserver1.getWorldBorder().e() - 16.0D);
+                    double d6 = Math.min(2.9999872E7D, worldserver1.getWorldBorder().f() - 16.0D);
 
-                d0 = MathHelper.a(d0, d3, d5);
-                d1 = MathHelper.a(d1, d4, d6);
-                Vec3D vec3d1 = this.getPortalOffset();
+                    d0 = MathHelper.a(d0, d3, d5);
+                    d1 = MathHelper.a(d1, d4, d6);
+                    Vec3D vec3d1 = this.getPortalOffset();
 
-                blockposition = new BlockPosition(d0, this.locY(), d1);
-                // CraftBukkit start
-                EntityPortalEvent event = CraftEventFactory.callEntityPortalEvent(this, worldserver1, blockposition, world.paperConfig.portalSearchRadius); // Paper - use portal search radius
-                if (event == null) {
-                    return null;
+                    blockposition = new BlockPosition(d0, this.locY(), d1);
+                    ShapeDetector.Shape shapedetector_shape = worldserver1.getTravelAgent().a(blockposition, vec3d, this.getPortalDirection(), vec3d1.x, vec3d1.y, this instanceof EntityHuman);
+
+                    if (shapedetector_shape == null) {
+                        return null;
+                    }
+
+                    blockposition = new BlockPosition(shapedetector_shape.position);
+                    vec3d = shapedetector_shape.velocity;
+                    f = (float) shapedetector_shape.yaw;
                 }
-                worldserver1 = ((CraftWorld) event.getTo().getWorld()).getHandle();
-                blockposition = new BlockPosition(event.getTo().getX(), event.getTo().getY(), event.getTo().getZ());
-                int searchRadius = event.getSearchRadius();
-                // CraftBukkit end
-                ShapeDetector.Shape shapedetector_shape = worldserver1.getTravelAgent().findPortal(blockposition, vec3d, this.getPortalDirection(), vec3d1.x, vec3d1.y, this instanceof EntityHuman, searchRadius); // CraftBukkit - search radius
+            } // CraftBukkit
 
-                if (shapedetector_shape == null) {
+            // CraftBukkit start
+            // SPIGOT-5136 - don't fire event for CraftEntity.teleport
+            if (location == null) {
+                Location enter = this.getBukkitEntity().getLocation();
+                Location exit = new Location(worldserver1.getWorld(), blockposition.getX(), blockposition.getY(), blockposition.getZ());
+
+                EntityPortalEvent event = new EntityPortalEvent(this.getBukkitEntity(), enter, exit);
+                event.getEntity().getServer().getPluginManager().callEvent(event);
+                if (event.isCancelled() || event.getTo() == null || event.getTo().getWorld() == null || !this.isAlive()) {
                     return null;
                 }
 
-                blockposition = new BlockPosition(shapedetector_shape.position);
-                vec3d = shapedetector_shape.velocity;
-                f = (float) shapedetector_shape.yaw;
+                exit = event.getTo();
+                worldserver1 = ((CraftWorld) exit.getWorld()).getHandle();
+                blockposition = new BlockPosition(exit.getX(), exit.getY(), exit.getZ());
             }
-        } // CraftBukkit
-
-            // CraftBukkit start
 
             this.dimension = dimensionmanager;
             this.decouple();
@@ -2967,11 +2959,11 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public void a(AxisAlignedBB axisalignedbb) {
         // CraftBukkit start - block invalid bounding boxes
         double minX = axisalignedbb.minX,
-                minY = axisalignedbb.minY,
-                minZ = axisalignedbb.minZ,
-                maxX = axisalignedbb.maxX,
-                maxY = axisalignedbb.maxY,
-                maxZ = axisalignedbb.maxZ;
+            minY = axisalignedbb.minY,
+            minZ = axisalignedbb.minZ,
+            maxX = axisalignedbb.maxX,
+            maxY = axisalignedbb.maxY,
+            maxZ = axisalignedbb.maxZ;
         double len = axisalignedbb.maxX - axisalignedbb.minX;
         if (len < 0) maxX = minX;
         if (len > 64) maxX = minX + 64.0;
-- 
2.20.1

