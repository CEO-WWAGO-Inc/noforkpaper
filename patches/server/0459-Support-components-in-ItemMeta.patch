From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MiniDigger <admin@benndorf.dev>
Date: Sat, 6 Jun 2020 18:13:42 +0200
Subject: [PATCH] Support components in ItemMeta


diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaItem.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaItem.java
index d2fdd613d36d15a8711785a42939b62d8470b416..68bff13c9b3761f15982803d93d4d3fc877131bb 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaItem.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaItem.java
@@ -885,11 +885,23 @@ class CraftMetaItem implements ItemMeta, Damageable, Repairable, BlockDataMeta {
         return CraftChatMessage.fromJSONComponent(displayName);
     }
 
+    // Paper start
+    @Override
+    public net.md_5.bungee.api.chat.BaseComponent[] getDisplayNameComponent() {
+        return displayName == null ? new net.md_5.bungee.api.chat.BaseComponent[0] : net.md_5.bungee.chat.ComponentSerializer.parse(displayName);
+    }
+    // Paper end
     @Override
     public final void setDisplayName(String name) {
         this.displayName = CraftChatMessage.fromStringOrNullToJSON(name);
     }
 
+    // Paper start
+    @Override
+    public void setDisplayNameComponent(net.md_5.bungee.api.chat.BaseComponent[] component) {
+        this.displayName = net.md_5.bungee.chat.ComponentSerializer.toString(component);
+    }
+    // Paper end
     @Override
     public boolean hasDisplayName() {
         return this.displayName != null;
@@ -1032,6 +1044,14 @@ class CraftMetaItem implements ItemMeta, Damageable, Repairable, BlockDataMeta {
         return this.lore == null ? null : new ArrayList<String>(Lists.transform(this.lore, CraftChatMessage::fromJSONComponent));
     }
 
+    // Paper start
+    @Override
+    public List<net.md_5.bungee.api.chat.BaseComponent[]> getLoreComponents() {
+        return this.lore == null ? null : new ArrayList<>(this.lore.stream().map(entry ->
+            net.md_5.bungee.chat.ComponentSerializer.parse(entry)
+        ).collect(java.util.stream.Collectors.toList()));
+    }
+    // Paper end
     @Override
     public void setLore(List<String> lore) {
         if (lore == null || lore.isEmpty()) {
@@ -1046,6 +1066,21 @@ class CraftMetaItem implements ItemMeta, Damageable, Repairable, BlockDataMeta {
         }
     }
 
+    // Paper start
+    @Override
+    public void setLoreComponents(List<net.md_5.bungee.api.chat.BaseComponent[]> lore) {
+        if (lore == null) {
+            this.lore = null;
+        } else {
+            if (this.lore == null) {
+                safelyAdd(lore, this.lore = new ArrayList<>(lore.size()), false);
+            } else {
+                this.lore.clear();
+                safelyAdd(lore, this.lore, false);
+            }
+        }
+    }
+    // Paper end
     @Override
     public boolean hasCustomModelData() {
         return this.customModelData != null;
@@ -1513,6 +1548,11 @@ class CraftMetaItem implements ItemMeta, Damageable, Repairable, BlockDataMeta {
         }
 
         for (Object object : addFrom) {
+            // Paper start - support components
+            if(object instanceof net.md_5.bungee.api.chat.BaseComponent[]) {
+                addTo.add(net.md_5.bungee.chat.ComponentSerializer.toString((net.md_5.bungee.api.chat.BaseComponent[]) object));
+            } else
+            // Paper end
             if (!(object instanceof String)) {
                 if (object != null) {
                     throw new IllegalArgumentException(addFrom + " cannot contain non-string " + object.getClass().getName());
