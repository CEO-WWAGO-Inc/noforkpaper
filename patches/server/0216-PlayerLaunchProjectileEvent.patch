From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Sat, 21 Jul 2018 03:11:03 -0500
Subject: [PATCH] PlayerLaunchProjectileEvent


diff --git a/src/main/java/net/minecraft/world/item/EggItem.java b/src/main/java/net/minecraft/world/item/EggItem.java
index 32b63407b943fb00d765dbf4e0eefb4b06f801b6..a976bdfc33a409ef3f1439488da310fbb4c45dca 100644
--- a/src/main/java/net/minecraft/world/item/EggItem.java
+++ b/src/main/java/net/minecraft/world/item/EggItem.java
@@ -20,24 +20,35 @@ public class EggItem extends Item {
         ItemStack itemstack = user.getItemInHand(hand);
 
         // world.playSound((EntityHuman) null, entityhuman.getX(), entityhuman.getY(), entityhuman.getZ(), SoundEffects.EGG_THROW, SoundCategory.PLAYERS, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F)); // CraftBukkit - moved down
+        boolean shouldConsume = true; // Paper - PlayerLaunchProjectileEvent
         if (!world.isClientSide) {
             ThrownEgg entityegg = new ThrownEgg(world, user);
 
             entityegg.setItem(itemstack);
             entityegg.shootFromRotation(user, user.getXRot(), user.getYRot(), 0.0F, 1.5F, 1.0F);
             // CraftBukkit start
-            if (!world.addFreshEntity(entityegg)) {
+            // Paper start - PlayerLaunchProjectileEvent
+            com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent event = new com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent((org.bukkit.entity.Player) user.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack), (org.bukkit.entity.Projectile) entityegg.getBukkitEntity());
+            if (!event.callEvent() || !world.addFreshEntity(entityegg)) {
+                // Paper end - PlayerLaunchProjectileEvent
                 if (user instanceof net.minecraft.server.level.ServerPlayer) {
                     ((net.minecraft.server.level.ServerPlayer) user).getBukkitEntity().updateInventory();
                 }
                 return InteractionResultHolder.fail(itemstack);
             }
             // CraftBukkit end
+
+            // Paper start - PlayerLaunchProjectileEvent
+            shouldConsume = event.shouldConsume();
+            if (!shouldConsume && !user.getAbilities().instabuild) {
+                user.containerMenu.sendAllDataToRemote();
+            }
+            // Paper end - PlayerLaunchProjectileEvent
         }
         world.playSound((Player) null, user.getX(), user.getY(), user.getZ(), SoundEvents.EGG_THROW, SoundSource.PLAYERS, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F));
 
         user.awardStat(Stats.ITEM_USED.get(this));
-        if (!user.getAbilities().instabuild) {
+        if (shouldConsume && !user.getAbilities().instabuild) { // Paper - PlayerLaunchProjectileEvent
             itemstack.shrink(1);
         }
 
diff --git a/src/main/java/net/minecraft/world/item/EnderpearlItem.java b/src/main/java/net/minecraft/world/item/EnderpearlItem.java
index c7d4745aed77b23562cde7c68b8870fa239428d4..aaac334475563508e0af0d3711826ae2a94b7818 100644
--- a/src/main/java/net/minecraft/world/item/EnderpearlItem.java
+++ b/src/main/java/net/minecraft/world/item/EnderpearlItem.java
@@ -20,17 +20,29 @@ public class EnderpearlItem extends Item {
         ItemStack itemstack = user.getItemInHand(hand);
 
         // CraftBukkit start - change order
+        boolean shouldConsume = true; // Paper - PlayerLaunchProjectileEvent
         if (!world.isClientSide) {
             ThrownEnderpearl entityenderpearl = new ThrownEnderpearl(world, user);
 
             entityenderpearl.setItem(itemstack);
             entityenderpearl.shootFromRotation(user, user.getXRot(), user.getYRot(), 0.0F, 1.5F, 1.0F);
-            if (!world.addFreshEntity(entityenderpearl)) {
+            // Paper start - PlayerLaunchProjectileEvent
+            com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent event = new com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent((org.bukkit.entity.Player) user.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack), (org.bukkit.entity.Projectile) entityenderpearl.getBukkitEntity());
+            if (!event.callEvent() || !world.addFreshEntity(entityenderpearl)) {
+                // Paper end - PlayerLaunchProjectileEvent
                 if (user instanceof net.minecraft.server.level.ServerPlayer) {
+                    ((net.minecraft.server.level.ServerPlayer) user).connection.send(new net.minecraft.network.protocol.game.ClientboundCooldownPacket(this, 0)); // Paper - PlayerLaunchProjectileEvent; reset cooldown visually
                     ((net.minecraft.server.level.ServerPlayer) user).getBukkitEntity().updateInventory();
                 }
                 return InteractionResultHolder.fail(itemstack);
             }
+
+            // Paper start - PlayerLaunchProjectileEvent
+            shouldConsume = event.shouldConsume();
+            if (!shouldConsume && !user.getAbilities().instabuild) {
+                user.containerMenu.sendAllDataToRemote();
+            }
+            // Paper end - PlayerLaunchProjectileEvent
         }
 
         world.playSound((Player) null, user.getX(), user.getY(), user.getZ(), SoundEvents.ENDER_PEARL_THROW, SoundSource.NEUTRAL, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F));
@@ -38,7 +50,7 @@ public class EnderpearlItem extends Item {
         // CraftBukkit end
 
         user.awardStat(Stats.ITEM_USED.get(this));
-        if (!user.getAbilities().instabuild) {
+        if (shouldConsume && !user.getAbilities().instabuild) { // Paper - PlayerLaunchProjectileEvent
             itemstack.shrink(1);
         }
 
diff --git a/src/main/java/net/minecraft/world/item/ExperienceBottleItem.java b/src/main/java/net/minecraft/world/item/ExperienceBottleItem.java
index 72dfb7b652f515bf9df201d524a851ab56706544..05561a138b6b2aeaf6b6cd6b52dbd0c6c1684808 100644
--- a/src/main/java/net/minecraft/world/item/ExperienceBottleItem.java
+++ b/src/main/java/net/minecraft/world/item/ExperienceBottleItem.java
@@ -22,16 +22,30 @@ public class ExperienceBottleItem extends Item {
     @Override
     public InteractionResultHolder<ItemStack> use(Level world, Player user, InteractionHand hand) {
         ItemStack itemStack = user.getItemInHand(hand);
-        world.playSound((Player)null, user.getX(), user.getY(), user.getZ(), SoundEvents.EXPERIENCE_BOTTLE_THROW, SoundSource.NEUTRAL, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F));
+        // world.playSound((Player)null, user.getX(), user.getY(), user.getZ(), SoundEvents.EXPERIENCE_BOTTLE_THROW, SoundSource.NEUTRAL, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F)); // Paper - PlayerLaunchProjectileEvent; moved down
+        boolean shouldConsume = true; // Paper - PlayerLaunchProjectileEvent
         if (!world.isClientSide) {
             ThrownExperienceBottle thrownExperienceBottle = new ThrownExperienceBottle(world, user);
             thrownExperienceBottle.setItem(itemStack);
             thrownExperienceBottle.shootFromRotation(user, user.getXRot(), user.getYRot(), -20.0F, 0.7F, 1.0F);
-            world.addFreshEntity(thrownExperienceBottle);
+            // Paper start - PlayerLaunchProjectileEvent
+            com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent event = new com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent((org.bukkit.entity.Player) user.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemStack), (org.bukkit.entity.Projectile) thrownExperienceBottle.getBukkitEntity());
+            if (!event.callEvent() || !world.addFreshEntity(thrownExperienceBottle)) {
+                user.containerMenu.sendAllDataToRemote();
+                return InteractionResultHolder.fail(itemStack);
+            }
+
+            shouldConsume = event.shouldConsume();
+            if (!shouldConsume && !user.getAbilities().instabuild) {
+                user.containerMenu.sendAllDataToRemote();
+            }
+
+            world.playSound((Player)null, user.getX(), user.getY(), user.getZ(), SoundEvents.EXPERIENCE_BOTTLE_THROW, SoundSource.NEUTRAL, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F)); // moved from above
+            // Paper end - PlayerLaunchProjectileEvent
         }
 
         user.awardStat(Stats.ITEM_USED.get(this));
-        if (!user.getAbilities().instabuild) {
+        if (shouldConsume && !user.getAbilities().instabuild) { // Paper - PlayerLaunchProjectileEvent
             itemStack.shrink(1);
         }
 
diff --git a/src/main/java/net/minecraft/world/item/FireworkRocketItem.java b/src/main/java/net/minecraft/world/item/FireworkRocketItem.java
index 6249ff490d1f6c26d05a054e6376d94f64858d14..2cf9c4d34910e4844c8fe6d0477dafa2946ed5e5 100644
--- a/src/main/java/net/minecraft/world/item/FireworkRocketItem.java
+++ b/src/main/java/net/minecraft/world/item/FireworkRocketItem.java
@@ -47,8 +47,25 @@ public class FireworkRocketItem extends Item {
             Direction direction = context.getClickedFace();
             FireworkRocketEntity fireworkRocketEntity = new FireworkRocketEntity(level, context.getPlayer(), vec3.x + (double)direction.getStepX() * 0.15D, vec3.y + (double)direction.getStepY() * 0.15D, vec3.z + (double)direction.getStepZ() * 0.15D, itemStack);
             fireworkRocketEntity.spawningEntity = context.getPlayer() == null ? null : context.getPlayer().getUUID(); // Paper
-            level.addFreshEntity(fireworkRocketEntity);
+            // Paper start - PlayerLaunchProjectileEvent
+            Player player = context.getPlayer();
+            boolean shouldConsume = true;
+            if (player != null) {
+                com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent event = new com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent((org.bukkit.entity.Player) player.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemStack), (org.bukkit.entity.Firework) fireworkRocketEntity.getBukkitEntity());
+                if (!event.callEvent() || !level.addFreshEntity(fireworkRocketEntity)) {
+                    return InteractionResult.PASS;
+                }
+
+                shouldConsume = event.shouldConsume();
+                if (!shouldConsume && !player.getAbilities().instabuild) {
+                    player.containerMenu.sendAllDataToRemote();
+                }
+            }
+
+            if (shouldConsume) {
             itemStack.shrink(1);
+            }
+            // Paper end - PlayerLaunchProjectileEvent
         }
 
         return InteractionResult.sidedSuccess(level.isClientSide);
diff --git a/src/main/java/net/minecraft/world/item/LingeringPotionItem.java b/src/main/java/net/minecraft/world/item/LingeringPotionItem.java
index 04370590e6c8051ad17f937576b4cd88f6afb5d9..7b03ebe1231dccf9e108e93b3af7a49807d1d563 100644
--- a/src/main/java/net/minecraft/world/item/LingeringPotionItem.java
+++ b/src/main/java/net/minecraft/world/item/LingeringPotionItem.java
@@ -23,7 +23,14 @@ public class LingeringPotionItem extends ThrowablePotionItem {
 
     @Override
     public InteractionResultHolder<ItemStack> use(Level world, Player user, InteractionHand hand) {
+        // Paper start - PlayerLaunchProjectileEvent
+        InteractionResultHolder<ItemStack> wrapper = super.use(world, user, hand);
+        if (wrapper.getResult() == net.minecraft.world.InteractionResult.FAIL) {
+            return wrapper;
+        }
+        // Paper end - PlayerLaunchProjectileEvent
+
         world.playSound((Player)null, user.getX(), user.getY(), user.getZ(), SoundEvents.LINGERING_POTION_THROW, SoundSource.NEUTRAL, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F));
-        return super.use(world, user, hand);
+        return wrapper; // Paper - PlayerLaunchProjectileEvent
     }
 }
diff --git a/src/main/java/net/minecraft/world/item/SnowballItem.java b/src/main/java/net/minecraft/world/item/SnowballItem.java
index d60e57e84f7d66e1858ab50ac33777feedf1c54d..d5bf6adacff19da67022a4b9e8644e3e74e1adb5 100644
--- a/src/main/java/net/minecraft/world/item/SnowballItem.java
+++ b/src/main/java/net/minecraft/world/item/SnowballItem.java
@@ -26,14 +26,22 @@ public class SnowballItem extends Item {
 
             entitysnowball.setItem(itemstack);
             entitysnowball.shootFromRotation(user, user.getXRot(), user.getYRot(), 0.0F, 1.5F, 1.0F);
-            if (world.addFreshEntity(entitysnowball)) {
-                if (!user.getAbilities().instabuild) {
+            // Paper start - PlayerLaunchProjectileEvent
+            {
+                com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent event = new com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent((org.bukkit.entity.Player) user.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack), (org.bukkit.entity.Projectile) entitysnowball.getBukkitEntity());
+                if (!event.callEvent() || !world.addFreshEntity(entitysnowball)) {
+                    user.containerMenu.sendAllDataToRemote();
+                    return InteractionResultHolder.fail(itemstack);
+                }
+
+                if (!event.shouldConsume() && !user.getAbilities().instabuild) {
+                    user.containerMenu.sendAllDataToRemote();
+                } else {
+                    // Paper end - PlayerLaunchProjectileEvent
                     itemstack.shrink(1);
                 }
 
                 world.playSound((Player) null, user.getX(), user.getY(), user.getZ(), SoundEvents.SNOWBALL_THROW, SoundSource.NEUTRAL, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F));
-            } else if (user instanceof net.minecraft.server.level.ServerPlayer) {
-                ((net.minecraft.server.level.ServerPlayer) user).getBukkitEntity().updateInventory();
             }
         }
         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/item/SplashPotionItem.java b/src/main/java/net/minecraft/world/item/SplashPotionItem.java
index 317e20052bcac9118e1adeb619bedaacc6fcd690..edaab2b8a6cbae6a2f2d8c0416c46e1f855768b6 100644
--- a/src/main/java/net/minecraft/world/item/SplashPotionItem.java
+++ b/src/main/java/net/minecraft/world/item/SplashPotionItem.java
@@ -14,7 +14,14 @@ public class SplashPotionItem extends ThrowablePotionItem {
 
     @Override
     public InteractionResultHolder<ItemStack> use(Level world, Player user, InteractionHand hand) {
+        // Paper start - PlayerLaunchProjectileEvent
+        InteractionResultHolder<ItemStack> wrapper = super.use(world, user, hand);
+        if (wrapper.getResult() == net.minecraft.world.InteractionResult.FAIL) {
+            return wrapper;
+        }
+        // Paper end - PlayerLaunchProjectileEvent
+
         world.playSound((Player)null, user.getX(), user.getY(), user.getZ(), SoundEvents.SPLASH_POTION_THROW, SoundSource.PLAYERS, 0.5F, 0.4F / (world.getRandom().nextFloat() * 0.4F + 0.8F));
-        return super.use(world, user, hand);
+        return wrapper; // Paper - PlayerLaunchProjectileEvent
     }
 }
diff --git a/src/main/java/net/minecraft/world/item/ThrowablePotionItem.java b/src/main/java/net/minecraft/world/item/ThrowablePotionItem.java
index 0673f62f25532955f3552b64f122e644d42027e4..761b44a05e888adceb808452bffa159f18946dc8 100644
--- a/src/main/java/net/minecraft/world/item/ThrowablePotionItem.java
+++ b/src/main/java/net/minecraft/world/item/ThrowablePotionItem.java
@@ -15,15 +15,27 @@ public class ThrowablePotionItem extends PotionItem {
     @Override
     public InteractionResultHolder<ItemStack> use(Level world, Player user, InteractionHand hand) {
         ItemStack itemStack = user.getItemInHand(hand);
+        boolean shouldConsume = true; // Paper - PlayerLaunchProjectileEvent
         if (!world.isClientSide) {
             ThrownPotion thrownPotion = new ThrownPotion(world, user);
             thrownPotion.setItem(itemStack);
             thrownPotion.shootFromRotation(user, user.getXRot(), user.getYRot(), -20.0F, 0.5F, 1.0F);
-            world.addFreshEntity(thrownPotion);
+            // Paper start - PlayerLaunchProjectileEvent
+            com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent event = new com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent((org.bukkit.entity.Player) user.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemStack), (org.bukkit.entity.Projectile) thrownPotion.getBukkitEntity());
+            if (!event.callEvent() || !world.addFreshEntity(thrownPotion)) {
+                user.containerMenu.sendAllDataToRemote();
+                return InteractionResultHolder.fail(itemStack);
+            }
+
+            shouldConsume = event.shouldConsume();
+            if (!shouldConsume && !user.getAbilities().instabuild) {
+                user.containerMenu.sendAllDataToRemote();
+            }
+            // Paper end - PlayerLaunchProjectileEvent
         }
 
         user.awardStat(Stats.ITEM_USED.get(this));
-        if (!user.getAbilities().instabuild) {
+        if (shouldConsume && !user.getAbilities().instabuild) { // Paper - PlayerLaunchProjectileEvent
             itemStack.shrink(1);
         }
 
diff --git a/src/main/java/net/minecraft/world/item/TridentItem.java b/src/main/java/net/minecraft/world/item/TridentItem.java
index 2ccbba4775d7550c5c7277aee9cab9ff7d665693..fa876ddf54780728e7f3ecfe02aa8a16b8ef6f8d 100644
--- a/src/main/java/net/minecraft/world/item/TridentItem.java
+++ b/src/main/java/net/minecraft/world/item/TridentItem.java
@@ -83,21 +83,26 @@ public class TridentItem extends Item implements Vanishable {
                             }
 
                             // CraftBukkit start
-                            if (!world.addFreshEntity(entitythrowntrident)) {
+                            // Paper start - PlayerLaunchProjectileEvent
+                            com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent event = new com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent((org.bukkit.entity.Player) entityhuman.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(stack), (org.bukkit.entity.Projectile) entitythrowntrident.getBukkitEntity());
+                            if (!event.callEvent() || !world.addFreshEntity(entitythrowntrident)) {
+                                // Paper end - PlayerLaunchProjectileEvent
                                 if (entityhuman instanceof net.minecraft.server.level.ServerPlayer) {
                                     ((net.minecraft.server.level.ServerPlayer) entityhuman).getBukkitEntity().updateInventory();
                                 }
                                 return;
                             }
 
+                            if (event.shouldConsume()) { // Paper - PlayerLaunchProjectileEvent
                             stack.hurtAndBreak(1, entityhuman, (entityhuman1) -> {
                                 entityhuman1.broadcastBreakEvent(user.getUsedItemHand());
                             });
+                            } // Paper - PlayerLaunchProjectileEvent
                             entitythrowntrident.pickupItemStack = stack.copy(); // SPIGOT-4511 update since damage call moved
                             // CraftBukkit end
 
                             world.playSound((Player) null, (Entity) entitythrowntrident, SoundEvents.TRIDENT_THROW, SoundSource.PLAYERS, 1.0F, 1.0F);
-                            if (!entityhuman.getAbilities().instabuild) {
+                            if (event.shouldConsume() && !entityhuman.getAbilities().instabuild) { // Paper - PlayerLaunchProjectileEvent
                                 entityhuman.getInventory().removeItem(stack);
                             }
                             // CraftBukkit start - SPIGOT-5458 also need in this branch :(
