From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: masmc05 <masmc05@gmail.com>
Date: Fri, 16 Feb 2024 14:13:30 +0200
Subject: [PATCH] Add paper version util class


diff --git a/src/main/java/io/papermc/paper/util/ServerInfo.java b/src/main/java/io/papermc/paper/util/ServerInfo.java
new file mode 100644
index 0000000000000000000000000000000000000000..f77f8cb0aed2f6409d7f7fab8d9513933465be39
--- /dev/null
+++ b/src/main/java/io/papermc/paper/util/ServerInfo.java
@@ -0,0 +1,74 @@
+package io.papermc.paper.util;
+
+import net.kyori.adventure.key.Key;
+import net.kyori.adventure.util.Services;
+import org.jetbrains.annotations.NotNull;
+import java.util.Optional;
+import java.util.function.Supplier;
+
+/**
+ * A utility class to get information about the server
+ */
+public interface ServerInfo {
+    /**
+     * Get the version of the server
+     * @return the version of the server (e.g. "1.20.4", "1.20.2-pre2", "23w31a")
+     */
+    @NotNull String version();
+
+    /**
+     * Get the version name of the server
+     * @return the version name of the server (e.g. "1.20.4", "1.20.2 Pre-release 2", "23w31a")
+     */
+    @NotNull String versionName();
+
+    /**
+     * Get the api version of the server
+     * @return the api version of the server (e.g. "1.20.4-R0.1-SNAPSHOT")
+     */
+    @NotNull String apiVersion();
+
+    /**
+     * Get the brand of the server
+     * @return the brand of the server (e.g. "Paper")
+     */
+    @NotNull String serverBrand();
+
+    /**
+     * Checks if the server runs exactly the specified version
+     * @param version the version to check (e.g. "1.20.4", "1.20.2-pre2", "23w31a")
+     * @return true if the server runs exactly the specified version
+     */
+    boolean is(@NotNull String version);
+
+    /**
+     * Checks if the server runs a version which is after this version or the same
+     * <p>
+     * Note: This method returns false on unsupported version formats for future compatibility
+     * <p>
+     * Currently supported formats are:
+     * <ul>
+     *     <li>Release versions</li>
+     * @param version the version to check (e.g. "1.20.4")
+     * @return true if the server runs on this version or a newer version
+     */
+    boolean isAtLeast(@NotNull String version);
+
+    /**
+     * Checks if the server is implementing the specified API
+     * @param api the API to check (e.g. "papermc:folia")
+     * @return true if the server is implementing the specified API
+     */
+    boolean isImplementing(@NotNull Key api);
+
+    /**
+     * Get the server info instance
+     * @return the server info instance
+     */
+    static @NotNull ServerInfo serverInfo() {
+        class Holder { // Hide the field from api in a local class
+            private static final Supplier<ServerInfo> instance = Services.service(ServerInfo.class)::orElseThrow;
+        }
+        return Holder.instance.get();
+    }
+}
