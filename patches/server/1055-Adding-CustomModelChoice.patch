From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <mail.ysp@web.de>
Date: Thu, 30 Nov 2023 13:20:22 +0100
Subject: [PATCH] Adding CustomModelChoice


diff --git a/src/main/java/net/minecraft/world/item/crafting/Ingredient.java b/src/main/java/net/minecraft/world/item/crafting/Ingredient.java
index 06fe5b056d78d42cdf78437eeabe1786d596b7f8..4ffc47b8788176eb60412235e021e39a5f0afd2a 100644
--- a/src/main/java/net/minecraft/world/item/crafting/Ingredient.java
+++ b/src/main/java/net/minecraft/world/item/crafting/Ingredient.java
@@ -29,6 +29,7 @@ import net.minecraft.world.entity.player.StackedContents;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.ItemLike;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
 
 public final class Ingredient implements Predicate<ItemStack> {
 
@@ -39,6 +40,7 @@ public final class Ingredient implements Predicate<ItemStack> {
     @Nullable
     private IntList stackingIds;
     public boolean exact; // CraftBukkit
+    public boolean isCustomModelChoice = true; // Paper
     public static final Codec<Ingredient> CODEC = Ingredient.codec(true);
     public static final Codec<Ingredient> CODEC_NONEMPTY = Ingredient.codec(false);
 
@@ -84,6 +86,13 @@ public final class Ingredient implements Predicate<ItemStack> {
 
                     continue;
                 }
+                else if(this.isCustomModelChoice){ // Paper start - Adding CustomModelChoice to bukkit recipes
+                    var material = itemstack.getBukkitStack().getType();
+                    var customModelData = CraftItemStack.getCustomModelData(itemstack);
+                    if(itemstack1.getBukkitStack().getType().equals(material) && CraftItemStack.getCustomModelData(itemstack1) == customModelData)
+                        return true;
+                    continue;
+                } // Paper end - Adding CustomModelChoice to bukkit recipes
                 // CraftBukkit end
                 if (itemstack1.is(itemstack.getItem())) {
                     return true;
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
index 654694515b4b9257a41c8623675fa3abc51a1cb7..938371a98e128dfd8e4fb4fa9fa1e6e623bba75d 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
@@ -23,6 +23,19 @@ import org.bukkit.material.MaterialData;
 @DelegateDeserialization(ItemStack.class)
 public final class CraftItemStack extends ItemStack {
 
+    // Paper start - Adding CustomModelChoice to bukkit recipes
+    public static void setCustomModelData(net.minecraft.world.item.ItemStack stack, int customModelData){
+        stack.getOrCreateTag().putInt("CustomModelData", customModelData);
+    }
+
+    public static int getCustomModelData(net.minecraft.world.item.ItemStack stack){
+        if(!stack.hasTag())
+            return 0;
+        if(!stack.getTag().contains("CustomModelData"))
+            return 0;
+        return stack.getTag().getInt("CustomModelData");
+    }
+    // Paper end - Adding CustomModelChoice to bukkit recipes
+
     // Paper start - MC Utils
     public static net.minecraft.world.item.ItemStack unwrap(ItemStack bukkit) {
         if (bukkit instanceof CraftItemStack craftItemStack) {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftRecipe.java
index 13d25d118eb4d3ef35a4cdfb9bbde9ed83f6c04b..dd639231955150736bd9776032374d682617c39b 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftRecipe.java
@@ -3,6 +3,7 @@ package org.bukkit.craftbukkit.inventory;
 import com.google.common.base.Preconditions;
 import java.util.ArrayList;
 import java.util.List;
+import org.bukkit.inventory.CustomItemData;
 import net.minecraft.world.item.crafting.Ingredient;
 import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.bukkit.inventory.ItemStack;
@@ -30,7 +31,15 @@ public interface CraftRecipe extends Recipe {
         } else if (bukkit instanceof RecipeChoice.ExactChoice) {
             stack = new Ingredient(((RecipeChoice.ExactChoice) bukkit).getChoices().stream().map((mat) -> new net.minecraft.world.item.crafting.Ingredient.ItemValue(CraftItemStack.asNMSCopy(mat))));
             stack.exact = true;
-        } else {
+        } // Paper start - Adding CustomModelChoice to bukkit recipes
+        else if (bukkit instanceof RecipeChoice.CustomModelChoice choice) {
+            stack = new Ingredient(choice.getChoices().stream()
+                                         .map(customItemData -> CraftItemStack.asNMSCopy(customItemData.createStack()))
+                                         .map(Ingredient.ItemValue::new)
+            );
+            stack.isCustomModelChoice = true;
+        } else { // Paper end - Adding CustomModelChoice to bukkit recipes
             throw new IllegalArgumentException("Unknown recipe stack instance " + bukkit);
         }
 
@@ -56,7 +65,15 @@ public interface CraftRecipe extends Recipe {
             }
 
             return new RecipeChoice.ExactChoice(choices);
-        } else {
+        } // Paper start - Adding CustomModelChoice to bukkit recipes
+        else if(list.isCustomModelChoice){
+            List<CustomItemData> choices = new ArrayList<>(list.itemStacks.length);
+            for (net.minecraft.world.item.ItemStack i : list.itemStacks) {
+                choices.add(CustomItemData.fromItemStack(CraftItemStack.asBukkitCopy(i)));
+            }
+            return new RecipeChoice.CustomModelChoice(choices);
+        } else { // Paper end - Adding CustomModelChoice to bukkit recipes
 
             List<org.bukkit.Material> choices = new ArrayList<>(list.itemStacks.length);
             for (net.minecraft.world.item.ItemStack i : list.itemStacks) {
