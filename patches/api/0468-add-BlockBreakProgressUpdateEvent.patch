From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Badbird5907 <50347938+Badbird5907@users.noreply.github.com>
Date: Mon, 4 Mar 2024 22:18:33 -0500
Subject: [PATCH] add BlockBreakProgressUpdateEvent


diff --git a/src/main/java/io/papermc/paper/event/block/BlockBreakProgressUpdateEvent.java b/src/main/java/io/papermc/paper/event/block/BlockBreakProgressUpdateEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..cabd47175c75323ebbb55a0f29031332dbfad56b
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/block/BlockBreakProgressUpdateEvent.java
@@ -0,0 +1,56 @@
+package io.papermc.paper.event.block;
+
+import org.bukkit.block.Block;
+import org.bukkit.entity.Entity;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.block.BlockEvent;
+import org.jetbrains.annotations.ApiStatus;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Range;
+
+/**
+ * Called when the progress of a block break is updated.
+ */
+public class BlockBreakProgressUpdateEvent extends BlockEvent {
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+
+    private final int progress;
+    private final Entity entity;
+
+    @ApiStatus.Internal
+    public BlockBreakProgressUpdateEvent(@NotNull final Block block, final int progress, @NotNull final Entity entity) {
+        super(block);
+        this.progress = progress;
+        this.entity = entity;
+    }
+
+    /**
+     * The progress of the block break.
+     * <p>
+     * The values returned start from -1, but only 0-9 is valid on the client,
+     * everything else is a reset.
+     *
+     * @return The progress of the block break
+     */
+    public int getProgress() {
+        return progress;
+    }
+
+    /**
+     * The entity breaking the block.
+     *
+     * @return The entity breaking the block
+     */
+    @NotNull
+    public Entity getEntity() {
+        return entity;
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+    public static @NotNull HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+}
