From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Daniil Z <idanix@list.ru>
Date: Sat, 13 Mar 2021 21:24:52 +0300
Subject: [PATCH] Use Contract annotation for Configuration API in unclear
 cases


diff --git a/src/main/java/org/bukkit/configuration/ConfigurationSection.java b/src/main/java/org/bukkit/configuration/ConfigurationSection.java
index 5a6e621d5876ce1ec5c5fb5559cb2bfa01ecba20..b13067b6003c62312ecaed4da88aa9fcf7207fd3 100644
--- a/src/main/java/org/bukkit/configuration/ConfigurationSection.java
+++ b/src/main/java/org/bukkit/configuration/ConfigurationSection.java
@@ -11,6 +11,7 @@ import org.bukkit.inventory.ItemStack;
 import org.bukkit.util.Vector;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
+import org.jetbrains.annotations.Contract; // Paper - use Contract for clearer nullable situations
 
 /**
  * Represents a section of a {@link Configuration}
@@ -180,7 +181,7 @@ public interface ConfigurationSection {
      * @param def The default value to return if the path is not found.
      * @return Requested Object.
      */
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public Object get(@NotNull String path, @Nullable Object def);
 
     /**
@@ -254,7 +255,7 @@ public interface ConfigurationSection {
      *     not a String.
      * @return Requested String.
      */
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public String getString(@NotNull String path, @Nullable String def);
 
     /**
@@ -456,7 +457,7 @@ public interface ConfigurationSection {
      *     not a List.
      * @return Requested List.
      */
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public List<?> getList(@NotNull String path, @Nullable List<?> def);
 
     /**
@@ -677,7 +678,7 @@ public interface ConfigurationSection {
      * the path
      * @return Requested object
      */
-    @Nullable
+    @Contract("_, _, !null -> !null") // Paper
     public <T extends Object> T getObject(@NotNull String path, @NotNull Class<T> clazz, @Nullable T def);
 
     /**
@@ -711,7 +712,7 @@ public interface ConfigurationSection {
      * the path
      * @return Requested {@link ConfigurationSerializable} object
      */
-    @Nullable
+    @Contract("_, _, !null -> !null") // Paper
     public <T extends ConfigurationSerializable> T getSerializable(@NotNull String path, @NotNull Class<T> clazz, @Nullable T def);
 
     /**
@@ -740,7 +741,7 @@ public interface ConfigurationSection {
      *     not a Vector.
      * @return Requested Vector.
      */
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public Vector getVector(@NotNull String path, @Nullable Vector def);
 
     /**
@@ -783,7 +784,7 @@ public interface ConfigurationSection {
      *     not an OfflinePlayer.
      * @return Requested OfflinePlayer.
      */
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public OfflinePlayer getOfflinePlayer(@NotNull String path, @Nullable OfflinePlayer def);
 
     /**
@@ -825,7 +826,7 @@ public interface ConfigurationSection {
      *     not an ItemStack.
      * @return Requested ItemStack.
      */
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public ItemStack getItemStack(@NotNull String path, @Nullable ItemStack def);
 
     /**
@@ -867,7 +868,7 @@ public interface ConfigurationSection {
      *     not a Color.
      * @return Requested Color.
      */
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public Color getColor(@NotNull String path, @Nullable Color def);
 
     /**
@@ -909,7 +910,7 @@ public interface ConfigurationSection {
      * a Location.
      * @return Requested Location.
      */
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public Location getLocation(@NotNull String path, @Nullable Location def);
 
     /**
diff --git a/src/main/java/org/bukkit/configuration/MemorySection.java b/src/main/java/org/bukkit/configuration/MemorySection.java
index f03dec0c9e489bb3deac760fd11970055998cf59..765def9b310f3b3cc3a2fcbdc48e9eb39c464e35 100644
--- a/src/main/java/org/bukkit/configuration/MemorySection.java
+++ b/src/main/java/org/bukkit/configuration/MemorySection.java
@@ -16,6 +16,7 @@ import org.bukkit.inventory.ItemStack;
 import org.bukkit.util.Vector;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
+import org.jetbrains.annotations.Contract; // Paper - use Contract for clearer nullable situations
 
 /**
  * A type of {@link ConfigurationSection} that is stored in memory.
@@ -230,7 +231,7 @@ public class MemorySection implements ConfigurationSection {
     }
 
     @Override
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public Object get(@NotNull String path, @Nullable Object def) {
         Validate.notNull(path, "Path cannot be null");
 
@@ -321,7 +322,7 @@ public class MemorySection implements ConfigurationSection {
     }
 
     @Override
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public String getString(@NotNull String path, @Nullable String def) {
         Object val = get(path, def);
         return (val != null) ? val.toString() : def;
@@ -414,7 +415,7 @@ public class MemorySection implements ConfigurationSection {
     }
 
     @Override
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public List<?> getList(@NotNull String path, @Nullable List<?> def) {
         Object val = get(path, def);
         return (List<?>) ((val instanceof List) ? val : def);
@@ -702,7 +703,7 @@ public class MemorySection implements ConfigurationSection {
         return getObject(path, clazz, (def != null && clazz.isInstance(def)) ? clazz.cast(def) : null);
     }
 
-    @Nullable
+    @Contract("_, _, !null -> !null") // Paper
     @Override
     public <T extends Object> T getObject(@NotNull String path, @NotNull Class<T> clazz, @Nullable T def) {
         Validate.notNull(clazz, "Class cannot be null");
@@ -716,7 +717,7 @@ public class MemorySection implements ConfigurationSection {
         return getObject(path, clazz);
     }
 
-    @Nullable
+    @Contract("_, _, !null -> !null") // Paper
     @Override
     public <T extends ConfigurationSerializable> T getSerializable(@NotNull String path, @NotNull Class<T> clazz, @Nullable T def) {
         return getObject(path, clazz, def);
@@ -729,7 +730,7 @@ public class MemorySection implements ConfigurationSection {
     }
 
     @Override
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public Vector getVector(@NotNull String path, @Nullable Vector def) {
         return getSerializable(path, Vector.class, def);
     }
@@ -746,7 +747,7 @@ public class MemorySection implements ConfigurationSection {
     }
 
     @Override
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public OfflinePlayer getOfflinePlayer(@NotNull String path, @Nullable OfflinePlayer def) {
         return getSerializable(path, OfflinePlayer.class, def);
     }
@@ -763,7 +764,7 @@ public class MemorySection implements ConfigurationSection {
     }
 
     @Override
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public ItemStack getItemStack(@NotNull String path, @Nullable ItemStack def) {
         return getSerializable(path, ItemStack.class, def);
     }
@@ -780,7 +781,7 @@ public class MemorySection implements ConfigurationSection {
     }
 
     @Override
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public Color getColor(@NotNull String path, @Nullable Color def) {
         return getSerializable(path, Color.class, def);
     }
@@ -797,7 +798,7 @@ public class MemorySection implements ConfigurationSection {
     }
 
     @Override
-    @Nullable
+    @Contract("_, !null -> !null") // Paper
     public Location getLocation(@NotNull String path, @Nullable Location def) {
         return getSerializable(path, Location.class, def);
     }
