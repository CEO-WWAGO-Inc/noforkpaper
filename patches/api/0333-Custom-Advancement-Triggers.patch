From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Wed, 21 Apr 2021 23:55:51 -0700
Subject: [PATCH] Custom Advancement Triggers


diff --git a/src/main/java/io/papermc/paper/advancements/AdvancementManager.java b/src/main/java/io/papermc/paper/advancements/AdvancementManager.java
new file mode 100644
index 0000000000000000000000000000000000000000..966f715deabbf33a7c8e9a7af95676de3d14aea6
--- /dev/null
+++ b/src/main/java/io/papermc/paper/advancements/AdvancementManager.java
@@ -0,0 +1,21 @@
+package io.papermc.paper.advancements;
+
+import org.bukkit.NamespacedKey;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.Map;
+
+public interface AdvancementManager {
+    /**
+     * Registers a custom trigger
+     *
+     * @param trigger
+     * @param <T>
+     * @return
+     */
+    @NotNull
+    <T extends CustomAdvancementTrigger<D>, D> T registerCustomTrigger(@NotNull T trigger);
+
+    @NotNull
+    Map<NamespacedKey, CustomAdvancementTrigger> getCustomTriggers();
+}
diff --git a/src/main/java/io/papermc/paper/advancements/CustomAdvancementTrigger.java b/src/main/java/io/papermc/paper/advancements/CustomAdvancementTrigger.java
new file mode 100644
index 0000000000000000000000000000000000000000..0cd512172834a49388ac8de76565ea80463568a6
--- /dev/null
+++ b/src/main/java/io/papermc/paper/advancements/CustomAdvancementTrigger.java
@@ -0,0 +1,59 @@
+package io.papermc.paper.advancements;
+
+import com.google.common.base.Preconditions;
+import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
+import com.google.gson.JsonObject;
+import org.bukkit.Keyed;
+import org.bukkit.entity.Player;
+import org.jetbrains.annotations.ApiStatus;
+import org.jetbrains.annotations.NotNull;
+
+import java.lang.reflect.ParameterizedType;
+import java.lang.reflect.Type;
+import java.util.function.BiConsumer;
+import java.util.function.Predicate;
+
+/**
+ * Should be extended by all classes representing custom triggers.
+ *
+ * @param <D> a data holder class for information parsed from the advancement JSON
+ */
+public abstract class CustomAdvancementTrigger<D> implements Keyed {
+
+    private static final Gson GSON = new GsonBuilder().create();
+
+    @ApiStatus.Internal
+    BiConsumer<Player, Predicate<D>> triggerConsumer;
+    private final Type triggerInstanceType;
+
+    protected CustomAdvancementTrigger() {
+        Type superClass = getClass().getGenericSuperclass();
+        Preconditions.checkArgument(superClass instanceof ParameterizedType, "%s isn't a parameterized type", superClass);
+        this.triggerInstanceType = ((ParameterizedType) superClass).getActualTypeArguments()[0];
+    }
+
+    /**
+     * This is the conditions object of the advancement JSON. Can be overriden by custom trigger implementations.
+     * <p>
+     * Default implementation uses GSON's standard adapters to attempt to create the custom trigger.
+     *
+     * @param conditionsObject the conditions JSON object
+     * @return an instance of the data class
+     */
+    @NotNull
+    protected D createInstance(@NotNull JsonObject conditionsObject) {
+        return GSON.fromJson(conditionsObject, this.triggerInstanceType);
+    }
+
+    /**
+     * Needs to be called to trigger the advancement at the
+     * end of some logic in the implementing class.
+     *
+     * @param player Player the advancement pertains to
+     * @param instancePredicate supplies the instance of the trigger
+     */
+    protected final void trigger(@NotNull Player player, @NotNull Predicate<D> instancePredicate) {
+        triggerConsumer.accept(player, instancePredicate);
+    }
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index d36e4bc3c3713407704b865574cba28662f17315..e2066e322b19289a1d2f6a9c5b875fddde7e1e4f 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -2057,6 +2057,16 @@ public final class Bukkit {
     public static io.papermc.paper.datapack.DatapackManager getDatapackManager() {
         return server.getDatapackManager();
     }
+
+    /**
+     * Returns the {@link io.papermc.paper.advancements.AdvancementManager}
+     *
+     * @return the advancements manager
+     */
+    @NotNull
+    public static io.papermc.paper.advancements.AdvancementManager getAdvancementManager() {
+        return server.getAdvancementManager();
+    }
     // Paper end
 
     @NotNull
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 83870d54a5ff1017ad7455e9c931fdee54354434..cd1442dfd6672f52be48e358c1ee0892e5742eeb 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1788,5 +1788,13 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      */
     @NotNull
     io.papermc.paper.datapack.DatapackManager getDatapackManager();
+
+    /**
+     * Returns the {@link io.papermc.paper.advancements.AdvancementManager}
+     *
+     * @return the advancements manager
+     */
+    @NotNull
+    io.papermc.paper.advancements.AdvancementManager getAdvancementManager();
     // Paper end
 }
