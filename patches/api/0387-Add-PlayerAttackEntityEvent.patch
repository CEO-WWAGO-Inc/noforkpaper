From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Owen1212055 <23108066+Owen1212055@users.noreply.github.com>
Date: Sun, 18 Sep 2022 13:10:28 -0400
Subject: [PATCH] Add PlayerAttackEntityEvent


diff --git a/src/main/java/io/papermc/paper/event/player/PlayerAttackEntityEvent.java b/src/main/java/io/papermc/paper/event/player/PlayerAttackEntityEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..59b47a670c285accd6c95324415d5ad2aa389838
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/player/PlayerAttackEntityEvent.java
@@ -0,0 +1,58 @@
+package io.papermc.paper.event.player;
+
+import org.bukkit.entity.Entity;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Called when the player tries to attack an entity.
+ *
+ * This occurs before any of the damage logic, so cancelling this event
+ * will prevent any sort of sounds from being played when attacking.
+ */
+public class PlayerAttackEntityEvent extends PlayerEvent implements Cancellable {
+
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+
+    @NotNull
+    private final Entity attacked;
+    private boolean isCancelled = false;
+
+    public PlayerAttackEntityEvent(@NotNull Player who, @NotNull Entity attacked) {
+        super(who);
+        this.attacked = attacked;
+    }
+
+    /**
+     * Gets the entity that was attacked in this event.
+     * @return entity that was attacked
+     */
+    @NotNull
+    public Entity getAttacked() {
+        return this.attacked;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return this.isCancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.isCancelled = cancel;
+    }
+}
