From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Owen1212055 <23108066+Owen1212055@users.noreply.github.com>
Date: Sun, 5 Dec 2021 14:58:17 -0500
Subject: [PATCH] Expand FallingBlock API

 - add auto expire setting
 - add setter for block data

== AT ==
public net.minecraft.world.entity.item.FallingBlockEntity blockState

diff --git a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
index 5164c2bfb32275beff01b6e76dfbd9d031231bc6..e6f75a9cac46c8e3ddba664a9d5b27b665a94cb4 100644
--- a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
@@ -66,6 +66,7 @@ public class FallingBlockEntity extends Entity {
     @Nullable
     public CompoundTag blockData;
     protected static final EntityDataAccessor<BlockPos> DATA_START_POS = SynchedEntityData.defineId(FallingBlockEntity.class, EntityDataSerializers.BLOCK_POS);
+    public boolean autoExpire = true; // Paper - Auto expire setting
 
     public FallingBlockEntity(EntityType<? extends FallingBlockEntity> type, Level world) {
         super(type, world);
@@ -180,7 +181,7 @@ public class FallingBlockEntity extends Entity {
                 }
 
                 if (!this.onGround() && !flag1) {
-                    if (!this.level().isClientSide && (this.time > 100 && (blockposition.getY() <= this.level().getMinBuildHeight() || blockposition.getY() > this.level().getMaxBuildHeight()) || this.time > 600)) {
+                    if (!this.level().isClientSide && ((this.time > 100 && autoExpire) && (blockposition.getY() <= this.level().getMinBuildHeight() || blockposition.getY() > this.level().getMaxBuildHeight()) || (this.time > 600 && autoExpire))) { // Paper - Auto expire setting
                         if (this.dropItem && this.level().getGameRules().getBoolean(GameRules.RULE_DOENTITYDROPS)) {
                             this.spawnAtLocation((ItemLike) block);
                         }
@@ -328,6 +329,7 @@ public class FallingBlockEntity extends Entity {
         }
 
         nbt.putBoolean("CancelDrop", this.cancelDrop);
+        if (!autoExpire) {nbt.putBoolean("Paper.AutoExpire", false);} // Paper - AutoExpire setting
     }
 
     @Override
@@ -363,6 +365,11 @@ public class FallingBlockEntity extends Entity {
             this.setOrigin(new org.bukkit.Location(this.level().getWorld(), srcX, srcY, srcZ));
         }
         // Paper end
+        // Paper start
+         if (nbt.contains("Paper.AutoExpire")) {
+            this.autoExpire = nbt.getBoolean("Paper.AutoExpire");
+         }
+        // Paper end
     }
 
     public void setHurtsEntities(float fallHurtAmount, int fallHurtMax) {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftFallingBlock.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftFallingBlock.java
index e85a5dcae1a752c48dc457d05191355d72ca4443..e4041c13a97546e3d4947ff1e83d86ae583b51e8 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftFallingBlock.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftFallingBlock.java
@@ -33,6 +33,19 @@ public class CraftFallingBlock extends CraftEntity implements FallingBlock {
     public BlockData getBlockData() {
         return CraftBlockData.fromData(this.getHandle().getBlockState());
     }
+    // Paper start
+    @Override
+    public void setBlockData(@org.jetbrains.annotations.NotNull final BlockData blockData) {
+        Preconditions.checkNotNull(blockData, "blockData");
+        if (!(blockData instanceof CraftBlockData craftBlockData))  {
+            throw new IllegalArgumentException("Unknown implementation of BlockData: " + blockData);
+        }
+        if (this.isValid()) {
+            throw new IllegalStateException("The BlockData of FallingBlockEntity can only be changed if the entity hasn't been spawned yet");
+        }
+        this.getHandle().blockState = craftBlockData.getState();
+    }
+    // Paper end
 
     @Override
     public boolean getDropItem() {
@@ -101,4 +114,15 @@ public class CraftFallingBlock extends CraftEntity implements FallingBlock {
             this.setHurtEntities(true);
         }
     }
+    // Paper Start - Auto expire setting
+    @Override
+    public boolean doesAutoExpire() {
+        return this.getHandle().autoExpire;
+    }
+
+    @Override
+    public void shouldAutoExpire(boolean autoExpires) {
+        this.getHandle().autoExpire = autoExpires;
+    }
+    // Paper End - Auto expire setting
 }
